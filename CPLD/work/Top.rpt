 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: Top                                 Date:  1-15-2024, 11:14PM
Device Used: XC95288XL-6-TQ144
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
277/288 ( 96%) 989 /1440 ( 69%) 655/864 ( 76%)   202/288 ( 70%) 85 /117 ( 73%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          18/18*      48/54       63/90       1/ 8
FB2          14/18       50/54       82/90       3/10
FB3          18/18*      27/54       45/90       1/ 5
FB4          16/18       51/54       53/90       3/ 6
FB5          18/18*      37/54       66/90       6/ 8
FB6          17/18       51/54       84/90       7/ 8
FB7          18/18*      42/54       67/90       4/ 4*
FB8          18/18*      46/54       72/90       5/ 5*
FB9          17/18       39/54       69/90       6/ 9
FB10         18/18*      46/54       84/90       8/10
FB11         18/18*      44/54       48/90       5/ 7
FB12         18/18*      42/54       58/90       6/ 6*
FB13         18/18*      42/54       59/90       5/ 6
FB14         18/18*      38/54       55/90       8/ 8*
FB15         18/18*      31/54       59/90       9/ 9*
FB16         15/18       21/54       25/90       8/ 8*
             -----       -----       -----      -----    
            277/288     655/864     989/1440    85/117

* - Resource is exhausted

** Global Control Resources **

Signal 'q50m' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Signal 'nres' mapped onto global set/reset net GSR.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   23          23    |  I/O              :    81     109
Output        :   42          42    |  GCK/IO           :     2       3
Bidirectional :   18          18    |  GTS/IO           :     1       4
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    1           1    |
                 ----        ----
        Total     85          85

** Power Data **

There are 274 macrocells in high performance mode (MCHP).
There are 3 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'Top.ise'.
WARNING:Cpld:1007 - Removing unused input(s) 'mlb'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'mx'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'vpb'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'phi2_io' is
   ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'N26' is
   ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
WARNING:Cpld - The signal(s) 'phi2' are in combinational feedback loops.
   These signals may cause hazards/glitches. Apply the NOREDUCE parameter to the
   hazard reduction circuitry.
   Timing analysis of paths involving this node may be inaccurate or incomplete.
*************************  Summary of Mapped Logic  ************************

** 60 Outputs **

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
VA<16>                                                                              6     11    FB2_2   9    I/O     O       STD  FAST 
VA<15>                                                                              8     15    FB2_3   10   I/O     O       STD  FAST 
VA<18>                                                                              3     6     FB2_5   11   I/O     O       STD  FAST 
nframsel                                                                            12    24    FB4_2   2    GTS/I/O O       STD  FAST 
VA<17>                                                                              3     6     FB4_6   4    I/O     O       STD  FAST 
VA<14>                                                                              4     7     FB4_14  7    I/O     O       STD  FAST 
spi_nsel2                                                                           1     4     FB5_2   34   I/O     O       STD  FAST 
phi2_io                                                                             4     5     FB5_8   38   GCK/I/O I/O     STD  FAST RESET
spi_nsel3                                                                           1     4     FB5_10  39   I/O     O       STD  FAST 
spi_nsel4                                                                           1     4     FB5_12  40   I/O     O       STD  FAST 
dena                                                                                3     6     FB5_14  41   I/O     O       STD  FAST RESET
pet_vsync                                                                           7     14    FB5_15  43   I/O     O       STD  FAST RESET
VA<8>                                                                               4     7     FB6_2   135  I/O     O       STD  FAST 
VA<7>                                                                               5     8     FB6_3   136  I/O     O       STD  FAST 
VA<13>                                                                              7     15    FB6_5   137  I/O     O       STD  FAST 
VA<12>                                                                              7     15    FB6_6   138  I/O     O       STD  FAST 
ramrwb                                                                              2     5     FB6_8   139  I/O     O       STD  FAST 
dclk                                                                                2     2     FB7_3   45   I/O     O       STD  FAST RESET
pxl                                                                                 2     3     FB7_5   46   I/O     O       STD  FAST RESET
hsync                                                                               4     8     FB7_12  48   I/O     O       STD  FAST SET
vsync                                                                               7     14    FB7_15  49   I/O     O       STD  FAST SET
VA<4>                                                                               5     8     FB8_2   130  I/O     O       STD  FAST 
VA<5>                                                                               5     8     FB8_3   131  I/O     O       STD  FAST 
VA<9>                                                                               4     7     FB8_5   132  I/O     O       STD  FAST 
VA<6>                                                                               5     8     FB8_8   133  I/O     O       STD  FAST 
VA<11>                                                                              13    16    FB8_10  134  I/O     O       STD  FAST 
spi_clk                                                                             13    7     FB9_2   50   I/O     O       STD  FAST 
nflash                                                                              2     5     FB9_5   52   I/O     O       STD  FAST 
spi_out                                                                             2     3     FB9_8   54   I/O     O       STD  FAST 
phi2                                                                                2     4     FB9_12  57   I/O     I/O     STD  FAST 
VD<6>                                                                               4     11    FB9_14  58   I/O     I/O     STD  FAST 
VD<7>                                                                               5     12    FB9_17  59   I/O     I/O     STD  FAST 
VA<0>                                                                               5     8     FB10_5  119  I/O     O       STD  FAST 
VA<1>                                                                               5     8     FB10_6  120  I/O     O       STD  FAST 
VA<2>                                                                               5     8     FB10_8  121  I/O     O       STD  FAST 
VA<10>                                                                              4     7     FB10_10 124  I/O     O       STD  FAST 
VA<3>                                                                               5     8     FB10_11 125  I/O     O       STD  FAST 
nvramsel                                                                            3     5     FB10_12 126  I/O     O       STD  FAST 
spi_nsel5                                                                           1     4     FB11_3  60   I/O     O       STD  FAST 
nsel4                                                                               2     16    FB11_11 66   I/O     O       STD  FAST 

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
nsel2                                                                               2     16    FB11_12 68   I/O     O       STD  FAST 
nsel1                                                                               2     16    FB11_14 69   I/O     O       STD  FAST 
VD<3>                                                                               3     5     FB12_2  110  I/O     I/O     STD  FAST 
VD<2>                                                                               4     11    FB12_3  111  I/O     I/O     STD  FAST 
VD<4>                                                                               4     11    FB12_5  112  I/O     I/O     STD  FAST 
VD<1>                                                                               4     11    FB12_8  113  I/O     I/O     STD  FAST 
VD<5>                                                                               4     11    FB12_10 115  I/O     I/O     STD  FAST 
VD<0>                                                                               4     11    FB12_12 116  I/O     I/O     STD  FAST 
FA<15>                                                                              6     10    FB13_2  71   I/O     O       STD  FAST 
D<7>                                                                                5     12    FB13_15 77   I/O     I/O     STD  FAST 
D<6>                                                                                4     11    FB13_17 78   I/O     I/O     STD  FAST 
FA<16>                                                                              4     9     FB14_11 105  I/O     O       STD  FAST 
FA<17>                                                                              3     4     FB14_14 106  I/O     O       STD  FAST 
FA<18>                                                                              3     4     FB14_15 107  I/O     O       STD  FAST 
D<5>                                                                                4     11    FB15_2  79   I/O     I/O     STD  FAST 
D<4>                                                                                4     11    FB15_3  80   I/O     I/O     STD  FAST 
D<3>                                                                                3     5     FB15_8  81   I/O     I/O     STD  FAST 
D<2>                                                                                4     11    FB15_10 82   I/O     I/O     STD  FAST 
D<1>                                                                                4     11    FB15_11 83   I/O     I/O     STD  FAST 
D<0>                                                                                4     11    FB15_14 86   I/O     I/O     STD  FAST 

** 217 Buried Nodes **

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
sr_load                                                                             1     4     FB1_1   STD  RESET
viccy/rline_cnt<0>                                                                  2     3     FB1_2   STD  RESET
wp_romPET                                                                           3     4     FB1_3   STD  RESET
wp_romA                                                                             3     4     FB1_4   STD  RESET
wp_rom9                                                                             3     4     FB1_5   STD  RESET
vis_enable                                                                          3     4     FB1_6   STD  RESET
vidblock<2>                                                                         3     4     FB1_7   STD  RESET
vidblock<1>                                                                         3     4     FB1_8   STD  RESET
viccy/is_80                                                                         3     5     FB1_9   STD  RESET
viccy/vid_addr_hold<9>                                                              4     6     FB1_10  STD  RESET
viccy/vid_addr_hold<8>                                                              4     6     FB1_11  STD  RESET
viccy/vid_addr_hold<7>                                                              4     6     FB1_12  STD  RESET
viccy/vid_addr_hold<6>                                                              4     6     FB1_13  STD  RESET
viccy/vid_addr_hold<5>                                                              4     6     FB1_14  STD  RESET
viccy/vid_addr_hold<4>                                                              4     6     FB1_15  STD  RESET
viccy/pxl_fetch                                                                     4     6     FB1_16  STD  RESET
viccy/vid_addr_hold<13>                                                             5     7     FB1_17  STD  RESET
viccy/vid_addr<9>                                                                   6     8     FB1_18  STD  RESET
viccy/pxlhold<2>                                                                    8     8     FB2_4   STD  RESET
viccy/pxlhold<3>                                                                    8     8     FB2_7   STD  RESET
viccy/pxlhold<4>                                                                    8     8     FB2_9   STD  RESET
viccy/pxlhold<5>                                                                    8     8     FB2_10  STD  RESET
viccy/pxlhold<6>                                                                    8     8     FB2_11  STD  RESET
viccy/pxlhold<7>                                                                    8     8     FB2_13  STD  RESET
viccy/chr_fetch                                                                     4     7     FB2_14  STD  RESET
viccy/pxlhold<0>                                                                    4     7     FB2_15  STD  RESET
clocky/clk_cnt_0_0                                                                  0     0     FB2_16  STD  RESET
mappy/low64k/mappy/low64k_D2                                                        1     8     FB2_17  STD  
viccy/pxlhold<1>                                                                    8     8     FB2_18  STD  RESET
viccy/dot2clk_d                                                                     1     1     FB3_1   STD  RESET
pxl_window                                                                          1     2     FB3_2   STD  RESET
clocky/clk_cnt_0_3                                                                  1     3     FB3_3   STD  RESET
clocky/clk_cnt_0_2                                                                  1     2     FB3_4   STD  RESET
clocky/clk_cnt_0_1                                                                  1     1     FB3_5   STD  RESET
chr_window                                                                          1     2     FB3_6   STD  RESET
spi_comp/run_sr_d                                                                   2     2     FB3_7   STD  RESET
spi_comp/ack_txd                                                                    2     3     FB3_8   STD  RESET
spi_comp/ack_rxtx                                                                   2     5     FB3_9   STD  RESET
slotclk                                                                             2     2     FB3_10  STD  RESET
ipl_state_d                                                                         2     2     FB3_11  STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
dot4clk                                                                             2     2     FB3_12  STD  RESET
dot2clk                                                                             2     2     FB3_13  STD  RESET
spi_comp/sr<4>                                                                      5     7     FB3_14  STD  RESET
spi_comp/sr<3>                                                                      5     7     FB3_15  STD  RESET
spi_comp/sr<2>                                                                      5     7     FB3_16  STD  RESET
spi_comp/sr<1>                                                                      5     7     FB3_17  STD  RESET
spi_comp/sr<0>                                                                      5     7     FB3_18  STD  RESET
m_vramsel_out/m_vramsel_out_D2                                                      8     12    FB4_1   STD  
clocky/cpu_cnt1<0>                                                                  1     1     FB4_4   STD  RESET
wp_romPET_or0000/wp_romPET_or0000_D2                                                2     21    FB4_5   STD  
vidblock_not0001/vidblock_not0001_D2                                                2     21    FB4_7   STD  
viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2                                      2     20    FB4_8   STD  
spi_cs/spi_cs_D2                                                                    2     19    FB4_9   STD  
movesync_not0001/movesync_not0001_D2                                                2     21    FB4_10  STD  
mode_not0001/mode_not0001_D2                                                        2     21    FB4_11  STD  
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2                                        2     21    FB4_12  STD  
mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2                                    2     10    FB4_13  STD  
lowbank_not0001/lowbank_not0001_D2                                                  2     21    FB4_15  STD  
$OpTx$FX_DC$419                                                                     2     18    FB4_16  STD  
viccy/rows_per_char<3>                                                              5     24    FB4_17  STD  RESET
spi_comp/serin_d                                                                    14    13    FB5_1   STD  RESET
viccy/rline_cnt<9>                                                                  3     12    FB5_3   STD  RESET
viccy/rline_cnt<8>                                                                  3     11    FB5_4   STD  RESET
viccy/rline_cnt<7>                                                                  3     10    FB5_5   STD  RESET
viccy/rline_cnt<6>                                                                  3     9     FB5_6   STD  RESET
viccy/rline_cnt<5>                                                                  3     8     FB5_7   STD  RESET
viccy/rline_cnt<4>                                                                  3     7     FB5_9   STD  RESET
viccy/rline_cnt<3>                                                                  3     6     FB5_11  STD  RESET
viccy/rline_cnt<2>                                                                  3     5     FB5_13  STD  RESET
viccy/rline_cnt<1>                                                                  3     4     FB5_16  STD  RESET
viccy/v_enable                                                                      6     11    FB5_17  STD  RESET
viccy/last_line_of_screen                                                           2     11    FB5_18  STD  RESET
viccy/vid_addr<5>                                                                   6     12    FB6_1   STD  RESET
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  1     9     FB6_4   STD  
wait_int_d                                                                          2     3     FB6_7   STD  RESET
do_cpu                                                                              3     5     FB6_9   STD  RESET
viccy/vid_addr<0>                                                                   5     7     FB6_10  STD  RESET
viccy/vid_addr<8>                                                                   6     15    FB6_11  STD  RESET
viccy/vid_addr<7>                                                                   6     14    FB6_12  STD  RESET
viccy/vid_addr<6>                                                                   6     13    FB6_13  STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/vid_addr<4>                                                                   6     11    FB6_15  STD  RESET
viccy/vid_addr<3>                                                                   6     10    FB6_16  STD  RESET
viccy/vid_addr<2>                                                                   6     9     FB6_17  STD  RESET
viccy/vid_addr<1>                                                                   6     8     FB6_18  STD  RESET
viccy/slot_cnt<0>                                                                   2     3     FB7_1   STD  RESET
viccy/last_slot_of_line                                                             2     8     FB7_2   STD  RESET
viccy/slot_cnt<6>                                                                   3     9     FB7_4   STD  RESET
viccy/slot_cnt<5>                                                                   3     8     FB7_6   STD  RESET
viccy/slot_cnt<4>                                                                   3     7     FB7_7   STD  RESET
viccy/slot_cnt<3>                                                                   3     6     FB7_8   STD  RESET
viccy/slot_cnt<2>                                                                   3     5     FB7_9   STD  RESET
viccy/slot_cnt<1>                                                                   3     4     FB7_10  STD  RESET
viccy/last_vis_slot_of_line                                                         3     9     FB7_11  STD  RESET
viccy/h_enable                                                                      3     9     FB7_13  STD  RESET
viccy/vid_addr<13>                                                                  6     12    FB7_14  STD  RESET
viccy/vid_addr<12>                                                                  6     11    FB7_16  STD  RESET
viccy/vid_addr<11>                                                                  6     10    FB7_17  STD  RESET
viccy/vid_addr<10>                                                                  6     9     FB7_18  STD  RESET
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2                    1     7     FB8_1   STD  
ipl_cnt<9>                                                                          3     8     FB8_4   STD  RESET
ipl_cnt<8>                                                                          3     7     FB8_6   STD  RESET
ipl_cnt<6>                                                                          3     11    FB8_7   STD  RESET
ipl_cnt<5>                                                                          3     10    FB8_9   STD  RESET
ipl_cnt<4>                                                                          3     9     FB8_11  STD  RESET
ipl_cnt<3>                                                                          3     8     FB8_12  STD  RESET
ipl_cnt<2>                                                                          3     7     FB8_13  STD  RESET
ipl_cnt<1>                                                                          3     6     FB8_14  STD  RESET
ipl_cnt<11>                                                                         3     10    FB8_15  STD  RESET
ipl_cnt<10>                                                                         3     9     FB8_16  STD  RESET
ipl_next                                                                            4     15    FB8_17  STD  RESET
ipl_out                                                                             5     15    FB8_18  STD  RESET
spi_comp/txd<7>                                                                     3     5     FB9_1   STD  RESET
spi_comp/txd<6>                                                                     3     5     FB9_4   STD  RESET
spi_comp/stat<3>                                                                    3     8     FB9_6   STD  RESET
spi_comp/stat<2>                                                                    3     7     FB9_7   STD  RESET
spi_comp/stat<1>                                                                    3     6     FB9_9   STD  RESET
spi_comp/stat<0>                                                                    3     5     FB9_10  STD  RESET
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2                                      3     6     FB9_11  STD  
spi_outx                                                                            5     7     FB9_13  STD  RESET
spi_comp/sr<6>                                                                      5     7     FB9_15  STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_comp/sr<5>                                                                      5     7     FB9_16  STD  RESET
spi_comp/run_sr                                                                     5     10    FB9_18  STD  RESET
viccy/vid_addr_hold<3>                                                              4     6     FB10_1  STD  RESET
viccy/vid_addr_hold<2>                                                              4     6     FB10_2  STD  RESET
viccy/vid_addr_hold<1>                                                              4     6     FB10_3  STD  RESET
viccy/vid_addr_hold<0>                                                              4     6     FB10_4  STD  RESET
viccy/rcline_cnt<0>                                                                 4     6     FB10_7  STD  RESET
viccy/vid_addr_hold<12>                                                             5     7     FB10_9  STD  RESET
viccy/vid_addr_hold<11>                                                             5     7     FB10_13 STD  RESET
viccy/vid_addr_hold<10>                                                             5     7     FB10_14 STD  RESET
viccy/rcline_cnt<3>                                                                 5     9     FB10_15 STD  RESET
viccy/rcline_cnt<2>                                                                 5     8     FB10_16 STD  RESET
viccy/rcline_cnt<1>                                                                 5     7     FB10_17 STD  RESET
viccy/last_line_of_char                                                             7     9     FB10_18 STD  RESET
memclk_d                                                                            1     1     FB11_1  STD  RESET
clk1m                                                                               1     4     FB11_2  STD  RESET
clocky/cpu_cnt1<1>                                                                  2     2     FB11_4  STD  RESET
clk2m                                                                               2     4     FB11_5  STD  RESET
viccy/vpage<7>                                                                      3     5     FB11_6  STD  RESET
viccy/vpage<6>                                                                      3     5     FB11_7  STD  RESET
spi_outx/spi_outx_CLKF                                                              3     4     FB11_8  STD  
mappy/cfg_mp<7>                                                                     3     4     FB11_9  STD  RESET
mappy/cfg_mp<6>                                                                     3     4     FB11_10 STD  RESET
mappy/cfg_mp<0>                                                                     3     4     FB11_13 STD  RESET
io1m                                                                                3     5     FB11_15 STD  RESET
clocky/cpu_cnt1<2>                                                                  3     5     FB11_16 STD  RESET
clk4m                                                                               4     4     FB11_17 STD  RESET
is_cpu                                                                              7     8     FB11_18 STD  RESET
ipl                                                                                 2     4     FB12_1  STD  RESET
viccy/vpage<5>                                                                      3     5     FB12_4  STD  RESET
viccy/vpage<4>                                                                      3     5     FB12_6  STD  RESET
viccy/vpage<3>                                                                      3     5     FB12_7  STD  RESET
viccy/vpage<2>                                                                      3     5     FB12_9  STD  RESET
viccy/crtc_reg<1>                                                                   3     7     FB12_11 STD  RESET
viccy/crtc_reg<0>                                                                   3     7     FB12_13 STD  RESET
spi_comp/txd_valid                                                                  3     5     FB12_14 STD  RESET
spi_comp/start_rx                                                                   3     5     FB12_15 STD  RESET
ipl_state                                                                           3     4     FB12_16 STD  RESET
ipl_cnt<7>                                                                          3     6     FB12_17 STD  RESET
ipl_cnt<0>                                                                          3     5     FB12_18 STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
D_7_IOBUFE/D_7_IOBUFE_TRST                                                          2     4     FB13_1  STD  
wp_romB                                                                             3     5     FB13_3  STD  RESET
mappy/bankl<7>                                                                      3     4     FB13_4  STD  RESET
mappy/bankl<6>                                                                      3     4     FB13_5  STD  RESET
mappy/bankl<5>                                                                      3     4     FB13_6  STD  RESET
mappy/bankl<4>                                                                      3     4     FB13_7  STD  RESET
mappy/bankl<3>                                                                      3     4     FB13_8  STD  RESET
mappy/bankl<2>                                                                      3     4     FB13_9  STD  RESET
mappy/bankl<1>                                                                      3     4     FB13_10 STD  RESET
mappy/bankl<0>                                                                      3     4     FB13_11 STD  RESET
lowbank<1>                                                                          3     4     FB13_12 STD  RESET
lowbank<0>                                                                          3     4     FB13_13 STD  RESET
lockb0                                                                              3     4     FB13_14 STD  RESET
is8296                                                                              3     4     FB13_16 STD  RESET
boot                                                                                3     4     FB13_18 STD  RESET
vis_hires_in                                                                        3     4     FB14_1  STD  RESET
vis_double_in                                                                       3     4     FB14_2  STD  RESET
vis_80_in                                                                           3     4     FB14_3  STD  RESET
vidblock<0>                                                                         3     4     FB14_4  STD  RESET
screenb0                                                                            3     4     FB14_5  STD  RESET
movesync                                                                            3     4     FB14_6  STD  RESET
mode<1>                                                                             3     4     FB14_7  STD  RESET
mode<0>                                                                             3     4     FB14_8  STD  RESET
mappy/cfg_mp<5>                                                                     3     4     FB14_9  STD  RESET
mappy/cfg_mp<3>                                                                     3     4     FB14_10 STD  RESET
mappy/cfg_mp<2>                                                                     3     4     FB14_12 STD  RESET
mappy/cfg_mp<1>                                                                     3     4     FB14_13 STD  RESET
lowbank<3>                                                                          3     4     FB14_16 STD  RESET
lowbank<2>                                                                          3     4     FB14_17 STD  RESET
interlace                                                                           3     4     FB14_18 STD  RESET
spi_sel<2>                                                                          3     5     FB15_1  LOW  RESET
spi_sel<1>                                                                          3     5     FB15_4  LOW  RESET
spi_sel<0>                                                                          3     5     FB15_5  LOW  RESET
spi_comp/txd<5>                                                                     3     5     FB15_6  STD  RESET
spi_comp/txd<4>                                                                     3     5     FB15_7  STD  RESET
spi_comp/txd<3>                                                                     3     5     FB15_9  STD  RESET
spi_comp/txd<2>                                                                     3     5     FB15_12 STD  RESET
spi_comp/txd<1>                                                                     3     5     FB15_13 STD  RESET
spi_comp/txd<0>                                                                     3     5     FB15_15 STD  RESET
spi_comp/cpol                                                                       3     5     FB15_16 STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_comp/cpha                                                                       3     5     FB15_17 STD  RESET
spi_comp/N01/spi_comp/N01_D2                                                        3     5     FB15_18 STD  
viccy/sr_load_d                                                                     1     1     FB16_4  STD  RESET
spi_comp/txd_valid/spi_comp/txd_valid_RSTF                                          1     2     FB16_5  STD  
spi_comp/start_rx/spi_comp/start_rx_RSTF                                            1     2     FB16_6  STD  
is_vid_out                                                                          1     2     FB16_7  STD  RESET
$OpTx$FX_DC$417                                                                     1     2     FB16_8  STD  
viccy/in_slot                                                                       2     2     FB16_9  STD  RESET
viccy/charhold<7>                                                                   2     2     FB16_10 STD  RESET
viccy/charhold<6>                                                                   2     2     FB16_11 STD  RESET
viccy/charhold<5>                                                                   2     2     FB16_12 STD  RESET
viccy/charhold<4>                                                                   2     2     FB16_13 STD  RESET
viccy/charhold<3>                                                                   2     2     FB16_14 STD  RESET
viccy/charhold<2>                                                                   2     2     FB16_15 STD  RESET
viccy/charhold<1>                                                                   2     2     FB16_16 STD  RESET
viccy/charhold<0>                                                                   2     2     FB16_17 STD  RESET
phi2_io_1m/phi2_io_1m_SETF                                                          2     3     FB16_18 STD  

** 25 Inputs **

Signal                                                                              Loc     Pin  Pin     Pin     
Name                                                                                        No.  Type    Use     
rwb                                                                                 FB1_5   20   I/O     I
q50m                                                                                FB3_10  30   GCK/I/O GCK
e                                                                                   FB6_14  142  I/O     I
nres                                                                                FB6_15  143  GSR/I/O GSR/I
spi_in3                                                                             FB10_3  118  I/O     I
spi_in1                                                                             FB10_17 129  I/O     I
graphic                                                                             FB11_17 70   I/O     I
vpa                                                                                 FB13_8  74   I/O     I
vda                                                                                 FB13_11 75   I/O     I
A<4>                                                                                FB14_3  100  I/O     I
A<3>                                                                                FB14_5  101  I/O     I
A<2>                                                                                FB14_6  102  I/O     I
A<1>                                                                                FB14_8  103  I/O     I
A<0>                                                                                FB14_10 104  I/O     I
A<15>                                                                               FB15_12 85   I/O     I
A<13>                                                                               FB15_15 87   I/O     I
A<14>                                                                               FB15_17 88   I/O     I
A<12>                                                                               FB16_2  91   I/O     I
A<11>                                                                               FB16_3  92   I/O     I
A<10>                                                                               FB16_5  93   I/O     I
A<9>                                                                                FB16_6  94   I/O     I
A<8>                                                                                FB16_8  95   I/O     I
A<7>                                                                                FB16_10 96   I/O     I
A<6>                                                                                FB16_11 97   I/O     I
A<5>                                                                                FB16_12 98   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
sr_load               1       0   /\1   3     FB1_1         (b)     (b)
viccy/rline_cnt<0>    2       0     0   3     FB1_2         (b)     (b)
wp_romPET             3       0     0   2     FB1_3         (b)     (b)
wp_romA               3       0     0   2     FB1_4         (b)     (b)
wp_rom9               3       0     0   2     FB1_5   20    I/O     I
vis_enable            3       0     0   2     FB1_6   21    I/O     (b)
vidblock<2>           3       0     0   2     FB1_7         (b)     (b)
vidblock<1>           3       0     0   2     FB1_8   22    I/O     (b)
viccy/is_80           3       0     0   2     FB1_9         (b)     (b)
viccy/vid_addr_hold<9>
                      4       0     0   1     FB1_10  23    I/O     (b)
viccy/vid_addr_hold<8>
                      4       0     0   1     FB1_11        (b)     (b)
viccy/vid_addr_hold<7>
                      4       0     0   1     FB1_12  24    I/O     (b)
viccy/vid_addr_hold<6>
                      4       0     0   1     FB1_13        (b)     (b)
viccy/vid_addr_hold<5>
                      4       0     0   1     FB1_14  25    I/O     (b)
viccy/vid_addr_hold<4>
                      4       0     0   1     FB1_15  26    I/O     (b)
viccy/pxl_fetch       4       0     0   1     FB1_16        (b)     (b)
viccy/vid_addr_hold<13>
                      5       0     0   0     FB1_17  27    I/O     (b)
viccy/vid_addr<9>     6       1<-   0   0     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: D<7>.PIN                              17: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  33: viccy/vid_addr_hold<4> 
  2: D<5>.PIN                              18: viccy/in_slot                                                                       34: viccy/vid_addr_hold<5> 
  3: D<4>.PIN                              19: viccy/is_80                                                                         35: viccy/vid_addr_hold<6> 
  4: D<2>.PIN                              20: viccy/last_line_of_char                                                             36: viccy/vid_addr_hold<7> 
  5: D<1>.PIN                              21: viccy/last_line_of_screen                                                           37: viccy/vid_addr_hold<8> 
  6: clocky/clk_cnt_0_0                    22: viccy/last_slot_of_line                                                             38: viccy/vid_addr_hold<9> 
  7: clocky/clk_cnt_0_1                    23: viccy/last_vis_slot_of_line                                                         39: viccy/vpage<5> 
  8: clocky/clk_cnt_0_2                    24: viccy/rline_cnt<0>                                                                  40: vidblock<1> 
  9: clocky/clk_cnt_0_3                    25: viccy/vid_addr<13>                                                                  41: vidblock<2> 
 10: hsync                                 26: viccy/vid_addr<4>                                                                   42: vidblock_not0001/vidblock_not0001_D2 
 11: interlace                             27: viccy/vid_addr<5>                                                                   43: vis_80_in 
 12: movesync_not0001/movesync_not0001_D2  28: viccy/vid_addr<6>                                                                   44: vis_enable 
 13: nres                                  29: viccy/vid_addr<7>                                                                   45: wp_rom9 
 14: phi2                                  30: viccy/vid_addr<8>                                                                   46: wp_romA 
 15: pxl_window                            31: viccy/vid_addr<9>                                                                   47: wp_romPET 
 16: slotclk                               32: viccy/vid_addr_hold<13>                                                             48: wp_romPET_or0000/wp_romPET_or0000_D2 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
sr_load              .....XXXX......................................... 4
viccy/rline_cnt<0>   .........X..........X..X.......................... 3
wp_romPET            X............X................................XX.. 4
wp_romA              .X...........X...............................X.X.. 4
wp_rom9              ..X..........X..............................X..X.. 4
vis_enable           X..........X.X.............................X...... 4
vidblock<2>          ...X.........X..........................XX........ 4
vidblock<1>          ....X........X.........................X.X........ 4
viccy/is_80          ............X..X....XX....................X....... 5
viccy/vid_addr_hold<9> 
                     ...............X...XX.X.......X......X............ 6
viccy/vid_addr_hold<8> 
                     ...............X...XX.X......X......X............. 6
viccy/vid_addr_hold<7> 
                     ...............X...XX.X.....X......X.............. 6
viccy/vid_addr_hold<6> 
                     ...............X...XX.X....X......X............... 6
viccy/vid_addr_hold<5> 
                     ...............X...XX.X...X......X................ 6
viccy/vid_addr_hold<4> 
                     ...............X...XX.X..X......X................. 6
viccy/pxl_fetch      ..........X...X..XX....X...................X...... 6
viccy/vid_addr_hold<13> 
                     ...............X...XX.X.X......X......X........... 7
viccy/vid_addr<9>    ...............XXXX.XX........X......X............ 8
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               50/4
Number of signals used by logic mapping into function block:  50
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB2_1         (b)     (b)
VA<16>                6       5<- \/4   0     FB2_2   9     I/O     O
VA<15>                8       4<- \/1   0     FB2_3   10    I/O     O
viccy/pxlhold<2>      8       3<-   0   0     FB2_4         (b)     (b)
VA<18>                3       0   /\2   0     FB2_5   11    I/O     O
(unused)              0       0   \/3   2     FB2_6   12    I/O     (b)
viccy/pxlhold<3>      8       3<-   0   0     FB2_7         (b)     (b)
(unused)              0       0   \/4   1     FB2_8   13    I/O     (b)
viccy/pxlhold<4>      8       4<- \/1   0     FB2_9         (b)     (b)
viccy/pxlhold<5>      8       3<-   0   0     FB2_10  14    I/O     (b)
viccy/pxlhold<6>      8       5<- /\2   0     FB2_11        (b)     (b)
(unused)              0       0   /\5   0     FB2_12  15    I/O     (b)
viccy/pxlhold<7>      8       3<-   0   0     FB2_13        (b)     (b)
viccy/chr_fetch       4       2<- /\3   0     FB2_14  16    I/O     (b)
viccy/pxlhold<0>      4       1<- /\2   0     FB2_15  17    I/O     (b)
clocky/clk_cnt_0_0    0       0   /\1   4     FB2_16        (b)     (b)
mappy/low64k/mappy/low64k_D2
                      1       0   \/3   1     FB2_17  19    I/O     (b)
viccy/pxlhold<1>      8       3<-   0   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: VD<7>.PIN         18: lowbank<0>                                        35: viccy/in_slot 
  2: VD<6>.PIN         19: lowbank<1>                                        36: viccy/is_80 
  3: VD<5>.PIN         20: lowbank<3>                                        37: viccy/pxl_fetch 
  4: VD<4>.PIN         21: mappy/bankl<0>                                    38: viccy/pxlhold<0> 
  5: VD<3>.PIN         22: mappy/bankl<1>                                    39: viccy/pxlhold<1> 
  6: VD<2>.PIN         23: mappy/bankl<2>                                    40: viccy/pxlhold<2> 
  7: VD<1>.PIN         24: mappy/bankl<3>                                    41: viccy/pxlhold<3> 
  8: VD<0>.PIN         25: mappy/bankl<4>                                    42: viccy/pxlhold<4> 
  9: A<12>             26: mappy/bankl<5>                                    43: viccy/pxlhold<5> 
 10: A<13>             27: mappy/bankl<6>                                    44: viccy/pxlhold<6> 
 11: A<14>             28: mappy/bankl<7>                                    45: viccy/pxlhold<7> 
 12: A<15>             29: mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2  46: viccy/rline_cnt<0> 
 13: chr_window        30: mappy/cfg_mp<2>                                   47: viccy/sr_load_d 
 14: dclk              31: mappy/cfg_mp<3>                                   48: viccy/vpage<7> 
 15: interlace         32: mappy/cfg_mp<5>                                   49: vis_enable 
 16: ipl               33: mappy/low64k/mappy/low64k_D2                      50: vis_hires_in 
 17: is_vid_out        34: viccy/dot2clk_d                                  

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
VA<16>               ........XXXX...XX.X.X.......X..XX........................... 11
VA<15>               ........XXXX...XXX..........XXXXX...X..........X.X.......... 15
viccy/pxlhold<2>     .....X.......X...................X.XX.XX......X............. 8
VA<18>               ...........X...XX..X..X.........X........................... 6
viccy/pxlhold<3>     ....X........X...................X.XX..XX.....X............. 8
viccy/pxlhold<4>     ...X.........X...................X.XX...XX....X............. 8
viccy/pxlhold<5>     ..X..........X...................X.XX....XX...X............. 8
viccy/pxlhold<6>     .X...........X...................X.XX.....XX..X............. 8
viccy/pxlhold<7>     X............X...................X.XX......XX.X............. 8
viccy/chr_fetch      ............X.X...................XX.........X..XX.......... 7
viccy/pxlhold<0>     .......X.....X...................X.XXX........X............. 7
clocky/clk_cnt_0_0   ............................................................ 0
mappy/low64k/mappy/low64k_D2 
                     ....................XXXXXXXX................................ 8
viccy/pxlhold<1>     ......X......X...................X.XXXX.......X............. 8
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               27/27
Number of signals used by logic mapping into function block:  27
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/dot2clk_d       1       0     0   4     FB3_1         (b)     (b)
pxl_window            1       0     0   4     FB3_2   28    I/O     (b)
clocky/clk_cnt_0_3    1       0     0   4     FB3_3         (b)     (b)
clocky/clk_cnt_0_2    1       0     0   4     FB3_4         (b)     (b)
clocky/clk_cnt_0_1    1       0     0   4     FB3_5         (b)     (b)
chr_window            1       0     0   4     FB3_6         (b)     (b)
spi_comp/run_sr_d     2       0     0   3     FB3_7         (b)     (b)
spi_comp/ack_txd      2       0     0   3     FB3_8         (b)     (b)
spi_comp/ack_rxtx     2       0     0   3     FB3_9         (b)     (b)
slotclk               2       0     0   3     FB3_10  30    GCK/I/O GCK
ipl_state_d           2       0     0   3     FB3_11        (b)     (b)
dot4clk               2       0     0   3     FB3_12  31    I/O     (b)
dot2clk               2       0     0   3     FB3_13        (b)     (b)
spi_comp/sr<4>        5       0     0   0     FB3_14  32    GCK/I/O (b)
spi_comp/sr<3>        5       0     0   0     FB3_15  33    I/O     (b)
spi_comp/sr<2>        5       0     0   0     FB3_16        (b)     (b)
spi_comp/sr<1>        5       0     0   0     FB3_17        (b)     (b)
spi_comp/sr<0>        5       0     0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/clk_cnt_0_0  10: spi_comp/serin_d                                19: spi_comp/stat<2> 
  2: clocky/clk_cnt_0_1  11: spi_comp/sr<0>                                  20: spi_comp/stat<3> 
  3: clocky/clk_cnt_0_2  12: spi_comp/sr<1>                                  21: spi_comp/txd<0> 
  4: clocky/clk_cnt_0_3  13: spi_comp/sr<2>                                  22: spi_comp/txd<1> 
  5: dot2clk             14: spi_comp/sr<3>                                  23: spi_comp/txd<2> 
  6: ipl_state           15: spi_comp/sr<4>                                  24: spi_comp/txd<3> 
  7: nres                16: spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2  25: spi_comp/txd<4> 
  8: spi_comp/run_sr     17: spi_comp/stat<0>                                26: spi_comp/txd_valid 
  9: spi_comp/run_sr_d   18: spi_comp/stat<1>                                27: spi_outx/spi_outx_CLKF 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/dot2clk_d      ....X................................... 1
pxl_window           ..XX.................................... 2
clocky/clk_cnt_0_3   XXX..................................... 3
clocky/clk_cnt_0_2   XX...................................... 2
clocky/clk_cnt_0_1   X....................................... 1
chr_window           ..XX.................................... 2
spi_comp/run_sr_d    .......X..................X............. 2
spi_comp/ack_txd     ........X................XX............. 3
spi_comp/ack_rxtx    ................XXXX......X............. 5
slotclk              ...X..X................................. 2
ipl_state_d          ....XX.................................. 2
dot4clk              ..X...X................................. 2
dot2clk              .X....X................................. 2
spi_comp/sr<4>       ........X....XXX........XXX............. 7
spi_comp/sr<3>       ........X...XX.X.......X.XX............. 7
spi_comp/sr<2>       ........X..XX..X......X..XX............. 7
spi_comp/sr<1>       ........X.XX...X.....X...XX............. 7
spi_comp/sr<0>       ........XXX....X....X....XX............. 7
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               51/3
Number of signals used by logic mapping into function block:  51
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
m_vramsel_out/m_vramsel_out_D2
                      8       5<- \/2   0     FB4_1         (b)     (b)
nframsel             12       7<-   0   0     FB4_2   2     GTS/I/O O
(unused)              0       0   /\5   0     FB4_3         (b)     (b)
clocky/cpu_cnt1<0>    1       0     0   4     FB4_4         (b)     (b)
wp_romPET_or0000/wp_romPET_or0000_D2
                      2       0     0   3     FB4_5   3     GTS/I/O (b)
VA<17>                3       0     0   2     FB4_6   4     I/O     O
vidblock_not0001/vidblock_not0001_D2
                      2       0     0   3     FB4_7         (b)     (b)
viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2
                      2       0     0   3     FB4_8   5     GTS/I/O (b)
spi_cs/spi_cs_D2      2       0     0   3     FB4_9         (b)     (b)
movesync_not0001/movesync_not0001_D2
                      2       0     0   3     FB4_10        (b)     (b)
mode_not0001/mode_not0001_D2
                      2       0     0   3     FB4_11        (b)     (b)
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2
                      2       0     0   3     FB4_12  6     GTS/I/O (b)
mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2
                      2       0     0   3     FB4_13        (b)     (b)
VA<14>                4       0     0   1     FB4_14  7     I/O     O
lowbank_not0001/lowbank_not0001_D2
                      2       0     0   3     FB4_15        (b)     (b)
$OpTx$FX_DC$419       2       0     0   3     FB4_16        (b)     (b)
viccy/rows_per_char<3>
                      5       0     0   0     FB4_17        (b)     (b)
(unused)              0       0   \/5   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: D<3>.PIN          18: A<9>                                              35: mode_not0001/mode_not0001_D2 
  2: boot              19: do_cpu                                            36: phi2 
  3: A<0>              20: dot2clk                                           37: rwb 
  4: A<10>             21: ipl                                               38: screenb0 
  5: A<11>             22: is8296                                            39: vda 
  6: A<12>             23: is_vid_out                                        40: viccy/crtc_reg<0> 
  7: A<13>             24: lowbank<2>                                        41: viccy/crtc_reg<1> 
  8: A<14>             25: m_vramsel_out/m_vramsel_out_D2                    42: viccy/pxl_fetch 
  9: A<15>             26: mappy/bankl<1>                                    43: viccy/rows_per_char<3> 
 10: A<1>              27: mappy/bankl<3>                                    44: viccy/vpage<6> 
 11: A<2>              28: mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2  45: viccy/vpage<7> 
 12: A<3>              29: mappy/cfg_mp<0>                                   46: vis_hires_in 
 13: A<4>              30: mappy/cfg_mp<1>                                   47: vpa 
 14: A<5>              31: mappy/cfg_mp<5>                                   48: wp_rom9 
 15: A<6>              32: mappy/cfg_mp<6>                                   49: wp_romA 
 16: A<7>              33: mappy/cfg_mp<7>                                   50: wp_romB 
 17: A<8>              34: mappy/low64k/mappy/low64k_D2                      51: wp_romPET 

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
m_vramsel_out/m_vramsel_out_D2 
                     .X...XXXX.................X...X.XX...XX.......X............. 12
nframsel             .X.XXXXXX.......XX.X....X.XXXX..XX..X.X.......XXXXX......... 24
clocky/cpu_cnt1<0>   ...................X........................................ 1
wp_romPET_or0000/wp_romPET_or0000_D2 
                     ..XXXXXXXXXXXXXXXX.........X.....X..X.X.......X............. 21
VA<17>               ........X...........X.XX.X.......X.......................... 6
vidblock_not0001/vidblock_not0001_D2 
                     ..XXXXXXXXXXXXXXXX.........X.....X..X.X.......X............. 21
viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2 
                     ..XXXXXXX...XXXXXX.........X.....X..X.XXX.....X............. 20
spi_cs/spi_cs_D2     ...XXXXXX.XXXXXXXX.........X.....X.X..X.......X............. 19
movesync_not0001/movesync_not0001_D2 
                     ..XXXXXXXXXXXXXXXX.........X.....X..X.X.......X............. 21
mode_not0001/mode_not0001_D2 
                     ..XXXXXXXXXXXXXXXX.........X.....X..X.X.......X............. 21
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
                     ..XXXXXXXXXXXXXXXX...X...........X..X.X.......X............. 21
mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2 
                     ...XXXXXX.......XX.............XX........................... 10
VA<14>               .......X............X.X..................X.XXX.............. 7
lowbank_not0001/lowbank_not0001_D2 
                     ...XXXXXXXXXXXXXXX.........X.....XX.X.X.......X............. 21
$OpTx$FX_DC$419      ..XXXXXXX...XXXXXX.........X.....X..X.X.......X............. 18
viccy/rows_per_char<3> 
                     X.XXXXXXX...XXXXXXXX.......X.....X..X.XXX.X...X............. 24
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB5  ***********************************
Number of function block inputs used/remaining:               37/17
Number of signals used by logic mapping into function block:  37
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_comp/serin_d     14       9<-   0   0     FB5_1         (b)     (b)
spi_nsel2             1       1<- /\5   0     FB5_2   34    I/O     O
viccy/rline_cnt<9>    3       0   /\1   1     FB5_3         (b)     (b)
viccy/rline_cnt<8>    3       0     0   2     FB5_4         (b)     (b)
viccy/rline_cnt<7>    3       0     0   2     FB5_5   35    I/O     (b)
viccy/rline_cnt<6>    3       0     0   2     FB5_6         (b)     (b)
viccy/rline_cnt<5>    3       0     0   2     FB5_7         (b)     (b)
phi2_io               4       0     0   1     FB5_8   38    GCK/I/O I/O
viccy/rline_cnt<4>    3       0     0   2     FB5_9         (b)     (b)
spi_nsel3             1       0     0   4     FB5_10  39    I/O     O
viccy/rline_cnt<3>    3       0     0   2     FB5_11        (b)     (b)
spi_nsel4             1       0     0   4     FB5_12  40    I/O     O
viccy/rline_cnt<2>    3       0     0   2     FB5_13        (b)     (b)
dena                  3       0   \/2   0     FB5_14  41    I/O     O
pet_vsync             7       2<-   0   0     FB5_15  43    I/O     O
viccy/rline_cnt<1>    3       0   \/2   0     FB5_16        (b)     (b)
viccy/v_enable        6       2<- \/1   0     FB5_17  44    I/O     (b)
viccy/last_line_of_screen
                      2       1<- \/4   0     FB5_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$417             14: spi_comp/stat<0>           26: viccy/rline_cnt<1> 
  2: phi2_io.PIN                 15: spi_comp/txd_valid         27: viccy/rline_cnt<2> 
  3: dclk                        16: spi_in1                    28: viccy/rline_cnt<3> 
  4: hsync                       17: spi_in3                    29: viccy/rline_cnt<4> 
  5: ipl_state                   18: spi_outx/spi_outx_CLKF     30: viccy/rline_cnt<5> 
  6: movesync                    19: spi_sel<0>                 31: viccy/rline_cnt<6> 
  7: nres                        20: spi_sel<1>                 32: viccy/rline_cnt<7> 
  8: phi2                        21: spi_sel<2>                 33: viccy/rline_cnt<8> 
  9: phi2_io                     22: viccy/h_enable             34: viccy/rline_cnt<9> 
 10: phi2_io_1m/phi2_io_1m_SETF  23: viccy/last_line_of_screen  35: viccy/rows_per_char<3> 
 11: spi_comp/run_sr_d           24: viccy/pxl_fetch            36: viccy/sr_load_d 
 12: spi_comp/serin_d            25: viccy/rline_cnt<0>         37: viccy/v_enable 
 13: spi_comp/start_rx          

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_comp/serin_d     ....X.X...XXXXXXXXXXX................... 13
spi_nsel2            ......X...........XXX................... 4
viccy/rline_cnt<9>   ...X..................X.XXXXXXXXXX...... 12
viccy/rline_cnt<8>   ...X..................X.XXXXXXXXX....... 11
viccy/rline_cnt<7>   ...X..................X.XXXXXXXX........ 10
viccy/rline_cnt<6>   ...X..................X.XXXXXXX......... 9
viccy/rline_cnt<5>   ...X..................X.XXXXXX.......... 8
phi2_io              XX.....XXX.............................. 5
viccy/rline_cnt<4>   ...X..................X.XXXXX........... 7
spi_nsel3            ......X...........XXX................... 4
viccy/rline_cnt<3>   ...X..................X.XXXX............ 6
spi_nsel4            ......X...........XXX................... 4
viccy/rline_cnt<2>   ...X..................X.XXX............. 5
dena                 ..X...X..............X.X...........XX... 6
pet_vsync            ...X.XX.................XXXXXXXXXXX..... 14
viccy/rline_cnt<1>   ...X..................X.XX.............. 4
viccy/v_enable       ...X.....................XXXXXXXXXX..... 11
viccy/last_line_of_screen 
                     ...X....................XXXXXXXXXX...... 11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB6  ***********************************
Number of function block inputs used/remaining:               51/3
Number of signals used by logic mapping into function block:  51
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/vid_addr<5>     6       1<-   0   0     FB6_1         (b)     (b)
VA<8>                 4       0   /\1   0     FB6_2   135   I/O     O
VA<7>                 5       0     0   0     FB6_3   136   I/O     O
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2
                      1       0   \/2   2     FB6_4         (b)     (b)
VA<13>                7       2<-   0   0     FB6_5   137   I/O     O
VA<12>                7       2<-   0   0     FB6_6   138   I/O     O
wait_int_d            2       0   /\2   1     FB6_7         (b)     (b)
ramrwb                2       0   \/1   2     FB6_8   139   I/O     O
do_cpu                3       1<- \/3   0     FB6_9         (b)     (b)
viccy/vid_addr<0>     5       3<- \/3   0     FB6_10  140   I/O     (b)
viccy/vid_addr<8>     6       3<- \/2   0     FB6_11        (b)     (b)
viccy/vid_addr<7>     6       2<- \/1   0     FB6_12        (b)     (b)
viccy/vid_addr<6>     6       1<-   0   0     FB6_13        (b)     (b)
(unused)              0       0   \/4   1     FB6_14  142   I/O     I
viccy/vid_addr<4>     6       4<- \/3   0     FB6_15  143   GSR/I/O GSR/I
viccy/vid_addr<3>     6       3<- \/2   0     FB6_16        (b)     (b)
viccy/vid_addr<2>     6       2<- \/1   0     FB6_17        (b)     (b)
viccy/vid_addr<1>     6       1<-   0   0     FB6_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A<12>                           18: rwb                        35: viccy/vid_addr<5> 
  2: A<13>                           19: screenb0                   36: viccy/vid_addr<6> 
  3: A<14>                           20: slotclk                    37: viccy/vid_addr<7> 
  4: A<15>                           21: viccy/charhold<3>          38: viccy/vid_addr<8> 
  5: A<7>                            22: viccy/charhold<4>          39: viccy/vid_addr_hold<0> 
  6: A<8>                            23: viccy/chr_fetch            40: viccy/vid_addr_hold<1> 
  7: dot2clk                         24: viccy/in_slot              41: viccy/vid_addr_hold<2> 
  8: graphic                         25: viccy/is_80                42: viccy/vid_addr_hold<3> 
  9: ipl                             26: viccy/last_line_of_screen  43: viccy/vid_addr_hold<4> 
 10: ipl_cnt<11>                     27: viccy/last_slot_of_line    44: viccy/vid_addr_hold<5> 
 11: is_cpu                          28: viccy/vid_addr<0>          45: viccy/vid_addr_hold<6> 
 12: is_vid_out                      29: viccy/vid_addr<12>         46: viccy/vid_addr_hold<7> 
 13: m_vramsel_out/m_vramsel_out_D2  30: viccy/vid_addr<13>         47: viccy/vid_addr_hold<8> 
 14: mappy/cfg_mp<5>                 31: viccy/vid_addr<1>          48: viccy/vpage<6> 
 15: mappy/cfg_mp<7>                 32: viccy/vid_addr<2>          49: vidblock<1> 
 16: mappy/low64k/mappy/low64k_D2    33: viccy/vid_addr<3>          50: vidblock<2> 
 17: memclk_d                        34: viccy/vid_addr<4>          51: vis_hires_in 

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/vid_addr<5>    ...................X...XXXXX..XXXXX........X................ 12
VA<8>                .....X..X..X.........XX..............X............X......... 7
VA<7>                ....X...XX.X........X.X.............X.............X......... 8
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 
                     ...........................X..XXXXXXXX...................... 9
VA<13>               XXXX....X..X.XXX..X...X......X.................X.XX......... 15
VA<12>               XXXX...XX..X.XXX..X...X.....X...................X.X......... 15
wait_int_d           ......X.X.X................................................. 3
ramrwb               ......X.X..XX....X.......................................... 5
do_cpu               ........X.XXX...X........................................... 5
viccy/vid_addr<0>    ...................X...XXXXX..........X..................... 7
viccy/vid_addr<8>    ...................X...XXXXX..XXXXXXXX........X............. 15
viccy/vid_addr<7>    ...................X...XXXXX..XXXXXXX........X.............. 14
viccy/vid_addr<6>    ...................X...XXXXX..XXXXXX........X............... 13
viccy/vid_addr<4>    ...................X...XXXXX..XXXX........X................. 11
viccy/vid_addr<3>    ...................X...XXXXX..XXX........X.................. 10
viccy/vid_addr<2>    ...................X...XXXXX..XX........X................... 9
viccy/vid_addr<1>    ...................X...XXXXX..X........X.................... 8
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB7  ***********************************
Number of function block inputs used/remaining:               42/12
Number of signals used by logic mapping into function block:  42
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/slot_cnt<0>     2       0   /\3   0     FB7_1         (b)     (b)
viccy/last_slot_of_line
                      2       0     0   3     FB7_2         (b)     (b)
dclk                  2       0     0   3     FB7_3   45    I/O     O
viccy/slot_cnt<6>     3       0     0   2     FB7_4         (b)     (b)
pxl                   2       0     0   3     FB7_5   46    I/O     O
viccy/slot_cnt<5>     3       0     0   2     FB7_6         (b)     (b)
viccy/slot_cnt<4>     3       0     0   2     FB7_7         (b)     (b)
viccy/slot_cnt<3>     3       0     0   2     FB7_8         (b)     (b)
viccy/slot_cnt<2>     3       0     0   2     FB7_9         (b)     (b)
viccy/slot_cnt<1>     3       0     0   2     FB7_10        (b)     (b)
viccy/last_vis_slot_of_line
                      3       0     0   2     FB7_11        (b)     (b)
hsync                 4       0   \/1   0     FB7_12  48    I/O     O
viccy/h_enable        3       1<- \/3   0     FB7_13        (b)     (b)
viccy/vid_addr<13>    6       3<- \/2   0     FB7_14        (b)     (b)
vsync                 7       2<-   0   0     FB7_15  49    I/O     O
viccy/vid_addr<12>    6       1<-   0   0     FB7_16        (b)     (b)
viccy/vid_addr<11>    6       2<- /\1   0     FB7_17        (b)     (b)
viccy/vid_addr<10>    6       3<- /\2   0     FB7_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/clk_cnt_0_0                                                                  15: viccy/pxlhold<7>        29: viccy/slot_cnt<2> 
  2: dclk                                                                                16: viccy/rline_cnt<0>      30: viccy/slot_cnt<3> 
  3: dena                                                                                17: viccy/rline_cnt<1>      31: viccy/slot_cnt<4> 
  4: hsync                                                                               18: viccy/rline_cnt<2>      32: viccy/slot_cnt<5> 
  5: movesync                                                                            19: viccy/rline_cnt<3>      33: viccy/slot_cnt<6> 
  6: nres                                                                                20: viccy/rline_cnt<4>      34: viccy/vid_addr<10> 
  7: slotclk                                                                             21: viccy/rline_cnt<5>      35: viccy/vid_addr<11> 
  8: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  22: viccy/rline_cnt<6>      36: viccy/vid_addr<12> 
  9: viccy/h_enable                                                                      23: viccy/rline_cnt<7>      37: viccy/vid_addr<13> 
 10: viccy/in_slot                                                                       24: viccy/rline_cnt<8>      38: viccy/vid_addr<9> 
 11: viccy/is_80                                                                         25: viccy/rline_cnt<9>      39: viccy/vid_addr_hold<10> 
 12: viccy/last_line_of_screen                                                           26: viccy/rows_per_char<3>  40: viccy/vid_addr_hold<11> 
 13: viccy/last_slot_of_line                                                             27: viccy/slot_cnt<0>       41: viccy/vid_addr_hold<12> 
 14: viccy/last_vis_slot_of_line                                                         28: viccy/slot_cnt<1>       42: viccy/vid_addr_hold<13> 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/slot_cnt<0>    ......X.....X.............X....................... 3
viccy/last_slot_of_line 
                     ......X...................XXXXXXX................. 8
dclk                 X....X............................................ 2
viccy/slot_cnt<6>    ......X.....X.............XXXXXXX................. 9
pxl                  .XX...........X................................... 3
viccy/slot_cnt<5>    ......X.....X.............XXXXXX.................. 8
viccy/slot_cnt<4>    ......X.....X.............XXXXX................... 7
viccy/slot_cnt<3>    ......X.....X.............XXXX.................... 6
viccy/slot_cnt<2>    ......X.....X.............XXX..................... 5
viccy/slot_cnt<1>    ......X.....X.............XX...................... 4
viccy/last_vis_slot_of_line 
                     ......X......X............XXXXXXX................. 9
hsync                ......X...................XXXXXXX................. 8
viccy/h_enable       ......X.X.................XXXXXXX................. 9
viccy/vid_addr<13>   ......XX.XXXX....................XXXXX...X........ 12
vsync                ...XXX.........XXXXXXXXXXX........................ 14
viccy/vid_addr<12>   ......XX.XXXX....................XXX.X..X......... 11
viccy/vid_addr<11>   ......XX.XXXX....................XX..X.X.......... 10
viccy/vid_addr<10>   ......XX.XXXX....................X...XX........... 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB8  ***********************************
Number of function block inputs used/remaining:               46/8
Number of signals used by logic mapping into function block:  46
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2
                      1       0     0   4     FB8_1         (b)     (b)
VA<4>                 5       0     0   0     FB8_2   130   I/O     O
VA<5>                 5       0     0   0     FB8_3   131   I/O     O
ipl_cnt<9>            3       0     0   2     FB8_4         (b)     (b)
VA<9>                 4       0     0   1     FB8_5   132   I/O     O
ipl_cnt<8>            3       0     0   2     FB8_6         (b)     (b)
ipl_cnt<6>            3       0   \/2   0     FB8_7         (b)     (b)
VA<6>                 5       2<- \/2   0     FB8_8   133   I/O     O
ipl_cnt<5>            3       2<- \/4   0     FB8_9         (b)     (b)
VA<11>               13       8<-   0   0     FB8_10  134   I/O     O
ipl_cnt<4>            3       2<- /\4   0     FB8_11        (b)     (b)
ipl_cnt<3>            3       0   /\2   0     FB8_12        (b)     (b)
ipl_cnt<2>            3       0     0   2     FB8_13        (b)     (b)
ipl_cnt<1>            3       0     0   2     FB8_14        (b)     (b)
ipl_cnt<11>           3       0     0   2     FB8_15        (b)     (b)
ipl_cnt<10>           3       0     0   2     FB8_16        (b)     (b)
ipl_next              4       0     0   1     FB8_17        (b)     (b)
ipl_out               5       0     0   0     FB8_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A<11>             17: ipl_cnt<3>                                                        32: nres 
  2: A<12>             18: ipl_cnt<4>                                                        33: screenb0 
  3: A<13>             19: ipl_cnt<5>                                                        34: viccy/charhold<0> 
  4: A<14>             20: ipl_cnt<6>                                                        35: viccy/charhold<1> 
  5: A<15>             21: ipl_cnt<7>                                                        36: viccy/charhold<2> 
  6: A<4>              22: ipl_cnt<8>                                                        37: viccy/charhold<5> 
  7: A<5>              23: ipl_cnt<9>                                                        38: viccy/charhold<7> 
  8: A<6>              24: ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2  39: viccy/chr_fetch 
  9: A<9>              25: ipl_next                                                          40: viccy/vid_addr<11> 
 10: dot2clk           26: ipl_state                                                         41: viccy/vid_addr<4> 
 11: ipl               27: ipl_state_d                                                       42: viccy/vid_addr<5> 
 12: ipl_cnt<0>        28: is_vid_out                                                        43: viccy/vid_addr<6> 
 13: ipl_cnt<10>       29: mappy/cfg_mp<5>                                                   44: viccy/vid_addr<9> 
 14: ipl_cnt<11>       30: mappy/cfg_mp<7>                                                   45: vidblock<0> 
 15: ipl_cnt<1>        31: mappy/low64k/mappy/low64k_D2                                      46: vis_hires_in 
 16: ipl_cnt<2>       

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2 
                     ...........X..XXXXXX.............................. 7
VA<4>                .....X....X..........X.....X.....X....X.X....X.... 8
VA<5>                ......X...X...........X....X......X...X..X...X.... 8
ipl_cnt<9>           .........XX.........XXXXX.X....................... 8
VA<9>                ........X.X................X........X.X....X.X.... 7
ipl_cnt<8>           .........XX.........XX.XX.X....................... 7
ipl_cnt<6>           .........XXX..XXXXXX....X.X....................... 11
VA<6>                .......X..X.X..............X.......X..X...X..X.... 8
ipl_cnt<5>           .........XXX..XXXXX.....X.X....................... 10
VA<11>               XXXXX.....X................XXXX.X....XXX....XX.... 16
ipl_cnt<4>           .........XXX..XXXX......X.X....................... 9
ipl_cnt<3>           .........XXX..XXX.......X.X....................... 8
ipl_cnt<2>           .........XXX..XX........X.X....................... 7
ipl_cnt<1>           .........XXX..X.........X.X....................... 6
ipl_cnt<11>          .........XX.XX......XXXXX.X....................... 10
ipl_cnt<10>          .........XX.X.......XXXXX.X....................... 9
ipl_next             .........X.XXXXXXXXXXXX..X.....X.................. 15
ipl_out              .........XXXXXXXXXXXXXX...X....................... 15
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB9  ***********************************
Number of function block inputs used/remaining:               39/15
Number of signals used by logic mapping into function block:  39
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_comp/txd<7>       3       0   \/2   0     FB9_1         (b)     (b)
spi_clk              13       8<-   0   0     FB9_2   50    I/O     O
(unused)              0       0   /\5   0     FB9_3   51    I/O     (b)
spi_comp/txd<6>       3       0   /\1   1     FB9_4         (b)     (b)
nflash                2       0     0   3     FB9_5   52    I/O     O
spi_comp/stat<3>      3       0     0   2     FB9_6   53    I/O     (b)
spi_comp/stat<2>      3       0     0   2     FB9_7         (b)     (b)
spi_out               2       0     0   3     FB9_8   54    I/O     O
spi_comp/stat<1>      3       0     0   2     FB9_9         (b)     (b)
spi_comp/stat<0>      3       0     0   2     FB9_10        (b)     (b)
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2
                      3       0     0   2     FB9_11  56    I/O     (b)
phi2                  2       0     0   3     FB9_12  57    I/O     I/O
spi_outx              5       0     0   0     FB9_13        (b)     (b)
VD<6>                 4       0     0   1     FB9_14  58    I/O     I/O
spi_comp/sr<6>        5       0     0   0     FB9_15        (b)     (b)
spi_comp/sr<5>        5       0     0   0     FB9_16        (b)     (b)
VD<7>                 5       0     0   0     FB9_17  59    I/O     I/O
spi_comp/run_sr       5       0     0   0     FB9_18        (b)     (b)

Signals Used by Logic in Function Block
  1: phi2.PIN          14: ramrwb                                          27: spi_comp/stat<1> 
  2: D<7>.PIN          15: rwb                                             28: spi_comp/stat<2> 
  3: D<6>.PIN          16: spi_comp/N01/spi_comp/N01_D2                    29: spi_comp/stat<3> 
  4: A<0>              17: spi_comp/cpha                                   30: spi_comp/txd<5> 
  5: A<1>              18: spi_comp/cpol                                   31: spi_comp/txd<6> 
  6: do_cpu            19: spi_comp/run_sr                                 32: spi_comp/txd<7> 
  7: dot2clk           20: spi_comp/run_sr_d                               33: spi_comp/txd_valid 
  8: ipl               21: spi_comp/sr<4>                                  34: spi_cs/spi_cs_D2 
  9: ipl_cnt<0>        22: spi_comp/sr<5>                                  35: spi_outx 
 10: ipl_out           23: spi_comp/sr<6>                                  36: spi_outx/spi_outx_CLKF 
 11: ipl_state         24: spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2  37: spi_sel<0> 
 12: nres              25: spi_comp/start_rx                               38: spi_sel<1> 
 13: phi2              26: spi_comp/stat<0>                                39: spi_sel<2> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_comp/txd<7>      .X.XX.........X..................X...... 5
spi_clk              .......XX.X.....XXX......X.............. 7
spi_comp/txd<6>      ..XXX.........X..................X...... 5
nflash               .......X...X........................XXX. 5
spi_comp/stat<3>     ..........X........X....XXXX....X..X.... 8
spi_comp/stat<2>     ..........X........X....XXX.....X..X.... 7
spi_out              .......X.X........................X..... 3
spi_comp/stat<1>     ..........X........X....XX......X..X.... 6
spi_comp/stat<0>     ..........X........X....X.......X..X.... 5
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2 
                     ..........XX.......X....XX......X....... 6
phi2                 X....XX.....X........................... 4
spi_outx             ...................X..XX.......XX.XX.... 7
VD<6>                ..XXX..X..X..XXX......X.........XX...... 11
spi_comp/sr<6>       ...................X.XXX......X.X..X.... 7
spi_comp/sr<5>       ...................XXX.X.....X..X..X.... 7
VD<7>                .X.XX..X..X..XXX..X.............XXX..... 12
spi_comp/run_sr      ..........X.......XX....XXXXX...X..X.... 10
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB10 ***********************************
Number of function block inputs used/remaining:               46/8
Number of signals used by logic mapping into function block:  46
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/vid_addr_hold<3>
                      4       1<- /\2   0     FB10_1        (b)     (b)
viccy/vid_addr_hold<2>
                      4       0   /\1   0     FB10_2  117   I/O     (b)
viccy/vid_addr_hold<1>
                      4       0     0   1     FB10_3  118   I/O     I
viccy/vid_addr_hold<0>
                      4       0     0   1     FB10_4        (b)     (b)
VA<0>                 5       0     0   0     FB10_5  119   I/O     O
VA<1>                 5       0     0   0     FB10_6  120   I/O     O
viccy/rcline_cnt<0>   4       0     0   1     FB10_7        (b)     (b)
VA<2>                 5       0     0   0     FB10_8  121   I/O     O
viccy/vid_addr_hold<12>
                      5       0     0   0     FB10_9        (b)     (b)
VA<10>                4       0     0   1     FB10_10 124   I/O     O
VA<3>                 5       0     0   0     FB10_11 125   I/O     O
nvramsel              3       0     0   2     FB10_12 126   I/O     O
viccy/vid_addr_hold<11>
                      5       0     0   0     FB10_13       (b)     (b)
viccy/vid_addr_hold<10>
                      5       0     0   0     FB10_14 128   I/O     (b)
viccy/rcline_cnt<3>   5       0     0   0     FB10_15       (b)     (b)
viccy/rcline_cnt<2>   5       0     0   0     FB10_16       (b)     (b)
viccy/rcline_cnt<1>   5       0     0   0     FB10_17 129   I/O     I
viccy/last_line_of_char
                      7       2<-   0   0     FB10_18       (b)     (b)

Signals Used by Logic in Function Block
  1: A<0>                            17: viccy/chr_fetch              32: viccy/vid_addr<2> 
  2: A<10>                           18: viccy/last_line_of_char      33: viccy/vid_addr<3> 
  3: A<1>                            19: viccy/last_line_of_screen    34: viccy/vid_addr_hold<0> 
  4: A<2>                            20: viccy/last_vis_slot_of_line  35: viccy/vid_addr_hold<10> 
  5: A<3>                            21: viccy/rcline_cnt<0>          36: viccy/vid_addr_hold<11> 
  6: dot2clk                         22: viccy/rcline_cnt<1>          37: viccy/vid_addr_hold<12> 
  7: hsync                           23: viccy/rcline_cnt<2>          38: viccy/vid_addr_hold<1> 
  8: ipl                             24: viccy/rcline_cnt<3>          39: viccy/vid_addr_hold<2> 
  9: ipl_cnt<4>                      25: viccy/rline_cnt<0>           40: viccy/vid_addr_hold<3> 
 10: ipl_cnt<5>                      26: viccy/rows_per_char<3>       41: viccy/vpage<2> 
 11: ipl_cnt<6>                      27: viccy/vid_addr<0>            42: viccy/vpage<3> 
 12: ipl_cnt<7>                      28: viccy/vid_addr<10>           43: viccy/vpage<4> 
 13: is_vid_out                      29: viccy/vid_addr<11>           44: vis_double_in 
 14: m_vramsel_out/m_vramsel_out_D2  30: viccy/vid_addr<12>           45: vis_hires_in 
 15: slotclk                         31: viccy/vid_addr<1>            46: wait_int_d 
 16: viccy/charhold<6>              

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/vid_addr_hold<3> 
                     ..............X..XXX............X......X.......... 6
viccy/vid_addr_hold<2> 
                     ..............X..XXX...........X......X........... 6
viccy/vid_addr_hold<1> 
                     ..............X..XXX..........X......X............ 6
viccy/vid_addr_hold<0> 
                     ..............X..XXX......X......X................ 6
VA<0>                X......XX...X...X...X.....X.................X..... 8
VA<1>                ..X....X.X..X...X....X........X.............X..... 8
viccy/rcline_cnt<0>  ......X..........XX.X...X..................X...... 6
VA<2>                ...X...X..X.X...X.....X........X............X..... 8
viccy/vid_addr_hold<12> 
                     ..............X..XXX.........X......X.....X....... 7
VA<10>               .X.....X....X..XX..........X................X..... 7
VA<3>                ....X..X...XX...X......X........X...........X..... 8
nvramsel             .....X.X....XX...............................X.... 5
viccy/vid_addr_hold<11> 
                     ..............X..XXX........X......X.....X........ 7
viccy/vid_addr_hold<10> 
                     ..............X..XXX.......X......X.....X......... 7
viccy/rcline_cnt<3>  ......X..........XX.XXXXX..................X...... 9
viccy/rcline_cnt<2>  ......X..........XX.XXX.X..................X...... 8
viccy/rcline_cnt<1>  ......X..........XX.XX..X..................X...... 7
viccy/last_line_of_char 
                     ......X.............XXXXXX.................XX..... 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB11 ***********************************
Number of function block inputs used/remaining:               44/10
Number of signals used by logic mapping into function block:  44
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
memclk_d              1       0   /\1   3     FB11_1        (b)     (b)
clk1m                 1       0     0   4     FB11_2        (b)     (b)
spi_nsel5             1       0     0   4     FB11_3  60    I/O     O
clocky/cpu_cnt1<1>    2       0     0   3     FB11_4        (b)     (b)
clk2m                 2       0     0   3     FB11_5  61    I/O     (b)
viccy/vpage<7>        3       0     0   2     FB11_6        (b)     (b)
viccy/vpage<6>        3       0     0   2     FB11_7        (b)     (b)
spi_outx/spi_outx_CLKF
                      3       0     0   2     FB11_8        (b)     (b)
mappy/cfg_mp<7>       3       0     0   2     FB11_9        (b)     (b)
mappy/cfg_mp<6>       3       0     0   2     FB11_10 64    I/O     (b)
nsel4                 2       0     0   3     FB11_11 66    I/O     O
nsel2                 2       0     0   3     FB11_12 68    I/O     O
mappy/cfg_mp<0>       3       0     0   2     FB11_13       (b)     (b)
nsel1                 2       0     0   3     FB11_14 69    I/O     O
io1m                  3       0     0   2     FB11_15       (b)     (b)
clocky/cpu_cnt1<2>    3       0     0   2     FB11_16       (b)     (b)
clk4m                 4       0   \/1   0     FB11_17 70    I/O     I
is_cpu                7       2<-   0   0     FB11_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D<7>.PIN          16: clk1m                                             31: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
  2: D<6>.PIN          17: clk2m                                             32: mappy/low64k/mappy/low64k_D2 
  3: D<0>.PIN          18: clk4m                                             33: mode<0> 
  4: A<10>             19: clocky/cpu_cnt1<0>                                34: mode<1> 
  5: A<11>             20: clocky/cpu_cnt1<1>                                35: nres 
  6: A<12>             21: clocky/cpu_cnt1<2>                                36: phi2 
  7: A<13>             22: do_cpu                                            37: spi_sel<0> 
  8: A<14>             23: dot2clk                                           38: spi_sel<1> 
  9: A<15>             24: dot4clk                                           39: spi_sel<2> 
 10: A<4>              25: io1m                                              40: vda 
 11: A<5>              26: is_cpu                                            41: viccy/vpage<6> 
 12: A<6>              27: mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2  42: viccy/vpage<7> 
 13: A<7>              28: mappy/cfg_mp<0>                                   43: viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2 
 14: A<8>              29: mappy/cfg_mp<6>                                   44: vpa 
 15: A<9>              30: mappy/cfg_mp<7>                                  

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
memclk_d             ......................X........................... 1
clk1m                ..................XXX...X......................... 4
spi_nsel5            ..................................X.XXX........... 4
clocky/cpu_cnt1<1>   ..................X...X........................... 2
clk2m                ..................XXX...X......................... 4
viccy/vpage<7>       X....................XX..................XX....... 5
viccy/vpage<6>       .X...................XX.................X.X....... 5
spi_outx/spi_outx_CLKF 
                     ......................XX............X.X........... 4
mappy/cfg_mp<7>      X............................XX....X.............. 4
mappy/cfg_mp<6>      .X..........................X.X....X.............. 4
nsel4                ...XXXXXXXXXXXX...........X....X.......X...X...... 16
nsel2                ...XXXXXXXXXXXX...........X....X.......X...X...... 16
mappy/cfg_mp<0>      ..X........................X..X....X.............. 4
nsel1                ...XXXXXXXXXXXX...........X....X.......X...X...... 16
io1m                 ..................XXX.X.X......................... 5
clocky/cpu_cnt1<2>   ..................XXX.X.X......................... 5
clk4m                ..................XXX...X......................... 4
is_cpu               ...............XXX...XX..X......XX................ 8
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB12 ***********************************
Number of function block inputs used/remaining:               42/12
Number of signals used by logic mapping into function block:  42
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
ipl                   2       0     0   3     FB12_1        (b)     (b)
VD<3>                 3       0     0   2     FB12_2  110   I/O     I/O
VD<2>                 4       0     0   1     FB12_3  111   I/O     I/O
viccy/vpage<5>        3       0     0   2     FB12_4        (b)     (b)
VD<4>                 4       0     0   1     FB12_5  112   I/O     I/O
viccy/vpage<4>        3       0     0   2     FB12_6        (b)     (b)
viccy/vpage<3>        3       0     0   2     FB12_7        (b)     (b)
VD<1>                 4       0     0   1     FB12_8  113   I/O     I/O
viccy/vpage<2>        3       0     0   2     FB12_9        (b)     (b)
VD<5>                 4       0     0   1     FB12_10 115   I/O     I/O
viccy/crtc_reg<1>     3       0     0   2     FB12_11       (b)     (b)
VD<0>                 4       0     0   1     FB12_12 116   I/O     I/O
viccy/crtc_reg<0>     3       0     0   2     FB12_13       (b)     (b)
spi_comp/txd_valid    3       0     0   2     FB12_14       (b)     (b)
spi_comp/start_rx     3       0     0   2     FB12_15       (b)     (b)
ipl_state             3       0     0   2     FB12_16       (b)     (b)
ipl_cnt<7>            3       0     0   2     FB12_17       (b)     (b)
ipl_cnt<0>            3       0     0   2     FB12_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$419   15: ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2  29: spi_comp/sr<5> 
  2: D<5>.PIN          16: ipl_next                                                          30: spi_comp/start_rx/spi_comp/start_rx_RSTF 
  3: D<4>.PIN          17: ipl_state                                                         31: spi_comp/txd_valid/spi_comp/txd_valid_RSTF 
  4: D<3>.PIN          18: ipl_state_d                                                       32: spi_cs/spi_cs_D2 
  5: D<2>.PIN          19: ramrwb                                                            33: spi_sel<0> 
  6: D<1>.PIN          20: rwb                                                               34: spi_sel<1> 
  7: D<0>.PIN          21: spi_comp/N01/spi_comp/N01_D2                                      35: spi_sel<2> 
  8: A<0>              22: spi_comp/cpha                                                     36: viccy/crtc_reg<0> 
  9: A<1>              23: spi_comp/cpol                                                     37: viccy/crtc_reg<1> 
 10: do_cpu            24: spi_comp/sr<0>                                                    38: viccy/vpage<2> 
 11: dot2clk           25: spi_comp/sr<1>                                                    39: viccy/vpage<3> 
 12: ipl               26: spi_comp/sr<2>                                                    40: viccy/vpage<4> 
 13: ipl_cnt<0>        27: spi_comp/sr<3>                                                    41: viccy/vpage<5> 
 14: ipl_cnt<7>        28: spi_comp/sr<4>                                                    42: viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
ipl                  ..........XX...X.X................................ 4
VD<3>                ...X.......X......X.X.....X....................... 5
VD<2>                ....X..XX..X....X.XXX....X.....X..X............... 11
viccy/vpage<5>       .X.......XX.............................XX........ 5
VD<4>                ..X....XX..X....X.XXXX.....X...X.................. 11
viccy/vpage<4>       ..X......XX............................X.X........ 5
viccy/vpage<3>       ...X.....XX...........................X..X........ 5
VD<1>                .....X.XX..X....X.XXX...X......X.X................ 11
viccy/vpage<2>       ....X....XX..........................X...X........ 5
VD<5>                .X.....XX..X....X.XXX.X.....X..X.................. 11
viccy/crtc_reg<1>    X..XXXX...X.........................X............. 7
VD<0>                ......XXX..X....X.XXX..X.......XX................. 11
viccy/crtc_reg<0>    X..XXXX...X........................X.............. 7
spi_comp/txd_valid   .......XX..........X..........XX.................. 5
spi_comp/start_rx    .......XX..........X.........X.X.................. 5
ipl_state            ..........XX...X.X................................ 4
ipl_cnt<7>           ..........XX.XXX.X................................ 6
ipl_cnt<0>           ..........XXX..X.X................................ 5
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB13 ***********************************
Number of function block inputs used/remaining:               42/12
Number of signals used by logic mapping into function block:  42
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
D_7_IOBUFE/D_7_IOBUFE_TRST
                      2       0   \/1   2     FB13_1        (b)     (b)
FA<15>                6       1<-   0   0     FB13_2  71    I/O     O
wp_romB               3       0     0   2     FB13_3        (b)     (b)
mappy/bankl<7>        3       0     0   2     FB13_4        (b)     (b)
mappy/bankl<6>        3       0     0   2     FB13_5        (b)     (b)
mappy/bankl<5>        3       0     0   2     FB13_6        (b)     (b)
mappy/bankl<4>        3       0     0   2     FB13_7        (b)     (b)
mappy/bankl<3>        3       0     0   2     FB13_8  74    I/O     I
mappy/bankl<2>        3       0     0   2     FB13_9        (b)     (b)
mappy/bankl<1>        3       0     0   2     FB13_10       (b)     (b)
mappy/bankl<0>        3       0     0   2     FB13_11 75    I/O     I
lowbank<1>            3       0     0   2     FB13_12       (b)     (b)
lowbank<0>            3       0     0   2     FB13_13       (b)     (b)
lockb0                3       0     0   2     FB13_14 76    I/O     (b)
D<7>                  5       0     0   0     FB13_15 77    I/O     I/O
is8296                3       0     0   2     FB13_16       (b)     (b)
D<6>                  4       0     0   1     FB13_17 78    I/O     I/O
boot                  3       0     0   2     FB13_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D_7_IOBUFE/D_7_IOBUFE_TRST  15: A<13>                                             29: mappy/cfg_mp<3> 
  2: D<7>.PIN                    16: A<14>                                             30: mappy/cfg_mp<5> 
  3: D<6>.PIN                    17: A<15>                                             31: mappy/low64k/mappy/low64k_D2 
  4: D<5>.PIN                    18: A<1>                                              32: nres 
  5: D<4>.PIN                    19: e                                                 33: phi2 
  6: D<3>.PIN                    20: ipl_state                                         34: rwb 
  7: D<2>.PIN                    21: is8296                                            35: spi_comp/N01/spi_comp/N01_D2 
  8: D<1>.PIN                    22: lockb0                                            36: spi_comp/run_sr 
  9: D<0>.PIN                    23: lowbank<0>                                        37: spi_comp/sr<6> 
 10: VD<7>.PIN                   24: lowbank<1>                                        38: spi_comp/txd_valid 
 11: VD<6>.PIN                   25: lowbank_not0001/lowbank_not0001_D2                39: spi_cs/spi_cs_D2 
 12: boot                        26: m_vramsel_out/m_vramsel_out_D2                    40: spi_outx 
 13: A<0>                        27: mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2  41: wp_romB 
 14: A<12>                       28: mappy/cfg_mp<2>                                   42: wp_romPET_or0000/wp_romPET_or0000_D2 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
D_7_IOBUFE/D_7_IOBUFE_TRST 
                     .........................X......XX....X........... 4
FA<15>               .............XXXX.....X...XXXXX................... 10
wp_romB              ..X............................XX.......XX........ 5
mappy/bankl<7>       .X................X..X..........X................. 4
mappy/bankl<6>       ..X...............X..X..........X................. 4
mappy/bankl<5>       ...X..............X..X..........X................. 4
mappy/bankl<4>       ....X.............X..X..........X................. 4
mappy/bankl<3>       .....X............X..X..........X................. 4
mappy/bankl<2>       ......X...........X..X..........X................. 4
mappy/bankl<1>       .......X..........X..X..........X................. 4
mappy/bankl<0>       ........X.........X..X..........X................. 4
lowbank<1>           .......X...............XX.......X................. 4
lowbank<0>           ........X.............X.X.......X................. 4
lockb0               ........X............X..........X........X........ 4
D<7>                 X........X..X....X.X.....X.......XXX.XXX.......... 12
is8296               .....X..............X...........X........X........ 4
D<6>                 X.........X.X....X.X.....X.......XX.XXX........... 11
boot                 .......X...X....................X........X........ 4
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB14 ***********************************
Number of function block inputs used/remaining:               38/16
Number of signals used by logic mapping into function block:  38
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
vis_hires_in          3       0     0   2     FB14_1        (b)     (b)
vis_double_in         3       0     0   2     FB14_2        (b)     (b)
vis_80_in             3       0     0   2     FB14_3  100   I/O     I
vidblock<0>           3       0     0   2     FB14_4        (b)     (b)
screenb0              3       0     0   2     FB14_5  101   I/O     I
movesync              3       0     0   2     FB14_6  102   I/O     I
mode<1>               3       0     0   2     FB14_7        (b)     (b)
mode<0>               3       0     0   2     FB14_8  103   I/O     I
mappy/cfg_mp<5>       3       0     0   2     FB14_9        (b)     (b)
mappy/cfg_mp<3>       3       0     0   2     FB14_10 104   I/O     I
FA<16>                4       0     0   1     FB14_11 105   I/O     O
mappy/cfg_mp<2>       3       0     0   2     FB14_12       (b)     (b)
mappy/cfg_mp<1>       3       0     0   2     FB14_13       (b)     (b)
FA<17>                3       0     0   2     FB14_14 106   I/O     O
FA<18>                3       0     0   2     FB14_15 107   I/O     O
lowbank<3>            3       0     0   2     FB14_16       (b)     (b)
lowbank<2>            3       0     0   2     FB14_17       (b)     (b)
interlace             3       0     0   2     FB14_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D<6>.PIN          14: lowbank<2>                                        27: mode<0> 
  2: D<5>.PIN          15: lowbank<3>                                        28: mode<1> 
  3: D<4>.PIN          16: lowbank_not0001/lowbank_not0001_D2                29: mode_not0001/mode_not0001_D2 
  4: D<3>.PIN          17: mappy/bankl<0>                                    30: movesync 
  5: D<2>.PIN          18: mappy/bankl<1>                                    31: movesync_not0001/movesync_not0001_D2 
  6: D<1>.PIN          19: mappy/bankl<2>                                    32: phi2 
  7: D<0>.PIN          20: mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2  33: screenb0 
  8: A<12>             21: mappy/cfg_mp<1>                                   34: vidblock<0> 
  9: A<13>             22: mappy/cfg_mp<2>                                   35: vidblock_not0001/vidblock_not0001_D2 
 10: A<14>             23: mappy/cfg_mp<3>                                   36: vis_80_in 
 11: A<15>             24: mappy/cfg_mp<5>                                   37: vis_double_in 
 12: interlace         25: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2      38: vis_hires_in 
 13: lowbank<1>        26: mappy/low64k/mappy/low64k_D2                     

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
vis_hires_in         ......X.......................XX.....X.. 4
vis_double_in        ...X..........................XX....X... 4
vis_80_in            .....X........................XX...X.... 4
vidblock<0>          ......X........................X.XX..... 4
screenb0             ....X.........................XXX....... 4
movesync             X............................XXX........ 4
mode<1>              .....X.....................XX..X........ 4
mode<0>              ......X...................X.X..X........ 4
mappy/cfg_mp<5>      .X.....................XX......X........ 4
mappy/cfg_mp<3>      ...X..................X.X......X........ 4
FA<16>               .......XXXX.X...X..X...X.X.............. 9
mappy/cfg_mp<2>      ....X................X..X......X........ 4
mappy/cfg_mp<1>      .....X..............X...X......X........ 4
FA<17>               ..........X..X...X.......X.............. 4
FA<18>               ..........X...X...X......X.............. 4
lowbank<3>           ...X..........XX...............X........ 4
lowbank<2>           ....X........X.X...............X........ 4
interlace            ..X........X..................XX........ 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB15 ***********************************
Number of function block inputs used/remaining:               31/23
Number of signals used by logic mapping into function block:  31
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_sel<2>            3       0     0   2     FB15_1        (b)     (b)
D<5>                  4       0     0   1     FB15_2  79    I/O     I/O
D<4>                  4       0     0   1     FB15_3  80    I/O     I/O
spi_sel<1>            3       0     0   2     FB15_4        (b)     (b)
spi_sel<0>            3       0     0   2     FB15_5        (b)     (b)
spi_comp/txd<5>       3       0     0   2     FB15_6        (b)     (b)
spi_comp/txd<4>       3       0     0   2     FB15_7        (b)     (b)
D<3>                  3       0     0   2     FB15_8  81    I/O     I/O
spi_comp/txd<3>       3       0     0   2     FB15_9        (b)     (b)
D<2>                  4       0     0   1     FB15_10 82    I/O     I/O
D<1>                  4       0     0   1     FB15_11 83    I/O     I/O
spi_comp/txd<2>       3       0     0   2     FB15_12 85    I/O     I
spi_comp/txd<1>       3       0     0   2     FB15_13       (b)     (b)
D<0>                  4       0     0   1     FB15_14 86    I/O     I/O
spi_comp/txd<0>       3       0     0   2     FB15_15 87    I/O     I
spi_comp/cpol         3       0     0   2     FB15_16       (b)     (b)
spi_comp/cpha         3       0     0   2     FB15_17 88    I/O     I
spi_comp/N01/spi_comp/N01_D2
                      3       0     0   2     FB15_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D_7_IOBUFE/D_7_IOBUFE_TRST  12: VD<1>.PIN                       22: spi_comp/sr<0> 
  2: D<5>.PIN                    13: VD<0>.PIN                       23: spi_comp/sr<1> 
  3: D<4>.PIN                    14: A<0>                            24: spi_comp/sr<2> 
  4: D<3>.PIN                    15: A<1>                            25: spi_comp/sr<3> 
  5: D<2>.PIN                    16: ipl_state                       26: spi_comp/sr<4> 
  6: D<1>.PIN                    17: m_vramsel_out/m_vramsel_out_D2  27: spi_comp/sr<5> 
  7: D<0>.PIN                    18: rwb                             28: spi_cs/spi_cs_D2 
  8: VD<5>.PIN                   19: spi_comp/N01/spi_comp/N01_D2    29: spi_sel<0> 
  9: VD<4>.PIN                   20: spi_comp/cpha                   30: spi_sel<1> 
 10: VD<3>.PIN                   21: spi_comp/cpol                   31: spi_sel<2> 
 11: VD<2>.PIN                  

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_sel<2>           ....X........XX..X.........X............ 5
D<5>                 X......X.....XXXXXX.X.....XX............ 11
D<4>                 X.......X....XXXXXXX.....X.X............ 11
spi_sel<1>           .....X.......XX..X.........X............ 5
spi_sel<0>           ......X......XX..X.........X............ 5
spi_comp/txd<5>      .X...........XX..X.........X............ 5
spi_comp/txd<4>      ..X..........XX..X.........X............ 5
D<3>                 X........X......X.X.....X............... 5
spi_comp/txd<3>      ...X.........XX..X.........X............ 5
D<2>                 X.........X..XXXXXX....X...X..X......... 11
D<1>                 X..........X.XXXXXX...X....X.X.......... 11
spi_comp/txd<2>      ....X........XX..X.........X............ 5
spi_comp/txd<1>      .....X.......XX..X.........X............ 5
D<0>                 X...........XXXXXXX..X.....XX........... 11
spi_comp/txd<0>      ......X......XX..X.........X............ 5
spi_comp/cpol        .X...........XX..X.........X............ 5
spi_comp/cpha        ..X..........XX..X.........X............ 5
spi_comp/N01/spi_comp/N01_D2 
                     .............XXX.X.........X............ 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB16 ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB16_1        (b)     
(unused)              0       0     0   5     FB16_2  91    I/O     I
(unused)              0       0     0   5     FB16_3  92    I/O     I
viccy/sr_load_d       1       0     0   4     FB16_4        (b)     (b)
spi_comp/txd_valid/spi_comp/txd_valid_RSTF
                      1       0     0   4     FB16_5  93    I/O     I
spi_comp/start_rx/spi_comp/start_rx_RSTF
                      1       0     0   4     FB16_6  94    I/O     I
is_vid_out            1       0     0   4     FB16_7        (b)     (b)
$OpTx$FX_DC$417       1       0     0   4     FB16_8  95    I/O     I
viccy/in_slot         2       0     0   3     FB16_9        (b)     (b)
viccy/charhold<7>     2       0     0   3     FB16_10 96    I/O     I
viccy/charhold<6>     2       0     0   3     FB16_11 97    I/O     I
viccy/charhold<5>     2       0     0   3     FB16_12 98    I/O     I
viccy/charhold<4>     2       0     0   3     FB16_13       (b)     (b)
viccy/charhold<3>     2       0     0   3     FB16_14       (b)     (b)
viccy/charhold<2>     2       0     0   3     FB16_15       (b)     (b)
viccy/charhold<1>     2       0     0   3     FB16_16       (b)     (b)
viccy/charhold<0>     2       0     0   3     FB16_17       (b)     (b)
phi2_io_1m/phi2_io_1m_SETF
                      2       0     0   3     FB16_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$417    8: VD<1>.PIN         15: slotclk 
  2: VD<7>.PIN          9: VD<0>.PIN         16: spi_comp/ack_rxtx 
  3: VD<6>.PIN         10: io1m              17: spi_comp/ack_txd 
  4: VD<5>.PIN         11: mode<0>           18: sr_load 
  5: VD<4>.PIN         12: mode<1>           19: viccy/chr_fetch 
  6: VD<3>.PIN         13: nres              20: viccy/pxl_fetch 
  7: VD<2>.PIN         14: phi2              21: viccy/slot_cnt<0> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/sr_load_d      .................X...................... 1
spi_comp/txd_valid/spi_comp/txd_valid_RSTF 
                     ............X...X....................... 2
spi_comp/start_rx/spi_comp/start_rx_RSTF 
                     ............X..X........................ 2
is_vid_out           ..................XX.................... 2
$OpTx$FX_DC$417      ..........XX............................ 2
viccy/in_slot        ..............X.....X................... 2
viccy/charhold<7>    .X................X..................... 2
viccy/charhold<6>    ..X...............X..................... 2
viccy/charhold<5>    ...X..............X..................... 2
viccy/charhold<4>    ....X.............X..................... 2
viccy/charhold<3>    .....X............X..................... 2
viccy/charhold<2>    ......X...........X..................... 2
viccy/charhold<1>    .......X..........X..................... 2
viccy/charhold<0>    ........X.........X..................... 2
phi2_io_1m/phi2_io_1m_SETF 
                     X........X...X.......................... 3
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$417 <= (NOT mode(1) AND NOT mode(0));


$OpTx$FX_DC$419 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND 
	NOT A(9) AND vpa AND mappy/low64k/mappy/low64k_D2 AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND 
	NOT A(9) AND vda AND mappy/low64k/mappy/low64k_D2 AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));


D_I(0) <= ((VD(0).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(0) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(0) AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(0) <= D_I(0) when D_OE(0) = '1' else 'Z';
D_OE(0) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(1) <= ((VD(1).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(1) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(1) AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(1) <= D_I(1) when D_OE(1) = '1' else 'Z';
D_OE(1) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(2) <= ((VD(2).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(2) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(2) AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(2) <= D_I(2) when D_OE(2) = '1' else 'Z';
D_OE(2) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(3) <= ((VD(3).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(3) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(3) <= D_I(3) when D_OE(3) = '1' else 'Z';
D_OE(3) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(4) <= ((VD(4).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(4) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/cpha AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(4) <= D_I(4) when D_OE(4) = '1' else 'Z';
D_OE(4) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(5) <= ((VD(5).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(5) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/cpol AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(5) <= D_I(5) when D_OE(5) = '1' else 'Z';
D_OE(5) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(6) <= ((VD(6).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(6) AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND spi_comp/txd_valid AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(6) <= D_I(6) when D_OE(6) = '1' else 'Z';
D_OE(6) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(7) <= ((VD(7).PIN AND m_vramsel_out/m_vramsel_out_D2)
	OR (spi_outx AND NOT m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/run_sr AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (NOT ipl_state AND rwb AND spi_comp/txd_valid AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2 AND NOT m_vramsel_out/m_vramsel_out_D2));
D(7) <= D_I(7) when D_OE(7) = '1' else 'Z';
D_OE(7) <= D_7_IOBUFE/D_7_IOBUFE_TRST;


D_7_IOBUFE/D_7_IOBUFE_TRST <= ((rwb AND spi_cs/spi_cs_D2)
	OR (phi2 AND rwb AND m_vramsel_out/m_vramsel_out_D2));


















FA(15) <= NOT (((A(15) AND NOT A(14) AND A(12) AND NOT mappy/cfg_mp(2) AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT A(15) AND NOT lowbank(0))
	OR (NOT A(15) AND NOT mappy/low64k/mappy/low64k_D2)
	OR (A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND 
	NOT mappy/cfg_mp(2) AND mappy/low64k/mappy/low64k_D2 AND 
	NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND NOT A(14) AND A(13) AND NOT mappy/cfg_mp(2) AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)));


FA(16) <= NOT (((NOT mappy/bankl(0) AND NOT mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/bankl(0) AND A(15) AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT mappy/bankl(0) AND NOT A(15) AND NOT lowbank(1))
	OR (mappy/cfg_mp(5) AND NOT mappy/bankl(0) AND A(15) AND 
	NOT A(14) AND NOT A(13) AND NOT A(12))));


FA(17) <= ((mappy/bankl(1) AND A(15))
	OR (mappy/bankl(1) AND NOT mappy/low64k/mappy/low64k_D2)
	OR (NOT A(15) AND lowbank(2) AND 
	mappy/low64k/mappy/low64k_D2));


FA(18) <= ((mappy/bankl(2) AND A(15))
	OR (mappy/bankl(2) AND NOT mappy/low64k/mappy/low64k_D2)
	OR (NOT A(15) AND lowbank(3) AND 
	mappy/low64k/mappy/low64k_D2));


VA(0) <= ((ipl_cnt(4) AND ipl)
	OR (NOT ipl AND A(0) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(0) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(0) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(0) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(1) <= ((ipl_cnt(5) AND ipl)
	OR (NOT ipl AND A(1) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(1) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(1) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(1) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(2) <= ((ipl_cnt(6) AND ipl)
	OR (NOT ipl AND A(2) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(2) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(2) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(2) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(3) <= ((ipl_cnt(7) AND ipl)
	OR (NOT ipl AND A(3) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(3) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(3) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(3) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(4) <= ((ipl_cnt(8) AND ipl)
	OR (NOT ipl AND A(4) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(4) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(4) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(0) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(5) <= ((ipl_cnt(9) AND ipl)
	OR (NOT ipl AND A(5) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(5) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(5) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(1) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(6) <= ((vis_hires_in AND viccy/vid_addr(6) AND NOT ipl AND 
	is_vid_out)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(2) AND 
	is_vid_out AND NOT viccy/chr_fetch)
	OR (ipl_cnt(10) AND ipl)
	OR (NOT ipl AND A(6) AND NOT is_vid_out)
	OR (viccy/vid_addr(6) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch));


VA(7) <= ((ipl_cnt(11) AND ipl)
	OR (NOT ipl AND A(7) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(7) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(7) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(3) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(8) <= NOT (((NOT ipl AND NOT A(8) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(8) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(8) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(4) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(9) <= NOT (((NOT ipl AND NOT A(9) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(9) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(9) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(5) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(10) <= NOT (((NOT ipl AND NOT A(10) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(10) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(10) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(6) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(11) <= NOT (((vis_hires_in AND NOT viccy/vid_addr(11) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(11) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT A(15) AND NOT A(11) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(11) AND NOT vidblock(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(7) AND 
	is_vid_out AND NOT viccy/chr_fetch)
	OR (mappy/cfg_mp(7) AND NOT mappy/cfg_mp(5) AND NOT A(11) AND NOT ipl AND 
	NOT is_vid_out)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	A(11) AND NOT A(12) AND screenb0 AND vidblock(0) AND NOT ipl AND 
	NOT is_vid_out AND mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	A(11) AND NOT A(12) AND screenb0 AND vidblock(0) AND NOT ipl AND 
	NOT is_vid_out AND mappy/low64k/mappy/low64k_D2)
	OR (A(14) AND NOT A(11) AND NOT ipl AND NOT is_vid_out)
	OR (A(13) AND NOT A(11) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(11) AND A(12) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(11) AND NOT screenb0 AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(11) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/low64k/mappy/low64k_D2)));


VA(12) <= ((ipl)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	screenb0 AND vidblock(1) AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	screenb0 AND vidblock(1) AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2)
	OR (A(12) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(12) AND is_vid_out)
	OR (viccy/vid_addr(12) AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND is_vid_out AND NOT viccy/chr_fetch AND 
	graphic));


VA(13) <= ((ipl)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(12) AND 
	screenb0 AND vidblock(2) AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(12) AND 
	screenb0 AND vidblock(2) AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2)
	OR (A(13) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(13) AND is_vid_out)
	OR (viccy/vid_addr(13) AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/vpage(6) AND is_vid_out AND 
	NOT viccy/chr_fetch));


VA(14) <= ((ipl)
	OR (A(14) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vpage(6) AND is_vid_out)
	OR (NOT vis_hires_in AND viccy/vpage(7) AND is_vid_out AND 
	viccy/pxl_fetch));


VA(15) <= NOT (((A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND NOT ipl AND 
	NOT is_vid_out AND mappy/low64k/mappy/low64k_D2 AND 
	NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND 
	NOT mappy/cfg_mp(2) AND NOT ipl AND NOT is_vid_out AND mappy/low64k/mappy/low64k_D2 AND 
	NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND NOT A(14) AND A(13) AND NOT mappy/cfg_mp(2) AND NOT ipl AND 
	NOT is_vid_out AND mappy/low64k/mappy/low64k_D2 AND 
	NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND NOT A(14) AND A(12) AND NOT mappy/cfg_mp(2) AND NOT ipl AND 
	NOT is_vid_out AND mappy/low64k/mappy/low64k_D2 AND 
	NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (vis_hires_in AND NOT viccy/vpage(7) AND NOT ipl AND 
	is_vid_out)
	OR (NOT vis_hires_in AND NOT ipl AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (NOT A(15) AND NOT lowbank(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/low64k/mappy/low64k_D2)));


VA(16) <= ((NOT A(15) AND lowbank(1) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(5) AND A(15) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(13) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(12) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2 AND NOT mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (mappy/bankl(0) AND NOT ipl AND NOT is_vid_out));


VA(17) <= ((mappy/bankl(1) AND A(15) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(1) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/low64k/mappy/low64k_D2)
	OR (NOT A(15) AND lowbank(2) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2));


VA(18) <= ((mappy/bankl(2) AND A(15) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(2) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/low64k/mappy/low64k_D2)
	OR (NOT A(15) AND lowbank(3) AND NOT ipl AND NOT is_vid_out AND 
	mappy/low64k/mappy/low64k_D2));


VD_I(0) <= ((D(0).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(0) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(0) AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2));
VD(0) <= VD_I(0) when VD_OE(0) = '1' else 'Z';
VD_OE(0) <= NOT ramrwb;


VD_I(1) <= ((D(1).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(1) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(1) AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2));
VD(1) <= VD_I(1) when VD_OE(1) = '1' else 'Z';
VD_OE(1) <= NOT ramrwb;


VD_I(2) <= ((D(2).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(2) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(2) AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2));
VD(2) <= VD_I(2) when VD_OE(2) = '1' else 'Z';
VD_OE(2) <= NOT ramrwb;


VD_I(3) <= ((D(3).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(3) AND 
	spi_comp/N01/spi_comp/N01_D2));
VD(3) <= VD_I(3) when VD_OE(3) = '1' else 'Z';
VD_OE(3) <= NOT ramrwb;


VD_I(4) <= ((D(4).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(4) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/cpha AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2));
VD(4) <= VD_I(4) when VD_OE(4) = '1' else 'Z';
VD_OE(4) <= NOT ramrwb;


VD_I(5) <= ((D(5).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(5) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/cpol AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2));
VD(5) <= VD_I(5) when VD_OE(5) = '1' else 'Z';
VD_OE(5) <= NOT ramrwb;


VD_I(6) <= ((D(6).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(6) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND ipl AND rwb AND spi_comp/txd_valid AND 
	NOT A(1) AND NOT A(0) AND spi_cs/spi_cs_D2));
VD(6) <= VD_I(6) when VD_OE(6) = '1' else 'Z';
VD_OE(6) <= NOT ramrwb;


VD_I(7) <= ((D(7).PIN AND NOT ipl)
	OR (ipl AND spi_outx AND spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_comp/run_sr AND ipl AND rwb AND NOT A(1) AND 
	NOT A(0) AND spi_cs/spi_cs_D2)
	OR (NOT ipl_state AND ipl AND rwb AND spi_comp/txd_valid AND 
	NOT A(1) AND NOT A(0) AND spi_cs/spi_cs_D2));
VD(7) <= VD_I(7) when VD_OE(7) = '1' else 'Z';
VD_OE(7) <= NOT ramrwb;

FDCPE_boot: FDCPE port map (boot,boot_D,NOT phi2,'0',NOT nres);
boot_D <= ((D(1).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (boot AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_chr_window: FDCPE port map (chr_window,chr_window_D,NOT q50m,NOT nres,'0');
chr_window_D <= (clocky/clk_cnt_0_2 AND NOT clocky/clk_cnt_0_3);

FDCPE_clk1m: FDCPE port map (clk1m,clk1m_D,q50m,NOT nres,'0');
clk1m_D <= (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND NOT io1m AND 
	NOT clocky/cpu_cnt1(0));

FDCPE_clk2m: FDCPE port map (clk2m,clk2m_D,q50m,NOT nres,'0');
clk2m_D <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND NOT io1m AND 
	NOT clocky/cpu_cnt1(0))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND NOT io1m AND 
	NOT clocky/cpu_cnt1(0)));

FDCPE_clk4m: FDCPE port map (clk4m,clk4m_D,q50m,NOT nres,'0');
clk4m_D <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND NOT io1m AND 
	NOT clocky/cpu_cnt1(0))
	OR (clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND NOT io1m AND 
	clocky/cpu_cnt1(0))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND io1m AND 
	clocky/cpu_cnt1(0))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND NOT io1m AND 
	NOT clocky/cpu_cnt1(0)));

FTCPE_clocky/clk_cnt_0_0: FTCPE port map (clocky/clk_cnt_0_0,'1',q50m,NOT nres,'0');

FTCPE_clocky/clk_cnt_0_1: FTCPE port map (clocky/clk_cnt_0_1,clocky/clk_cnt_0_0,q50m,NOT nres,'0');

FTCPE_clocky/clk_cnt_0_2: FTCPE port map (clocky/clk_cnt_0_2,clocky/clk_cnt_0_2_T,q50m,NOT nres,'0');
clocky/clk_cnt_0_2_T <= (clocky/clk_cnt_0_0 AND clocky/clk_cnt_0_1);

FTCPE_clocky/clk_cnt_0_3: FTCPE port map (clocky/clk_cnt_0_3,clocky/clk_cnt_0_3_T,q50m,NOT nres,'0');
clocky/clk_cnt_0_3_T <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_0 AND 
	clocky/clk_cnt_0_1);

FTCPE_clocky/cpu_cnt10: FTCPE port map (clocky/cpu_cnt1(0),'1',dot2clk,NOT nres,'0');

FTCPE_clocky/cpu_cnt11: FTCPE port map (clocky/cpu_cnt1(1),clocky/cpu_cnt1(0),dot2clk,NOT nres,'0');

FTCPE_clocky/cpu_cnt12: FTCPE port map (clocky/cpu_cnt1(2),clocky/cpu_cnt1_T(2),dot2clk,NOT nres,'0');
clocky/cpu_cnt1_T(2) <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0))
	OR (clocky/cpu_cnt1(1) AND NOT io1m AND clocky/cpu_cnt1(0)));

FDCPE_dclk: FDCPE port map (dclk,clocky/clk_cnt_0_0,NOT q50m,'0','0',nres);

FDCPE_dena: FDCPE port map (dena,dena_D,NOT dclk,'0','0',dena_CE);
dena_D <= (viccy/h_enable AND viccy/v_enable);
dena_CE <= (nres AND viccy/pxl_fetch AND viccy/sr_load_d);

FDCPE_do_cpu: FDCPE port map (do_cpu,do_cpu_D,memclk_d,NOT nres,'0');
do_cpu_D <= ((is_cpu AND NOT ipl AND NOT is_vid_out)
	OR (is_cpu AND NOT ipl AND NOT m_vramsel_out/m_vramsel_out_D2));

FDCPE_dot2clk: FDCPE port map (dot2clk,clocky/clk_cnt_0_1,NOT q50m,'0','0',nres);

FDCPE_dot4clk: FDCPE port map (dot4clk,clocky/clk_cnt_0_2,NOT q50m,'0','0',nres);

FDCPE_hsync: FDCPE port map (hsync,hsync_D,NOT slotclk,'0','0');
hsync_D <= ((viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(5) AND viccy/slot_cnt(2))
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(5) AND viccy/slot_cnt(3))
	OR (NOT viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3)));

FDCPE_interlace: FDCPE port map (interlace,interlace_D,NOT phi2,NOT nres,'0');
interlace_D <= ((D(4).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (interlace AND NOT movesync_not0001/movesync_not0001_D2));

FTCPE_io1m: FTCPE port map (io1m,io1m_T,dot2clk,NOT nres,'0');
io1m_T <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0))
	OR (clocky/cpu_cnt1(1) AND io1m AND clocky/cpu_cnt1(0)));

FDCPE_ipl: FDCPE port map (ipl,'0',NOT dot2clk,'0',NOT nres,ipl_CE);
ipl_CE <= (ipl AND ipl_next AND ipl_state_d);

FTCPE_ipl_cnt0: FTCPE port map (ipl_cnt(0),ipl_cnt_T(0),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(0) <= ((ipl AND NOT ipl_next)
	OR (ipl_cnt(0) AND ipl AND NOT ipl_state_d));

FTCPE_ipl_cnt1: FTCPE port map (ipl_cnt(1),ipl_cnt_T(1),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(1) <= ((ipl_cnt(0) AND ipl AND NOT ipl_next)
	OR (ipl_cnt(1) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt2: FTCPE port map (ipl_cnt(2),ipl_cnt_T(2),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(2) <= ((ipl_cnt(2) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(0) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt3: FTCPE port map (ipl_cnt(3),ipl_cnt_T(3),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(3) <= ((ipl_cnt(3) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(1) AND ipl AND 
	NOT ipl_next));

FTCPE_ipl_cnt4: FTCPE port map (ipl_cnt(4),ipl_cnt_T(4),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(4) <= ((ipl_cnt(4) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt5: FTCPE port map (ipl_cnt(5),ipl_cnt_T(5),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(5) <= ((ipl_cnt(5) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt6: FTCPE port map (ipl_cnt(6),ipl_cnt_T(6),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(6) <= ((ipl_cnt(6) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(5) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt7: FTCPE port map (ipl_cnt(7),ipl_cnt_T(7),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(7) <= ((ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2)
	OR (ipl_cnt(7) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt8: FTCPE port map (ipl_cnt(8),ipl_cnt_T(8),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(8) <= ((ipl_cnt(7) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2)
	OR (ipl_cnt(8) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt9: FTCPE port map (ipl_cnt(9),ipl_cnt_T(9),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(9) <= ((ipl_cnt(9) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(8) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));

FTCPE_ipl_cnt10: FTCPE port map (ipl_cnt(10),ipl_cnt_T(10),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(10) <= ((ipl_cnt(10) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(8) AND ipl_cnt(9) AND ipl AND 
	NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));

FTCPE_ipl_cnt11: FTCPE port map (ipl_cnt(11),ipl_cnt_T(11),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(11) <= ((ipl_cnt(11) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(10) AND ipl_cnt(7) AND ipl_cnt(8) AND 
	ipl_cnt(9) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));


ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2 <= (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(5) AND ipl_cnt(6) AND ipl_cnt(1));

FDCPE_ipl_next: FDCPE port map (ipl_next,ipl_next_D,dot2clk,'0','0',nres);
ipl_next_D <= ((ipl_state AND ipl_cnt(2) AND ipl_cnt(0) AND 
	ipl_cnt(10) AND ipl_cnt(3) AND ipl_cnt(4) AND ipl_cnt(5) AND 
	ipl_cnt(6) AND ipl_cnt(7) AND ipl_cnt(8) AND ipl_cnt(9) AND 
	ipl_cnt(11) AND ipl_cnt(1))
	OR (NOT ipl_state AND NOT ipl_cnt(2) AND NOT ipl_cnt(0) AND 
	NOT ipl_cnt(10) AND NOT ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND 
	ipl_cnt(6) AND NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND 
	NOT ipl_cnt(11) AND NOT ipl_cnt(1)));

FDCPE_ipl_out: FDCPE port map (ipl_out,ipl_out_D,NOT dot2clk,NOT nres,'0',ipl);
ipl_out_D <= ((ipl_cnt(2) AND NOT ipl_cnt(0) AND NOT ipl_cnt(10) AND 
	ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND 
	NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND 
	NOT ipl_state_d)
	OR (ipl_cnt(2) AND NOT ipl_cnt(10) AND ipl_cnt(3) AND 
	NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND NOT ipl_cnt(7) AND 
	NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND NOT ipl_cnt(1) AND 
	NOT ipl_state_d)
	OR (NOT ipl_cnt(2) AND ipl_cnt(0) AND NOT ipl_cnt(10) AND 
	ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND 
	NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND 
	ipl_cnt(1) AND NOT ipl_state_d));

FDCPE_ipl_state: FDCPE port map (ipl_state,NOT ipl_state_d,NOT dot2clk,NOT nres,'0',ipl_state_CE);
ipl_state_CE <= (ipl AND ipl_next);

FDCPE_ipl_state_d: FDCPE port map (ipl_state_d,ipl_state,dot2clk,NOT nres,'0');

FDCPE_is8296: FDCPE port map (is8296,is8296_D,NOT phi2,NOT nres,'0');
is8296_D <= ((D(3).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (is8296 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_is_cpu: FDCPE port map (is_cpu,is_cpu_D,NOT dot2clk,NOT nres,is_cpu_PRE);
is_cpu_D <= ((NOT mode(1) AND NOT mode(0) AND clk1m)
	OR (is_cpu AND NOT do_cpu)
	OR (mode(1) AND mode(0))
	OR (mode(1) AND clk4m)
	OR (mode(0) AND clk2m));
is_cpu_PRE <= (mode(1) AND mode(0));

FDCPE_is_vid_out: FDCPE port map (is_vid_out,is_vid_out_D,q50m,'0','0');
is_vid_out_D <= (NOT viccy/chr_fetch AND NOT viccy/pxl_fetch);

FDCPE_lockb0: FDCPE port map (lockb0,lockb0_D,NOT phi2,NOT nres,'0');
lockb0_D <= ((D(0).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (lockb0 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_lowbank0: FDCPE port map (lowbank(0),lowbank_D(0),NOT phi2,NOT nres,'0');
lowbank_D(0) <= ((D(0).PIN AND lowbank_not0001/lowbank_not0001_D2)
	OR (lowbank(0) AND NOT lowbank_not0001/lowbank_not0001_D2));

FDCPE_lowbank1: FDCPE port map (lowbank(1),lowbank_D(1),NOT phi2,NOT nres,'0');
lowbank_D(1) <= ((D(1).PIN AND lowbank_not0001/lowbank_not0001_D2)
	OR (lowbank(1) AND NOT lowbank_not0001/lowbank_not0001_D2));

FDCPE_lowbank2: FDCPE port map (lowbank(2),lowbank_D(2),NOT phi2,NOT nres,'0');
lowbank_D(2) <= ((D(2).PIN AND lowbank_not0001/lowbank_not0001_D2)
	OR (lowbank(2) AND NOT lowbank_not0001/lowbank_not0001_D2));

FDCPE_lowbank3: FDCPE port map (lowbank(3),lowbank_D(3),NOT phi2,NOT nres,'0');
lowbank_D(3) <= ((D(3).PIN AND lowbank_not0001/lowbank_not0001_D2)
	OR (lowbank(3) AND NOT lowbank_not0001/lowbank_not0001_D2));


lowbank_not0001/lowbank_not0001_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	A(1) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND 
	NOT A(10) AND NOT A(9) AND NOT A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2 AND 
	NOT mode_not0001/mode_not0001_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	A(1) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND 
	NOT A(10) AND NOT A(9) AND NOT A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2 AND 
	NOT mode_not0001/mode_not0001_D2));


m_vramsel_out/m_vramsel_out_D2 <= ((NOT mappy/bankl(3) AND boot AND vda)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	NOT A(12) AND screenb0 AND vpa AND mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	NOT A(12) AND screenb0 AND vda AND mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	NOT A(12) AND screenb0 AND vpa AND mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	NOT A(12) AND screenb0 AND vda AND mappy/low64k/mappy/low64k_D2)
	OR (mappy/bankl(3) AND NOT boot AND vpa)
	OR (mappy/bankl(3) AND NOT boot AND vda)
	OR (NOT mappy/bankl(3) AND boot AND vpa));

FDCPE_mappy/bankl0: FDCPE port map (mappy/bankl(0),mappy/bankl_D(0),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(0) <= ((D(0).PIN AND NOT lockb0)
	OR (D(0).PIN AND NOT e));

FDCPE_mappy/bankl1: FDCPE port map (mappy/bankl(1),mappy/bankl_D(1),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(1) <= ((D(1).PIN AND NOT lockb0)
	OR (D(1).PIN AND NOT e));

FDCPE_mappy/bankl2: FDCPE port map (mappy/bankl(2),mappy/bankl_D(2),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(2) <= ((D(2).PIN AND NOT lockb0)
	OR (D(2).PIN AND NOT e));

FDCPE_mappy/bankl3: FDCPE port map (mappy/bankl(3),mappy/bankl_D(3),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(3) <= ((D(3).PIN AND NOT lockb0)
	OR (D(3).PIN AND NOT e));

FDCPE_mappy/bankl4: FDCPE port map (mappy/bankl(4),mappy/bankl_D(4),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(4) <= ((D(4).PIN AND NOT lockb0)
	OR (D(4).PIN AND NOT e));

FDCPE_mappy/bankl5: FDCPE port map (mappy/bankl(5),mappy/bankl_D(5),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(5) <= ((D(5).PIN AND NOT lockb0)
	OR (D(5).PIN AND NOT e));

FDCPE_mappy/bankl6: FDCPE port map (mappy/bankl(6),mappy/bankl_D(6),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(6) <= ((D(6).PIN AND NOT lockb0)
	OR (D(6).PIN AND NOT e));

FDCPE_mappy/bankl7: FDCPE port map (mappy/bankl(7),mappy/bankl_D(7),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(7) <= ((D(7).PIN AND NOT lockb0)
	OR (D(7).PIN AND NOT e));


mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2 <= ((NOT mappy/cfg_mp(7))
	OR (mappy/cfg_mp(6) AND A(15) AND A(14) AND A(13) AND 
	A(11) AND NOT A(12) AND NOT A(8) AND NOT A(10) AND NOT A(9)));

FDCPE_mappy/cfg_mp0: FDCPE port map (mappy/cfg_mp(0),mappy/cfg_mp_D(0),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(0) <= ((D(0).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(0) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp1: FDCPE port map (mappy/cfg_mp(1),mappy/cfg_mp_D(1),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(1) <= ((D(1).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(1) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp2: FDCPE port map (mappy/cfg_mp(2),mappy/cfg_mp_D(2),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(2) <= ((D(2).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(2) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp3: FDCPE port map (mappy/cfg_mp(3),mappy/cfg_mp_D(3),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(3) <= ((D(3).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(3) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp5: FDCPE port map (mappy/cfg_mp(5),mappy/cfg_mp_D(5),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(5) <= ((D(5).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(5) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp6: FDCPE port map (mappy/cfg_mp(6),mappy/cfg_mp_D(6),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(6) <= ((D(6).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(6) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp7: FDCPE port map (mappy/cfg_mp(7),mappy/cfg_mp_D(7),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(7) <= ((D(7).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(7) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));


mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND A(12) AND 
	is8296 AND NOT rwb AND NOT A(1) AND NOT A(0) AND NOT A(3) AND A(7) AND A(6) AND 
	A(5) AND A(4) AND A(8) AND A(10) AND A(9) AND NOT A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND A(12) AND 
	is8296 AND NOT rwb AND NOT A(1) AND NOT A(0) AND NOT A(3) AND A(7) AND A(6) AND 
	A(5) AND A(4) AND A(8) AND A(10) AND A(9) AND NOT A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2));


mappy/low64k/mappy/low64k_D2 <= (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7));

FDCPE_memclk_d: FDCPE port map (memclk_d,dot2clk,NOT q50m,NOT nres,'0');

FDCPE_mode0: FDCPE port map (mode(0),mode_D(0),NOT phi2,NOT nres,'0');
mode_D(0) <= ((D(0).PIN AND mode_not0001/mode_not0001_D2)
	OR (mode(0) AND NOT mode_not0001/mode_not0001_D2));

FDCPE_mode1: FDCPE port map (mode(1),mode_D(1),NOT phi2,NOT nres,'0');
mode_D(1) <= ((D(1).PIN AND mode_not0001/mode_not0001_D2)
	OR (mode(1) AND NOT mode_not0001/mode_not0001_D2));


mode_not0001/mode_not0001_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));

FDCPE_movesync: FDCPE port map (movesync,movesync_D,NOT phi2,NOT nres,'0');
movesync_D <= ((D(6).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (movesync AND NOT movesync_not0001/movesync_not0001_D2));


movesync_not0001/movesync_not0001_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND NOT A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND NOT A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));


nflash <= NOT (((nres AND ipl)
	OR (nres AND spi_sel(0) AND NOT spi_sel(2) AND NOT spi_sel(1))));


nframsel <= ((NOT dot2clk)
	OR (mappy/cfg_mp(7) AND A(15) AND A(14) AND 
	mappy/cfg_mp(1) AND NOT rwb AND mappy/low64k/mappy/low64k_D2)
	OR (mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND 
	mappy/cfg_mp(0) AND NOT rwb AND mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND A(14) AND wp_romPET AND 
	NOT rwb AND mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND A(13) AND 
	A(12) AND NOT rwb AND wp_romB AND mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND A(13) AND 
	NOT A(12) AND wp_romA AND NOT rwb AND mappy/low64k/mappy/low64k_D2)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	A(12) AND wp_rom9 AND NOT rwb AND mappy/low64k/mappy/low64k_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(8) AND 
	NOT A(10) AND NOT A(9) AND mappy/low64k/mappy/low64k_D2 AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (mappy/bankl(3) AND NOT boot)
	OR (NOT mappy/bankl(3) AND boot)
	OR (NOT vpa AND NOT vda)
	OR (A(15) AND mappy/low64k/mappy/low64k_D2 AND 
	m_vramsel_out/m_vramsel_out_D2));


nsel1 <= NOT (((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	NOT A(6) AND NOT A(5) AND A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	NOT A(6) AND NOT A(5) AND A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)));


nsel2 <= NOT (((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	NOT A(6) AND A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	NOT A(6) AND A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)));


nsel4 <= NOT (((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT A(7) AND 
	A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)));


nvramsel <= NOT (((ipl AND dot2clk)
	OR (dot2clk AND is_vid_out)
	OR (dot2clk AND NOT wait_int_d AND 
	m_vramsel_out/m_vramsel_out_D2)));

FDCPE_pet_vsync: FDCPE port map (pet_vsync,pet_vsync_D,NOT hsync,'0','0',nres);
pet_vsync_D <= ((viccy/rows_per_char(3) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rows_per_char(3) AND NOT movesync AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));


phi2_I <= NOT ((NOT dot2clk AND do_cpu));
phi2 <= phi2_I when phi2_OE = '1' else 'Z';
phi2_OE <= NOT ((phi2 AND phi2.PIN));

FDCPE_phi2_io: FDCPE port map (phi2_io_I,'0',NOT phi2,phi2_io_CLR,phi2_io_1m/phi2_io_1m_SETF);
phi2_io_CLR <= (NOT phi2 AND NOT $OpTx$FX_DC$417);
phi2_io <= phi2_io_I when phi2_io_OE = '1' else 'Z';
phi2_io_OE <= NOT ((phi2_io AND phi2_io.PIN));


phi2_io_1m/phi2_io_1m_SETF <= ((phi2 AND NOT $OpTx$FX_DC$417)
	OR (io1m AND $OpTx$FX_DC$417));

FDCPE_pxl: FDCPE port map (pxl,pxl_D,NOT dclk,NOT nres,'0');
pxl_D <= (viccy/pxlhold(7) AND dena);

FDCPE_pxl_window: FDCPE port map (pxl_window,pxl_window_D,NOT q50m,NOT nres,'0');
pxl_window_D <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_3);


ramrwb <= NOT (((ipl)
	OR (dot2clk AND NOT rwb AND NOT is_vid_out AND 
	m_vramsel_out/m_vramsel_out_D2)));

FDCPE_screenb0: FDCPE port map (screenb0,screenb0_D,NOT phi2,'0',NOT nres);
screenb0_D <= ((NOT D(2).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (screenb0 AND NOT movesync_not0001/movesync_not0001_D2));

FDCPE_slotclk: FDCPE port map (slotclk,clocky/clk_cnt_0_3,NOT q50m,'0','0',nres);


spi_clk <= ((spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	NOT spi_comp/cpol AND NOT ipl)
	OR (NOT spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	spi_comp/cpol AND NOT ipl)
	OR (spi_comp/txd(6).EXP)
	OR (spi_comp/stat(0) AND NOT spi_comp/cpha AND NOT spi_comp/cpol AND 
	NOT ipl)
	OR (NOT spi_comp/stat(0) AND NOT spi_comp/cpha AND spi_comp/cpol AND 
	NOT ipl)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/run_sr AND 
	spi_comp/cpha AND spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND spi_comp/run_sr AND 
	spi_comp/cpha AND NOT spi_comp/cpol)
	OR (spi_comp/stat(0) AND spi_comp/run_sr AND 
	spi_comp/cpha AND spi_comp/cpol AND NOT ipl)
	OR (NOT ipl_state AND ipl_cnt(0) AND ipl)
	OR (ipl_state AND spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	NOT spi_comp/cpol)
	OR (ipl_state AND spi_comp/stat(0) AND NOT spi_comp/cpha AND 
	NOT spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND NOT spi_comp/cpha AND 
	spi_comp/cpol));


spi_comp/N01/spi_comp/N01_D2 <= ((ipl_state)
	OR (rwb AND A(1) AND NOT A(0) AND spi_cs/spi_cs_D2)
	OR (rwb AND NOT A(1) AND A(0) AND spi_cs/spi_cs_D2));

FDCPE_spi_comp/ack_rxtx: FDCPE port map (spi_comp/ack_rxtx,spi_comp/ack_rxtx_D,NOT spi_outx/spi_outx_CLKF,'0','0');
spi_comp/ack_rxtx_D <= (spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3));

FDCPE_spi_comp/ack_txd: FDCPE port map (spi_comp/ack_txd,spi_comp/ack_txd_D,spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/ack_txd_D <= (spi_comp/txd_valid AND NOT spi_comp/run_sr_d);

FDCPE_spi_comp/cpha: FDCPE port map (spi_comp/cpha,D(4).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/cpha_CE);
spi_comp/cpha_CE <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_comp/cpol: FDCPE port map (spi_comp/cpol,D(5).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/cpol_CE);
spi_comp/cpol_CE <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_comp/run_sr: FDCPE port map (spi_comp/run_sr,spi_comp/run_sr_D,spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/run_sr_D <= ((NOT spi_comp/run_sr AND spi_comp/run_sr_d)
	OR (NOT spi_comp/run_sr AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx)
	OR (spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3) AND spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3) AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx));

FDCPE_spi_comp/run_sr_d: FDCPE port map (spi_comp/run_sr_d,spi_comp/run_sr,NOT spi_outx/spi_outx_CLKF,'0','0');

FDCPE_spi_comp/serin_d: FDCPE port map (spi_comp/serin_d,spi_comp/serin_d_D,spi_outx/spi_outx_CLKF,'0','0');
spi_comp/serin_d_D <= ((nres AND ipl_state AND NOT spi_sel(0) AND 
	NOT spi_comp/stat(0) AND NOT spi_comp/txd_valid AND NOT spi_comp/start_rx AND spi_in1)
	OR (nres AND ipl_state AND spi_sel(2) AND 
	NOT spi_comp/stat(0) AND NOT spi_comp/txd_valid AND NOT spi_comp/start_rx AND spi_in1)
	OR (nres AND ipl_state AND NOT spi_comp/stat(0) AND 
	NOT spi_sel(1) AND NOT spi_comp/txd_valid AND NOT spi_comp/start_rx AND spi_in1)
	OR (nres AND spi_sel(0) AND NOT spi_sel(2) AND 
	NOT spi_comp/stat(0) AND spi_sel(1) AND spi_comp/run_sr_d AND spi_in3)
	OR (nres AND ipl_state AND spi_sel(0) AND NOT spi_sel(2) AND 
	NOT spi_comp/stat(0) AND spi_sel(1) AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx AND spi_in3)
	OR (spi_comp/txd_valid AND spi_comp/serin_d AND 
	NOT spi_comp/run_sr_d)
	OR (nres AND NOT spi_sel(0) AND NOT spi_comp/stat(0) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (nres AND spi_sel(2) AND NOT spi_comp/stat(0) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (nres AND NOT spi_comp/stat(0) AND NOT spi_sel(1) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (NOT nres AND spi_comp/serin_d)
	OR (spi_comp/stat(0) AND spi_comp/serin_d)
	OR (NOT ipl_state AND spi_comp/serin_d AND NOT spi_comp/run_sr_d)
	OR (spi_comp/start_rx AND spi_comp/serin_d AND 
	NOT spi_comp/run_sr_d));

FDCPE_spi_comp/sr0: FDCPE port map (spi_comp/sr(0),spi_comp/sr_D(0),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(0) <= ((spi_comp/sr(0) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/serin_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/serin_d AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(0) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr1: FDCPE port map (spi_comp/sr(1),spi_comp/sr_D(1),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(1) <= ((spi_comp/sr(1) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(0) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(0) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(1) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr2: FDCPE port map (spi_comp/sr(2),spi_comp/sr_D(2),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(2) <= ((spi_comp/sr(2) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(1) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(1) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(2) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr3: FDCPE port map (spi_comp/sr(3),spi_comp/sr_D(3),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(3) <= ((spi_comp/sr(3) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(2) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(2) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(3) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr4: FDCPE port map (spi_comp/sr(4),spi_comp/sr_D(4),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(4) <= ((spi_comp/sr(4) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(3) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(3) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(4) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr5: FDCPE port map (spi_comp/sr(5),spi_comp/sr_D(5),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(5) <= ((spi_comp/sr(5) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(4) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(4) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(5) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr6: FDCPE port map (spi_comp/sr(6),spi_comp/sr_D(6),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(6) <= ((spi_comp/sr(6) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(5) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(5) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(6) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));


spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2 <= ((nres AND spi_comp/stat(0) AND spi_comp/run_sr_d)
	OR (nres AND spi_comp/txd_valid AND NOT spi_comp/run_sr_d)
	OR (nres AND ipl_state AND spi_comp/stat(0) AND 
	NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FDCPE_spi_comp/start_rx: FDCPE port map (spi_comp/start_rx,'1',NOT spi_cs/spi_cs_D2,NOT spi_comp/start_rx/spi_comp/start_rx_RSTF,'0',spi_comp/start_rx_CE);
spi_comp/start_rx_CE <= (rwb AND NOT A(1) AND A(0));


spi_comp/start_rx/spi_comp/start_rx_RSTF <= (nres AND NOT spi_comp/ack_rxtx);

FTCPE_spi_comp/stat0: FTCPE port map (spi_comp/stat(0),spi_comp/stat_T(0),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(0) <= ((spi_comp/run_sr_d)
	OR (ipl_state AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx));

FTCPE_spi_comp/stat1: FTCPE port map (spi_comp/stat(1),spi_comp/stat_T(1),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(1) <= ((spi_comp/stat(0) AND spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND 
	NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FTCPE_spi_comp/stat2: FTCPE port map (spi_comp/stat(2),spi_comp/stat_T(2),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(2) <= ((spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FTCPE_spi_comp/stat3: FTCPE port map (spi_comp/stat(3),spi_comp/stat_T(3),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(3) <= ((spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FDCPE_spi_comp/txd0: FDCPE port map (spi_comp/txd(0),D(0).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(0));
spi_comp/txd_CE(0) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd1: FDCPE port map (spi_comp/txd(1),D(1).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(1));
spi_comp/txd_CE(1) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd2: FDCPE port map (spi_comp/txd(2),D(2).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(2));
spi_comp/txd_CE(2) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd3: FDCPE port map (spi_comp/txd(3),D(3).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(3));
spi_comp/txd_CE(3) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd4: FDCPE port map (spi_comp/txd(4),D(4).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(4));
spi_comp/txd_CE(4) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd5: FDCPE port map (spi_comp/txd(5),D(5).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(5));
spi_comp/txd_CE(5) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd6: FDCPE port map (spi_comp/txd(6),D(6).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(6));
spi_comp/txd_CE(6) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd7: FDCPE port map (spi_comp/txd(7),D(7).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(7));
spi_comp/txd_CE(7) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd_valid: FDCPE port map (spi_comp/txd_valid,'1',NOT spi_cs/spi_cs_D2,NOT spi_comp/txd_valid/spi_comp/txd_valid_RSTF,'0',spi_comp/txd_valid_CE);
spi_comp/txd_valid_CE <= (NOT rwb AND NOT A(1) AND A(0));


spi_comp/txd_valid/spi_comp/txd_valid_RSTF <= (nres AND NOT spi_comp/ack_txd);


spi_cs/spi_cs_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND phi2 AND 
	A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND 
	NOT A(9) AND NOT A(2) AND vpa AND mappy/low64k/mappy/low64k_D2 AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND phi2 AND 
	A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND 
	NOT A(9) AND NOT A(2) AND vda AND mappy/low64k/mappy/low64k_D2 AND 
	mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));


spi_nsel2 <= NOT ((nres AND NOT spi_sel(0) AND NOT spi_sel(2) AND spi_sel(1)));


spi_nsel3 <= NOT ((nres AND spi_sel(0) AND NOT spi_sel(2) AND spi_sel(1)));


spi_nsel4 <= NOT ((nres AND NOT spi_sel(0) AND spi_sel(2) AND NOT spi_sel(1)));


spi_nsel5 <= NOT ((nres AND spi_sel(0) AND spi_sel(2) AND NOT spi_sel(1)));


spi_out <= ((ipl_out AND ipl)
	OR (NOT ipl AND spi_outx));

FDCPE_spi_outx: FDCPE port map (spi_outx,spi_outx_D,spi_outx/spi_outx_CLKF,'0','0');
spi_outx_D <= ((spi_outx AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(6) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(6) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(7) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));


spi_outx/spi_outx_CLKF <= ((NOT spi_sel(0) AND dot2clk)
	OR (NOT spi_sel(2) AND dot2clk)
	OR (spi_sel(0) AND spi_sel(2) AND dot4clk));

FDCPE_spi_sel0: FDCPE port map (spi_sel(0),D(0).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(0));
spi_sel_CE(0) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_sel1: FDCPE port map (spi_sel(1),D(1).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(1));
spi_sel_CE(1) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_sel2: FDCPE port map (spi_sel(2),D(2).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(2));
spi_sel_CE(2) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_sr_load: FDCPE port map (sr_load,sr_load_D,NOT q50m,NOT nres,'0');
sr_load_D <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_0 AND 
	clocky/clk_cnt_0_3 AND clocky/clk_cnt_0_1);


viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 <= (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/vid_addr(8));

FDCPE_viccy/charhold0: FDCPE port map (viccy/charhold(0),VD(0).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold1: FDCPE port map (viccy/charhold(1),VD(1).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold2: FDCPE port map (viccy/charhold(2),VD(2).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold3: FDCPE port map (viccy/charhold(3),VD(3).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold4: FDCPE port map (viccy/charhold(4),VD(4).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold5: FDCPE port map (viccy/charhold(5),VD(5).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold6: FDCPE port map (viccy/charhold(6),VD(6).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold7: FDCPE port map (viccy/charhold(7),VD(7).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/chr_fetch: FDCPE port map (viccy/chr_fetch,viccy/chr_fetch_D,q50m,'0','0');
viccy/chr_fetch_D <= ((NOT vis_hires_in AND interlace AND vis_enable AND 
	viccy/is_80 AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND NOT viccy/rline_cnt(0) AND 
	viccy/is_80 AND chr_window)
	OR (NOT vis_hires_in AND interlace AND vis_enable AND 
	NOT viccy/in_slot AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/in_slot AND chr_window));

FDCPE_viccy/crtc_reg0: FDCPE port map (viccy/crtc_reg(0),viccy/crtc_reg_D(0),NOT dot2clk,NOT nres,'0');
viccy/crtc_reg_D(0) <= ((viccy/crtc_reg(0) AND NOT $OpTx$FX_DC$419)
	OR (D(0).PIN AND NOT D(2).PIN AND D(3).PIN AND NOT D(1).PIN AND 
	$OpTx$FX_DC$419));

FDCPE_viccy/crtc_reg1: FDCPE port map (viccy/crtc_reg(1),viccy/crtc_reg_D(1),NOT dot2clk,NOT nres,'0');
viccy/crtc_reg_D(1) <= ((viccy/crtc_reg(1) AND NOT $OpTx$FX_DC$419)
	OR (NOT D(0).PIN AND D(2).PIN AND D(3).PIN AND NOT D(1).PIN AND 
	$OpTx$FX_DC$419));

FDCPE_viccy/dot2clk_d: FDCPE port map (viccy/dot2clk_d,dot2clk,q50m,'0','0');

FTCPE_viccy/h_enable: FTCPE port map (viccy/h_enable,viccy/h_enable_T,NOT slotclk,'0','0');
viccy/h_enable_T <= ((NOT viccy/slot_cnt(4) AND NOT viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND NOT viccy/h_enable)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND viccy/h_enable));

FDCPE_viccy/in_slot: FDCPE port map (viccy/in_slot,viccy/slot_cnt(0),NOT slotclk,NOT nres,'0');

FDCPE_viccy/is_80: FDCPE port map (viccy/is_80,vis_80_in,NOT slotclk,'0','0',viccy/is_80_CE);
viccy/is_80_CE <= (nres AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line);

FDCPE_viccy/last_line_of_char: FDCPE port map (viccy/last_line_of_char,viccy/last_line_of_char_D,hsync,'0','0');
viccy/last_line_of_char_D <= ((viccy/rows_per_char(3) AND NOT viccy/rcline_cnt(0) AND 
	NOT viccy/rcline_cnt(1) AND NOT viccy/rcline_cnt(2) AND viccy/rcline_cnt(3) AND 
	vis_double_in)
	OR (NOT viccy/rows_per_char(3) AND viccy/rcline_cnt(0) AND 
	viccy/rcline_cnt(1) AND viccy/rcline_cnt(2) AND NOT viccy/rcline_cnt(3) AND 
	vis_double_in)
	OR (vis_hires_in AND vis_double_in)
	OR (vis_hires_in AND viccy/rline_cnt(0))
	OR (viccy/rows_per_char(3) AND NOT viccy/rcline_cnt(0) AND 
	NOT viccy/rcline_cnt(1) AND NOT viccy/rcline_cnt(2) AND viccy/rcline_cnt(3) AND 
	viccy/rline_cnt(0))
	OR (NOT viccy/rows_per_char(3) AND viccy/rcline_cnt(0) AND 
	viccy/rcline_cnt(1) AND viccy/rcline_cnt(2) AND NOT viccy/rcline_cnt(3) AND 
	viccy/rline_cnt(0)));

FDCPE_viccy/last_line_of_screen: FDCPE port map (viccy/last_line_of_screen,viccy/last_line_of_screen_D,hsync,'0','0');
viccy/last_line_of_screen_D <= (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND 
	NOT viccy/rline_cnt(6) AND viccy/rline_cnt(3) AND NOT viccy/rline_cnt(7) AND 
	NOT viccy/rline_cnt(8) AND viccy/rline_cnt(9));

FDCPE_viccy/last_slot_of_line: FDCPE port map (viccy/last_slot_of_line,viccy/last_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_slot_of_line_D <= (NOT viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	viccy/slot_cnt(0) AND viccy/slot_cnt(5) AND viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3));

FDCPE_viccy/last_vis_slot_of_line: FDCPE port map (viccy/last_vis_slot_of_line,viccy/last_vis_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_vis_slot_of_line_D <= ((viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3))
	OR (NOT viccy/slot_cnt(4) AND NOT viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND viccy/last_vis_slot_of_line));

FDCPE_viccy/pxl_fetch: FDCPE port map (viccy/pxl_fetch,viccy/pxl_fetch_D,q50m,'0','0');
viccy/pxl_fetch_D <= ((interlace AND vis_enable AND viccy/is_80 AND 
	pxl_window)
	OR (interlace AND vis_enable AND NOT viccy/in_slot AND 
	pxl_window)
	OR (vis_enable AND NOT viccy/rline_cnt(0) AND viccy/is_80 AND 
	pxl_window)
	OR (vis_enable AND NOT viccy/rline_cnt(0) AND NOT viccy/in_slot AND 
	pxl_window));

FDCPE_viccy/pxlhold0: FDCPE port map (viccy/pxlhold(0),viccy/pxlhold_D(0),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(0) <= ((viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(0).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d));

FDCPE_viccy/pxlhold1: FDCPE port map (viccy/pxlhold(1),viccy/pxlhold_D(1),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(1) <= ((VD(1).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(0) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold2: FDCPE port map (viccy/pxlhold(2),viccy/pxlhold_D(2),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(2) <= ((VD(2).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(1) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold3: FDCPE port map (viccy/pxlhold(3),viccy/pxlhold_D(3),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(3) <= ((VD(3).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(2) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold4: FDCPE port map (viccy/pxlhold(4),viccy/pxlhold_D(4),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(4) <= ((viccy/pxlhold(3) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(4).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold5: FDCPE port map (viccy/pxlhold(5),viccy/pxlhold_D(5),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(5) <= ((VD(5).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(4) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold6: FDCPE port map (viccy/pxlhold(6),viccy/pxlhold_D(6),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(6) <= ((viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(6).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(5) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold7: FDCPE port map (viccy/pxlhold(7),viccy/pxlhold_D(7),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(7) <= ((VD(7).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(6) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/rcline_cnt0: FDCPE port map (viccy/rcline_cnt(0),viccy/rcline_cnt_D(0),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_D(0) <= ((NOT viccy/rcline_cnt(0) AND vis_double_in AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (NOT viccy/rcline_cnt(0) AND viccy/rline_cnt(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT vis_double_in AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FDCPE_viccy/rcline_cnt1: FDCPE port map (viccy/rcline_cnt(1),viccy/rcline_cnt_D(1),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_D(1) <= ((NOT viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT viccy/rcline_cnt(1) AND 
	vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT viccy/rcline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(1) AND NOT vis_double_in AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FTCPE_viccy/rcline_cnt2: FTCPE port map (viccy/rcline_cnt(2),viccy/rcline_cnt_T(2),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_T(2) <= ((viccy/rcline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/rcline_cnt(2) AND viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FTCPE_viccy/rcline_cnt3: FTCPE port map (viccy/rcline_cnt(3),viccy/rcline_cnt_T(3),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_T(3) <= ((viccy/rcline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/rcline_cnt(3) AND viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rcline_cnt(2) AND vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rcline_cnt(2) AND viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FDCPE_viccy/rline_cnt0: FDCPE port map (viccy/rline_cnt(0),viccy/rline_cnt_D(0),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(0) <= (NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen);

FDCPE_viccy/rline_cnt1: FDCPE port map (viccy/rline_cnt(1),viccy/rline_cnt_D(1),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(1) <= ((viccy/rline_cnt(0) AND NOT viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen)
	OR (NOT viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt2: FTCPE port map (viccy/rline_cnt(2),viccy/rline_cnt_T(2),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(2) <= ((viccy/rline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt3: FTCPE port map (viccy/rline_cnt(3),viccy/rline_cnt_T(3),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(3) <= ((viccy/rline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt4: FTCPE port map (viccy/rline_cnt(4),viccy/rline_cnt_T(4),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(4) <= ((viccy/rline_cnt(4) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt5: FTCPE port map (viccy/rline_cnt(5),viccy/rline_cnt_T(5),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(5) <= ((viccy/rline_cnt(5) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND viccy/rline_cnt(3) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt6: FTCPE port map (viccy/rline_cnt(6),viccy/rline_cnt_T(6),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(6) <= ((viccy/rline_cnt(6) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND 
	viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt7: FTCPE port map (viccy/rline_cnt(7),viccy/rline_cnt_T(7),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(7) <= ((viccy/rline_cnt(7) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND 
	viccy/rline_cnt(6) AND viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt8: FTCPE port map (viccy/rline_cnt(8),viccy/rline_cnt_T(8),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(8) <= ((viccy/rline_cnt(8) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND 
	viccy/rline_cnt(6) AND viccy/rline_cnt(3) AND viccy/rline_cnt(7) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt9: FTCPE port map (viccy/rline_cnt(9),viccy/rline_cnt_T(9),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(9) <= ((viccy/rline_cnt(9) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND 
	viccy/rline_cnt(6) AND viccy/rline_cnt(3) AND viccy/rline_cnt(7) AND 
	viccy/rline_cnt(8) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rows_per_char3: FTCPE port map (viccy/rows_per_char(3),viccy/rows_per_char_T(3),viccy/rows_per_char_C(3),NOT nres,'0');
viccy/rows_per_char_T(3) <= ((D(3).PIN AND NOT viccy/rows_per_char(3) AND 
	viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND A(15) AND A(14) AND A(13) AND 
	A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (D(3).PIN AND NOT viccy/rows_per_char(3) AND 
	viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND A(15) AND A(14) AND A(13) AND 
	A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT D(3).PIN AND viccy/rows_per_char(3) AND 
	viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND A(15) AND A(14) AND A(13) AND 
	A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT D(3).PIN AND viccy/rows_per_char(3) AND 
	viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND A(15) AND A(14) AND A(13) AND 
	A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));
viccy/rows_per_char_C(3) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/slot_cnt0: FDCPE port map (viccy/slot_cnt(0),viccy/slot_cnt_D(0),slotclk,NOT nres,'0');
viccy/slot_cnt_D(0) <= (NOT viccy/slot_cnt(0) AND NOT viccy/last_slot_of_line);

FDCPE_viccy/slot_cnt1: FDCPE port map (viccy/slot_cnt(1),viccy/slot_cnt_D(1),slotclk,NOT nres,'0');
viccy/slot_cnt_D(1) <= ((viccy/slot_cnt(0) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt2: FTCPE port map (viccy/slot_cnt(2),viccy/slot_cnt_T(2),slotclk,NOT nres,'0');
viccy/slot_cnt_T(2) <= ((viccy/slot_cnt(2) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt3: FTCPE port map (viccy/slot_cnt(3),viccy/slot_cnt_T(3),slotclk,NOT nres,'0');
viccy/slot_cnt_T(3) <= ((viccy/slot_cnt(3) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	viccy/slot_cnt(2) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt4: FTCPE port map (viccy/slot_cnt(4),viccy/slot_cnt_T(4),slotclk,NOT nres,'0');
viccy/slot_cnt_T(4) <= ((viccy/slot_cnt(4) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	viccy/slot_cnt(2) AND viccy/slot_cnt(3) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt5: FTCPE port map (viccy/slot_cnt(5),viccy/slot_cnt_T(5),slotclk,NOT nres,'0');
viccy/slot_cnt_T(5) <= ((viccy/slot_cnt(5) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(0) AND 
	viccy/slot_cnt(1) AND viccy/slot_cnt(2) AND viccy/slot_cnt(3) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt6: FTCPE port map (viccy/slot_cnt(6),viccy/slot_cnt_T(6),slotclk,NOT nres,'0');
viccy/slot_cnt_T(6) <= ((viccy/slot_cnt(6) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(0) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(1) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(3) AND NOT viccy/last_slot_of_line));

FDCPE_viccy/sr_load_d: FDCPE port map (viccy/sr_load_d,sr_load,q50m,'0','0');

FDCPE_viccy/v_enable: FDCPE port map (viccy/v_enable,viccy/v_enable_D,hsync,'0','0');
viccy/v_enable_D <= ((NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND 
	NOT viccy/rline_cnt(6) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND NOT viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND 
	NOT viccy/rline_cnt(3) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(7) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND NOT viccy/rline_cnt(6) AND 
	NOT viccy/rline_cnt(9)));

FDCPE_viccy/vid_addr0: FDCPE port map (viccy/vid_addr(0),viccy/vid_addr_D(0),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(0) <= ((NOT viccy/vid_addr(0) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr1: FDCPE port map (viccy/vid_addr(1),viccy/vid_addr_D(1),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(1) <= ((viccy/vid_addr(1) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr2: FTCPE port map (viccy/vid_addr(2),viccy/vid_addr_T(2),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(2) <= ((viccy/vid_addr(2) AND NOT viccy/vid_addr_hold(2) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(2) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(2) AND viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line));

FTCPE_viccy/vid_addr3: FTCPE port map (viccy/vid_addr(3),viccy/vid_addr_T(3),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(3) <= ((viccy/vid_addr(3) AND NOT viccy/vid_addr_hold(3) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(3) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(3) AND viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr4: FTCPE port map (viccy/vid_addr(4),viccy/vid_addr_T(4),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(4) <= ((viccy/vid_addr(4) AND NOT viccy/vid_addr_hold(4) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(4) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(4) AND viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr5: FTCPE port map (viccy/vid_addr(5),viccy/vid_addr_T(5),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(5) <= ((viccy/vid_addr(5) AND NOT viccy/vid_addr_hold(5) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(5) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(5) AND viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr6: FTCPE port map (viccy/vid_addr(6),viccy/vid_addr_T(6),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(6) <= ((viccy/vid_addr(6) AND NOT viccy/vid_addr_hold(6) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(6) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(6) AND viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr7: FTCPE port map (viccy/vid_addr(7),viccy/vid_addr_T(7),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(7) <= ((viccy/vid_addr(7) AND NOT viccy/vid_addr_hold(7) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(7) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(7) AND viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr8: FTCPE port map (viccy/vid_addr(8),viccy/vid_addr_T(8),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(8) <= ((viccy/vid_addr(8) AND NOT viccy/vid_addr_hold(8) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(8) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(8) AND viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr9: FDCPE port map (viccy/vid_addr(9),viccy/vid_addr_D(9),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(9) <= ((viccy/vid_addr(9) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND NOT viccy/last_slot_of_line AND 
	NOT viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (NOT viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr10: FTCPE port map (viccy/vid_addr(10),viccy/vid_addr_T(10),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(10) <= ((viccy/vid_addr(10) AND NOT viccy/vid_addr_hold(10) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(10) AND viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr11: FTCPE port map (viccy/vid_addr(11),viccy/vid_addr_T(11),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(11) <= ((viccy/vid_addr(11) AND NOT viccy/vid_addr_hold(11) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(11) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(11) AND viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr12: FTCPE port map (viccy/vid_addr(12),viccy/vid_addr_T(12),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(12) <= ((viccy/vid_addr(12) AND NOT viccy/vid_addr_hold(12) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(12) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(12) AND viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr13: FTCPE port map (viccy/vid_addr(13),viccy/vid_addr_T(13),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(13) <= ((viccy/vid_addr(13) AND NOT viccy/vid_addr_hold(13) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(13) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(13) AND viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FDCPE_viccy/vid_addr_hold0: FDCPE port map (viccy/vid_addr_hold(0),viccy/vid_addr_hold_D(0),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(0) <= ((viccy/vid_addr_hold(0) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(0) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold1: FDCPE port map (viccy/vid_addr_hold(1),viccy/vid_addr_hold_D(1),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(1) <= ((viccy/vid_addr_hold(1) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(1) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold2: FDCPE port map (viccy/vid_addr_hold(2),viccy/vid_addr_hold_D(2),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(2) <= ((viccy/vid_addr_hold(2) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(2) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold3: FDCPE port map (viccy/vid_addr_hold(3),viccy/vid_addr_hold_D(3),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(3) <= ((viccy/vid_addr(3) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char)
	OR (viccy/vid_addr_hold(3) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold4: FDCPE port map (viccy/vid_addr_hold(4),viccy/vid_addr_hold_D(4),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(4) <= ((viccy/vid_addr_hold(4) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(4) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold5: FDCPE port map (viccy/vid_addr_hold(5),viccy/vid_addr_hold_D(5),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(5) <= ((viccy/vid_addr_hold(5) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(5) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold6: FDCPE port map (viccy/vid_addr_hold(6),viccy/vid_addr_hold_D(6),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(6) <= ((viccy/vid_addr_hold(6) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(6) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold7: FDCPE port map (viccy/vid_addr_hold(7),viccy/vid_addr_hold_D(7),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(7) <= ((viccy/vid_addr_hold(7) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(7) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold8: FDCPE port map (viccy/vid_addr_hold(8),viccy/vid_addr_hold_D(8),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(8) <= ((viccy/vid_addr_hold(8) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(8) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold9: FDCPE port map (viccy/vid_addr_hold(9),viccy/vid_addr_hold_D(9),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(9) <= ((viccy/vid_addr_hold(9) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(9) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold10: FDCPE port map (viccy/vid_addr_hold(10),viccy/vid_addr_hold_D(10),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(10) <= ((viccy/vid_addr_hold(10) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(2) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(10) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold11: FDCPE port map (viccy/vid_addr_hold(11),viccy/vid_addr_hold_D(11),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(11) <= ((viccy/vid_addr_hold(11) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(3) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(11) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold12: FDCPE port map (viccy/vid_addr_hold(12),viccy/vid_addr_hold_D(12),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(12) <= ((viccy/vid_addr_hold(12) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(4) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(12) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold13: FDCPE port map (viccy/vid_addr_hold(13),viccy/vid_addr_hold_D(13),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(13) <= ((viccy/vid_addr_hold(13) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(5) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(13) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vpage2: FDCPE port map (viccy/vpage(2),viccy/vpage_D(2),viccy/vpage_C(2),NOT nres,'0');
viccy/vpage_D(2) <= ((D(2).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(2) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(2) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage3: FDCPE port map (viccy/vpage(3),viccy/vpage_D(3),viccy/vpage_C(3),NOT nres,'0');
viccy/vpage_D(3) <= ((D(3).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(3) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(3) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage4: FDCPE port map (viccy/vpage(4),viccy/vpage_D(4),viccy/vpage_C(4),'0',NOT nres);
viccy/vpage_D(4) <= ((D(4).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(4) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(4) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage5: FDCPE port map (viccy/vpage(5),viccy/vpage_D(5),viccy/vpage_C(5),NOT nres,'0');
viccy/vpage_D(5) <= ((D(5).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(5) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(5) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage6: FDCPE port map (viccy/vpage(6),viccy/vpage_D(6),viccy/vpage_C(6),NOT nres,'0');
viccy/vpage_D(6) <= ((D(6).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(6) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(6) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage7: FDCPE port map (viccy/vpage(7),viccy/vpage_D(7),viccy/vpage_C(7),NOT nres,'0');
viccy/vpage_D(7) <= ((D(7).PIN AND 
	viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2)
	OR (viccy/vpage(7) AND 
	NOT viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2));
viccy/vpage_C(7) <= (NOT dot2clk AND do_cpu);


viccy/vpage_2_not0001/viccy/vpage_2_not0001_D2 <= ((NOT viccy/crtc_reg(0) AND viccy/crtc_reg(1) AND A(15) AND 
	A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND 
	NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (NOT viccy/crtc_reg(0) AND viccy/crtc_reg(1) AND A(15) AND 
	A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND A(0) AND A(7) AND 
	NOT A(6) AND NOT A(5) AND NOT A(4) AND NOT A(8) AND NOT A(10) AND NOT A(9) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));

FDCPE_vidblock0: FDCPE port map (vidblock(0),vidblock_D(0),NOT phi2,NOT nres,'0');
vidblock_D(0) <= ((D(0).PIN AND vidblock_not0001/vidblock_not0001_D2)
	OR (vidblock(0) AND 
	NOT vidblock_not0001/vidblock_not0001_D2));

FDCPE_vidblock1: FDCPE port map (vidblock(1),vidblock_D(1),NOT phi2,'0',NOT nres);
vidblock_D(1) <= ((D(1).PIN AND vidblock_not0001/vidblock_not0001_D2)
	OR (vidblock(1) AND 
	NOT vidblock_not0001/vidblock_not0001_D2));

FDCPE_vidblock2: FDCPE port map (vidblock(2),vidblock_D(2),NOT phi2,NOT nres,'0');
vidblock_D(2) <= ((D(2).PIN AND vidblock_not0001/vidblock_not0001_D2)
	OR (vidblock(2) AND 
	NOT vidblock_not0001/vidblock_not0001_D2));


vidblock_not0001/vidblock_not0001_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));

FDCPE_vis_80_in: FDCPE port map (vis_80_in,vis_80_in_D,NOT phi2,NOT nres,'0');
vis_80_in_D <= ((D(1).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (vis_80_in AND NOT movesync_not0001/movesync_not0001_D2));

FDCPE_vis_double_in: FDCPE port map (vis_double_in,vis_double_in_D,NOT phi2,NOT nres,'0');
vis_double_in_D <= ((D(3).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (vis_double_in AND 
	NOT movesync_not0001/movesync_not0001_D2));

FDCPE_vis_enable: FDCPE port map (vis_enable,vis_enable_D,NOT phi2,'0',NOT nres);
vis_enable_D <= ((NOT D(7).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (vis_enable AND NOT movesync_not0001/movesync_not0001_D2));

FDCPE_vis_hires_in: FDCPE port map (vis_hires_in,vis_hires_in_D,NOT phi2,NOT nres,'0');
vis_hires_in_D <= ((D(0).PIN AND movesync_not0001/movesync_not0001_D2)
	OR (vis_hires_in AND 
	NOT movesync_not0001/movesync_not0001_D2));

FDCPE_vsync: FDCPE port map (vsync,vsync_D,NOT hsync,'0','0',nres);
vsync_D <= ((viccy/rows_per_char(3) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rows_per_char(3) AND NOT movesync AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND NOT viccy/rline_cnt(4) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND NOT viccy/rline_cnt(3) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));

FDCPE_wait_int_d: FDCPE port map (wait_int_d,wait_int_d_D,dot2clk,'0',NOT nres);
wait_int_d_D <= (is_cpu AND NOT ipl);

FDCPE_wp_rom9: FDCPE port map (wp_rom9,wp_rom9_D,NOT phi2,NOT nres,'0');
wp_rom9_D <= ((D(4).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_rom9 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romA: FDCPE port map (wp_romA,wp_romA_D,NOT phi2,NOT nres,'0');
wp_romA_D <= ((D(5).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romA AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FTCPE_wp_romB: FTCPE port map (wp_romB,wp_romB_T,NOT phi2,'0','0');
wp_romB_T <= ((nres AND D(6).PIN AND NOT wp_romB AND 
	wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (nres AND NOT D(6).PIN AND wp_romB AND 
	wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romPET: FDCPE port map (wp_romPET,wp_romPET_D,NOT phi2,NOT nres,'0');
wp_romPET_D <= ((D(7).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romPET AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));


wp_romPET_or0000/wp_romPET_or0000_D2 <= ((A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vpa AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2)
	OR (A(15) AND A(14) AND A(13) AND A(11) AND NOT A(12) AND NOT rwb AND 
	NOT A(1) AND A(0) AND NOT A(3) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT A(8) AND NOT A(10) AND NOT A(9) AND NOT A(2) AND vda AND 
	mappy/low64k/mappy/low64k_D2 AND mappy/c8296ram_and0000/mappy/c8296ram_and0000_D2));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC95288XL-6-TQ144


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 VCC                              73 VCC                           
  2 nframsel                         74 vpa                           
  3 KPR                              75 vda                           
  4 VA<17>                           76 KPR                           
  5 KPR                              77 D<7>                          
  6 KPR                              78 D<6>                          
  7 VA<14>                           79 D<5>                          
  8 VCC                              80 D<4>                          
  9 VA<16>                           81 D<3>                          
 10 VA<15>                           82 D<2>                          
 11 VA<18>                           83 D<1>                          
 12 KPR                              84 VCC                           
 13 KPR                              85 A<15>                         
 14 KPR                              86 D<0>                          
 15 KPR                              87 A<13>                         
 16 KPR                              88 A<14>                         
 17 KPR                              89 GND                           
 18 GND                              90 GND                           
 19 KPR                              91 A<12>                         
 20 rwb                              92 A<11>                         
 21 KPR                              93 A<10>                         
 22 KPR                              94 A<9>                          
 23 KPR                              95 A<8>                          
 24 KPR                              96 A<7>                          
 25 KPR                              97 A<6>                          
 26 KPR                              98 A<5>                          
 27 KPR                              99 GND                           
 28 KPR                             100 A<4>                          
 29 GND                             101 A<3>                          
 30 q50m                            102 A<2>                          
 31 KPR                             103 A<1>                          
 32 KPR                             104 A<0>                          
 33 KPR                             105 FA<16>                        
 34 spi_nsel2                       106 FA<17>                        
 35 KPR                             107 FA<18>                        
 36 GND                             108 GND                           
 37 VCC                             109 VCC                           
 38 phi2_io                         110 VD<3>                         
 39 spi_nsel3                       111 VD<2>                         
 40 spi_nsel4                       112 VD<4>                         
 41 dena                            113 VD<1>                         
 42 VCC                             114 GND                           
 43 pet_vsync                       115 VD<5>                         
 44 KPR                             116 VD<0>                         
 45 dclk                            117 KPR                           
 46 pxl                             118 spi_in3                       
 47 GND                             119 VA<0>                         
 48 hsync                           120 VA<1>                         
 49 vsync                           121 VA<2>                         
 50 spi_clk                         122 TDO                           
 51 KPR                             123 GND                           
 52 nflash                          124 VA<10>                        
 53 KPR                             125 VA<3>                         
 54 spi_out                         126 nvramsel                      
 55 VCC                             127 VCC                           
 56 KPR                             128 KPR                           
 57 phi2                            129 spi_in1                       
 58 VD<6>                           130 VA<4>                         
 59 VD<7>                           131 VA<5>                         
 60 spi_nsel5                       132 VA<9>                         
 61 KPR                             133 VA<6>                         
 62 GND                             134 VA<11>                        
 63 TDI                             135 VA<8>                         
 64 KPR                             136 VA<7>                         
 65 TMS                             137 VA<13>                        
 66 nsel4                           138 VA<12>                        
 67 TCK                             139 ramrwb                        
 68 nsel2                           140 KPR                           
 69 nsel1                           141 VCC                           
 70 graphic                         142 e                             
 71 FA<15>                          143 nres                          
 72 GND                             144 GND                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc95288xl-6-TQ144
Optimization Method                         : DENSITY
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 90
