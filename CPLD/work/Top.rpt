 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: Top                                 Date:  5-12-2022,  8:01AM
Device Used: XC95288XL-6-TQ144
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
277/288 ( 96%) 976 /1440 ( 68%) 661/864 ( 76%)   201/288 ( 70%) 88 /117 ( 75%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          18/18*      43/54       61/90       4/ 8
FB2          16/18       48/54       71/90       3/10
FB3          18/18*      19/54       35/90       1/ 5
FB4          13/18       50/54       40/90       3/ 6
FB5          18/18*      33/54       56/90       6/ 8
FB6          18/18*      40/54       59/90       7/ 8
FB7          18/18*      45/54       67/90       4/ 4*
FB8          18/18*      49/54       83/90       5/ 5*
FB9          16/18       38/54       73/90       6/ 9
FB10         17/18       48/54       89/90       8/10
FB11         18/18*      46/54       50/90       5/ 7
FB12         18/18*      42/54       58/90       6/ 6*
FB13         18/18*      45/54       64/90       5/ 6
FB14         18/18*      39/54       52/90       8/ 8*
FB15         18/18*      48/54       86/90       9/ 9*
FB16         17/18       28/54       32/90       8/ 8*
             -----       -----       -----      -----    
            277/288     661/864     976/1440    88/117

* - Resource is exhausted

** Global Control Resources **

Signal 'q50m' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Signal 'nres' mapped onto global set/reset net GSR.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   26          26    |  I/O              :    84     109
Output        :   42          42    |  GCK/IO           :     2       3
Bidirectional :   18          18    |  GTS/IO           :     1       4
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    1           1    |
                 ----        ----
        Total     88          88

** Power Data **

There are 274 macrocells in high performance mode (MCHP).
There are 3 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'Top.ise'.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'phi2_io' is
   ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'N17' is
   ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
WARNING:Cpld - The signal(s) 'phi2' are in combinational feedback loops.
   These signals may cause hazards/glitches. Apply the NOREDUCE parameter to the
   hazard reduction circuitry.
   Timing analysis of paths involving this node may be inaccurate or incomplete.
WARNING:Cpld - The signal(s) 'phi2_io_and0000' are in combinational feedback
   loops.
   These signals may cause hazards/glitches. Apply the NOREDUCE parameter to the
   hazard reduction circuitry.
   Timing analysis of paths involving this node may be inaccurate or incomplete.
INFO:Cpld:994 - Exhaustive fitting is trying pterm limit: 90 and input limit: 54
*************************  Summary of Mapped Logic  ************************

** 60 Outputs **

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
VA<16>                                                                              3     13    FB2_2   9    I/O     O       STD  SLOW 
VA<15>                                                                              13    19    FB2_3   10   I/O     O       STD  SLOW 
VA<18>                                                                              2     12    FB2_5   11   I/O     O       STD  SLOW 
nframsel                                                                            13    30    FB4_2   2    GTS/I/O O       STD  SLOW 
VA<17>                                                                              2     12    FB4_6   4    I/O     O       STD  SLOW 
VA<14>                                                                              4     7     FB4_14  7    I/O     O       STD  SLOW 
spi_nsel2                                                                           1     4     FB5_2   34   I/O     O       STD  SLOW 
phi2_io                                                                             3     5     FB5_8   38   GCK/I/O I/O     STD  SLOW 
spi_nsel3                                                                           1     4     FB5_10  39   I/O     O       STD  SLOW 
spi_nsel4                                                                           1     4     FB5_12  40   I/O     O       STD  SLOW 
dena                                                                                3     6     FB5_14  41   I/O     O       STD  SLOW RESET
pet_vsync                                                                           7     14    FB5_15  43   I/O     O       STD  SLOW RESET
VA<8>                                                                               4     7     FB6_2   135  I/O     O       STD  SLOW 
VA<7>                                                                               5     8     FB6_3   136  I/O     O       STD  SLOW 
VA<13>                                                                              5     9     FB6_5   137  I/O     O       STD  SLOW 
VA<12>                                                                              5     9     FB6_6   138  I/O     O       STD  SLOW 
ramrwb                                                                              2     5     FB6_8   139  I/O     O       STD  SLOW 
dclk                                                                                2     2     FB7_3   45   I/O     O       STD  SLOW RESET
pxl                                                                                 2     3     FB7_5   46   I/O     O       STD  SLOW RESET
hsync                                                                               4     8     FB7_12  48   I/O     O       STD  SLOW SET
vsync                                                                               7     14    FB7_15  49   I/O     O       STD  SLOW SET
VA<4>                                                                               5     8     FB8_2   130  I/O     O       STD  SLOW 
VA<5>                                                                               5     8     FB8_3   131  I/O     O       STD  SLOW 
VA<9>                                                                               4     7     FB8_5   132  I/O     O       STD  SLOW 
VA<6>                                                                               5     8     FB8_8   133  I/O     O       STD  SLOW 
VA<11>                                                                              6     9     FB8_10  134  I/O     O       STD  SLOW 
spi_clk                                                                             13    7     FB9_2   50   I/O     O       STD  SLOW 
nflash                                                                              2     5     FB9_5   52   I/O     O       STD  SLOW 
spi_out                                                                             2     3     FB9_8   54   I/O     O       STD  SLOW 
phi2                                                                                2     4     FB9_12  57   I/O     I/O     STD  SLOW 
VD<6>                                                                               4     11    FB9_14  58   I/O     I/O     STD  SLOW 
VD<7>                                                                               5     12    FB9_17  59   I/O     I/O     STD  SLOW 
VA<0>                                                                               5     8     FB10_5  119  I/O     O       STD  SLOW 
VA<1>                                                                               5     8     FB10_6  120  I/O     O       STD  SLOW 
VA<2>                                                                               5     8     FB10_8  121  I/O     O       STD  SLOW 
VA<10>                                                                              4     7     FB10_10 124  I/O     O       STD  SLOW 
VA<3>                                                                               5     8     FB10_11 125  I/O     O       STD  SLOW 
nvramsel                                                                            3     5     FB10_12 126  I/O     O       STD  SLOW 
spi_nsel5                                                                           1     4     FB11_3  60   I/O     O       STD  SLOW 
nsel4                                                                               2     23    FB11_11 66   I/O     O       STD  SLOW 

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
nsel2                                                                               2     23    FB11_12 68   I/O     O       STD  SLOW 
nsel1                                                                               2     23    FB11_14 69   I/O     O       STD  SLOW 
VD<3>                                                                               3     5     FB12_2  110  I/O     I/O     STD  SLOW 
VD<2>                                                                               4     11    FB12_3  111  I/O     I/O     STD  SLOW 
VD<4>                                                                               4     11    FB12_5  112  I/O     I/O     STD  SLOW 
VD<1>                                                                               4     11    FB12_8  113  I/O     I/O     STD  SLOW 
VD<5>                                                                               4     11    FB12_10 115  I/O     I/O     STD  SLOW 
VD<0>                                                                               4     11    FB12_12 116  I/O     I/O     STD  SLOW 
FA<15>                                                                              11    14    FB13_2  71   I/O     O       STD  SLOW 
D<7>                                                                                5     12    FB13_15 77   I/O     I/O     STD  SLOW 
D<6>                                                                                4     11    FB13_17 78   I/O     I/O     STD  SLOW 
FA<16>                                                                              3     11    FB14_11 105  I/O     O       STD  SLOW 
FA<17>                                                                              2     10    FB14_14 106  I/O     O       STD  SLOW 
FA<18>                                                                              2     10    FB14_15 107  I/O     O       STD  SLOW 
D<5>                                                                                4     11    FB15_2  79   I/O     I/O     STD  SLOW 
D<4>                                                                                4     11    FB15_3  80   I/O     I/O     STD  SLOW 
D<3>                                                                                3     5     FB15_8  81   I/O     I/O     STD  SLOW 
D<2>                                                                                4     11    FB15_10 82   I/O     I/O     STD  SLOW 
D<1>                                                                                4     11    FB15_11 83   I/O     I/O     STD  SLOW 
D<0>                                                                                4     11    FB15_14 86   I/O     I/O     STD  SLOW 

** 217 Buried Nodes **

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/rline_cnt<0>                                                                  2     3     FB1_1   STD  RESET
vis_hires_in                                                                        3     4     FB1_2   STD  RESET
vis_double_in                                                                       3     4     FB1_3   STD  RESET
vis_80_in                                                                           3     4     FB1_4   STD  RESET
vidblock<0>                                                                         3     4     FB1_5   STD  RESET
viccy/rline_cnt<5>                                                                  3     4     FB1_6   STD  RESET
viccy/is_80                                                                         3     5     FB1_7   STD  RESET
screenb0                                                                            3     4     FB1_8   STD  RESET
movesync                                                                            3     4     FB1_9   STD  RESET
mode<1>                                                                             3     4     FB1_10  STD  RESET
mode<0>                                                                             3     4     FB1_11  STD  RESET
interlace                                                                           3     4     FB1_12  STD  RESET
viccy/vid_addr_hold<8>                                                              4     6     FB1_13  STD  RESET
viccy/vid_addr_hold<7>                                                              4     6     FB1_14  STD  RESET
viccy/vid_addr_hold<6>                                                              4     6     FB1_15  STD  RESET
viccy/vid_addr_hold<5>                                                              4     6     FB1_16  STD  RESET
viccy/vid_addr_hold<13>                                                             5     7     FB1_17  STD  RESET
viccy/vid_addr_hold<12>                                                             5     7     FB1_18  STD  RESET
viccy/pxlhold<4>                                                                    8     8     FB2_1   STD  RESET
viccy/pxlhold<6>                                                                    8     8     FB2_6   STD  RESET
viccy/pxlhold<7>                                                                    8     8     FB2_8   STD  RESET
viccy/chr_fetch                                                                     4     7     FB2_9   STD  RESET
viccy/pxl_fetch                                                                     4     6     FB2_10  STD  RESET
viccy/pxlhold<0>                                                                    4     7     FB2_11  STD  RESET
viccy/pxlhold<5>                                                                    8     8     FB2_12  STD  RESET
viccy/vpage<6>                                                                      3     5     FB2_13  STD  RESET
viccy/vpage<7>                                                                      3     5     FB2_14  STD  RESET
clocky/clk_cnt_0_0                                                                  0     0     FB2_15  STD  RESET
clocky/cpu_cnt1<0>                                                                  1     1     FB2_16  STD  RESET
memclk_d                                                                            1     1     FB2_17  STD  RESET
viccy/dot2clk_d                                                                     1     1     FB2_18  STD  RESET
sr_load                                                                             1     4     FB3_1   STD  RESET
pxl_window                                                                          1     2     FB3_2   STD  RESET
clocky/clk_cnt_0_3                                                                  1     3     FB3_3   STD  RESET
clocky/clk_cnt_0_2                                                                  1     2     FB3_4   STD  RESET
clocky/clk_cnt_0_1                                                                  1     1     FB3_5   STD  RESET
clk1m                                                                               1     4     FB3_6   STD  RESET
chr_window                                                                          1     2     FB3_7   STD  RESET
slotclk                                                                             2     2     FB3_8   STD  RESET
ipl_state_d                                                                         2     2     FB3_9   STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
dot4clk                                                                             2     2     FB3_10  STD  RESET
dot2clk                                                                             2     2     FB3_11  STD  RESET
clocky/cpu_cnt1<1>                                                                  2     2     FB3_12  STD  RESET
clk2m                                                                               2     4     FB3_13  STD  RESET
vis_enable                                                                          3     4     FB3_14  STD  RESET
phi2_io_and0000                                                                     3     5     FB3_15  STD  
clocky/cpu_cnt1<3>                                                                  3     5     FB3_16  STD  RESET
clocky/cpu_cnt1<2>                                                                  3     5     FB3_17  STD  RESET
clk4m                                                                               4     4     FB3_18  STD  RESET
wp_romPET_or0000/wp_romPET_or0000_D2                                                2     28    FB4_8   STD  
vidblock_or0000/vidblock_or0000_D2                                                  2     28    FB4_9   STD  
viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2                                        2     27    FB4_10  STD  
spi_cs/spi_cs_D2                                                                    2     26    FB4_11  STD  
movesync_or0000/movesync_or0000_D2                                                  2     28    FB4_12  STD  
mode_or0000/mode_or0000_D2                                                          2     28    FB4_13  STD  
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2                                        2     28    FB4_15  STD  
$OpTx$FX_DC$481                                                                     2     27    FB4_16  STD  
$OpTx$FX_DC$442                                                                     2     25    FB4_17  STD  
m_vramsel_out/m_vramsel_out_D2                                                      3     5     FB4_18  STD  
viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2    1     5     FB5_1   STD  
viccy/last_line_of_screen                                                           2     11    FB5_3   STD  RESET
viccy/rline_cnt<9>                                                                  3     8     FB5_4   STD  RESET
viccy/rline_cnt<8>                                                                  3     7     FB5_5   STD  RESET
viccy/rline_cnt<7>                                                                  3     6     FB5_6   STD  RESET
viccy/rline_cnt<6>                                                                  3     5     FB5_7   STD  RESET
viccy/rline_cnt<4>                                                                  3     8     FB5_9   STD  RESET
viccy/rline_cnt<3>                                                                  3     6     FB5_11  STD  RESET
viccy/rline_cnt<2>                                                                  3     5     FB5_13  STD  RESET
viccy/rline_cnt<1>                                                                  3     4     FB5_16  STD  RESET
viccy/v_enable                                                                      6     11    FB5_17  STD  RESET
is_cpu                                                                              7     8     FB5_18  STD  RESET
wait_int_d                                                                          2     3     FB6_1   STD  RESET
mappy/bankl<5>                                                                      3     4     FB6_4   STD  RESET
mappy/bankl<4>                                                                      3     4     FB6_7   STD  RESET
mappy/bankl<3>                                                                      3     4     FB6_9   STD  RESET
mappy/bankl<2>                                                                      3     4     FB6_10  STD  RESET
mappy/bankl<1>                                                                      3     4     FB6_11  STD  RESET
mappy/bankl<0>                                                                      3     4     FB6_12  STD  RESET
lowbank<3>                                                                          3     4     FB6_13  STD  RESET
lowbank<1>                                                                          3     4     FB6_14  STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
lowbank<0>                                                                          3     4     FB6_15  STD  RESET
lockb0                                                                              3     4     FB6_16  STD  RESET
is8296                                                                              3     4     FB6_17  STD  RESET
do_cpu                                                                              3     5     FB6_18  STD  RESET
viccy/slot_cnt<0>                                                                   2     3     FB7_1   STD  RESET
viccy/last_slot_of_line                                                             2     8     FB7_2   STD  RESET
viccy/slot_cnt<6>                                                                   3     9     FB7_4   STD  RESET
viccy/slot_cnt<5>                                                                   3     8     FB7_6   STD  RESET
viccy/slot_cnt<4>                                                                   3     7     FB7_7   STD  RESET
viccy/slot_cnt<3>                                                                   3     6     FB7_8   STD  RESET
viccy/slot_cnt<2>                                                                   3     5     FB7_9   STD  RESET
viccy/slot_cnt<1>                                                                   3     4     FB7_10  STD  RESET
viccy/last_vis_slot_of_line                                                         3     9     FB7_11  STD  RESET
viccy/h_enable                                                                      3     9     FB7_13  STD  RESET
viccy/vid_addr<8>                                                                   6     15    FB7_14  STD  RESET
viccy/vid_addr<7>                                                                   6     14    FB7_16  STD  RESET
viccy/vid_addr<6>                                                                   6     13    FB7_17  STD  RESET
viccy/vid_addr<5>                                                                   6     12    FB7_18  STD  RESET
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  1     9     FB8_1   STD  
viccy/vid_addr_hold<9>                                                              4     6     FB8_4   STD  RESET
viccy/vid_addr_hold<4>                                                              4     6     FB8_6   STD  RESET
viccy/vid_addr_hold<3>                                                              4     6     FB8_7   STD  RESET
viccy/vid_addr_hold<2>                                                              4     6     FB8_9   STD  RESET
viccy/vid_addr_hold<1>                                                              4     6     FB8_11  STD  RESET
viccy/vid_addr_hold<0>                                                              4     6     FB8_12  STD  RESET
viccy/vid_addr_hold<11>                                                             5     7     FB8_13  STD  RESET
viccy/vid_addr_hold<10>                                                             5     7     FB8_14  STD  RESET
viccy/vid_addr<0>                                                                   5     7     FB8_15  STD  RESET
viccy/vid_addr<9>                                                                   6     8     FB8_16  STD  RESET
viccy/vid_addr<11>                                                                  6     10    FB8_17  STD  RESET
viccy/vid_addr<10>                                                                  6     9     FB8_18  STD  RESET
spi_comp/serin_d                                                                    14    13    FB9_3   STD  RESET
spi_comp/run_sr                                                                     5     10    FB9_6   STD  RESET
spi_outx                                                                            5     7     FB9_7   STD  RESET
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2                                      3     6     FB9_9   STD  
spi_comp/stat<0>                                                                    3     5     FB9_10  STD  RESET
spi_comp/stat<1>                                                                    3     6     FB9_11  STD  RESET
spi_comp/stat<2>                                                                    3     7     FB9_13  STD  RESET
spi_comp/stat<3>                                                                    3     8     FB9_15  STD  RESET
spi_comp/txd<6>                                                                     3     5     FB9_16  STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_comp/txd<7>                                                                     3     5     FB9_18  STD  RESET
viccy/last_line_of_char                                                             7     9     FB10_1  STD  RESET
viccy/rcline_cnt<0>                                                                 4     6     FB10_2  STD  RESET
viccy/rcline_cnt<3>                                                                 5     9     FB10_3  STD  RESET
viccy/rcline_cnt<2>                                                                 5     8     FB10_4  STD  RESET
viccy/rcline_cnt<1>                                                                 5     7     FB10_7  STD  RESET
viccy/vid_addr<4>                                                                   6     11    FB10_9  STD  RESET
viccy/vid_addr<3>                                                                   6     10    FB10_13 STD  RESET
viccy/vid_addr<2>                                                                   6     9     FB10_14 STD  RESET
viccy/vid_addr<1>                                                                   6     8     FB10_16 STD  RESET
viccy/vid_addr<13>                                                                  6     12    FB10_17 STD  RESET
viccy/vid_addr<12>                                                                  6     11    FB10_18 STD  RESET
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2                    1     7     FB11_1  STD  
spi_outx/spi_outx_CLKF                                                              3     4     FB11_2  STD  
ipl_cnt<9>                                                                          3     8     FB11_4  STD  RESET
ipl_cnt<8>                                                                          3     7     FB11_5  STD  RESET
ipl_cnt<6>                                                                          3     11    FB11_6  STD  RESET
ipl_cnt<5>                                                                          3     10    FB11_7  STD  RESET
ipl_cnt<4>                                                                          3     9     FB11_8  STD  RESET
ipl_cnt<3>                                                                          3     8     FB11_9  STD  RESET
ipl_cnt<2>                                                                          3     7     FB11_10 STD  RESET
ipl_cnt<1>                                                                          3     6     FB11_13 STD  RESET
ipl_cnt<11>                                                                         3     10    FB11_15 STD  RESET
ipl_cnt<10>                                                                         3     9     FB11_16 STD  RESET
ipl_next                                                                            4     15    FB11_17 STD  RESET
ipl_out                                                                             5     15    FB11_18 STD  RESET
ipl                                                                                 2     4     FB12_1  STD  RESET
viccy/vpage<5>                                                                      3     5     FB12_4  STD  RESET
viccy/vpage<4>                                                                      3     5     FB12_6  STD  RESET
viccy/vpage<3>                                                                      3     5     FB12_7  STD  RESET
viccy/vpage<2>                                                                      3     5     FB12_9  STD  RESET
viccy/rows_per_char<3>                                                              3     5     FB12_11 STD  RESET
viccy/crtc_reg<1>                                                                   3     7     FB12_13 STD  RESET
viccy/crtc_reg<0>                                                                   3     7     FB12_14 STD  RESET
spi_comp/txd<3>                                                                     3     5     FB12_15 STD  RESET
ipl_state                                                                           3     4     FB12_16 STD  RESET
ipl_cnt<7>                                                                          3     6     FB12_17 STD  RESET
ipl_cnt<0>                                                                          3     5     FB12_18 STD  RESET
mappy/screenwin/mappy/screenwin_D2                                                  2     15    FB13_1  STD  
spi_sel<2>                                                                          3     5     FB13_3  LOW  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_sel<1>                                                                          3     5     FB13_4  LOW  RESET
spi_sel<0>                                                                          3     5     FB13_5  LOW  RESET
spi_comp/txd_valid                                                                  3     5     FB13_6  STD  RESET
spi_comp/txd<5>                                                                     3     5     FB13_7  STD  RESET
spi_comp/txd<4>                                                                     3     5     FB13_8  STD  RESET
spi_comp/txd<2>                                                                     3     5     FB13_9  STD  RESET
spi_comp/txd<1>                                                                     3     5     FB13_10 STD  RESET
spi_comp/txd<0>                                                                     3     5     FB13_11 STD  RESET
spi_comp/start_rx                                                                   3     5     FB13_12 STD  RESET
spi_comp/cpol                                                                       3     5     FB13_13 STD  RESET
spi_comp/cpha                                                                       3     5     FB13_14 STD  RESET
spi_comp/N01/spi_comp/N01_D2                                                        3     5     FB13_16 STD  
$OpTx$INV$398                                                                       3     11    FB13_18 STD  
wp_romPET                                                                           3     4     FB14_1  STD  RESET
wp_romB                                                                             3     5     FB14_2  STD  RESET
vidblock<2>                                                                         3     4     FB14_3  STD  RESET
vidblock<1>                                                                         3     4     FB14_4  STD  RESET
mappy/cfg_mp<7>                                                                     3     4     FB14_5  STD  RESET
mappy/cfg_mp<6>                                                                     3     4     FB14_6  STD  RESET
mappy/cfg_mp<5>                                                                     3     4     FB14_7  STD  RESET
mappy/cfg_mp<3>                                                                     3     4     FB14_8  STD  RESET
mappy/cfg_mp<2>                                                                     3     4     FB14_9  STD  RESET
mappy/cfg_mp<1>                                                                     3     4     FB14_10 STD  RESET
mappy/cfg_mp<0>                                                                     3     4     FB14_12 STD  RESET
mappy/bankl<7>                                                                      3     4     FB14_13 STD  RESET
mappy/bankl<6>                                                                      3     4     FB14_16 STD  RESET
lowbank<2>                                                                          3     4     FB14_17 STD  RESET
boot                                                                                3     4     FB14_18 STD  RESET
viccy/pxlhold<1>                                                                    8     8     FB15_1  STD  RESET
D_or0000/D_or0000_D2                                                                2     4     FB15_4  STD  
spi_comp/sr<6>                                                                      5     7     FB15_5  STD  RESET
spi_comp/sr<5>                                                                      5     7     FB15_6  STD  RESET
spi_comp/sr<4>                                                                      5     7     FB15_7  STD  RESET
spi_comp/sr<3>                                                                      5     7     FB15_9  STD  RESET
spi_comp/sr<2>                                                                      5     7     FB15_12 STD  RESET
spi_comp/sr<1>                                                                      5     7     FB15_13 STD  RESET
spi_comp/sr<0>                                                                      5     7     FB15_15 STD  RESET
viccy/pxlhold<3>                                                                    8     8     FB15_16 STD  RESET
viccy/pxlhold<2>                                                                    8     8     FB15_17 STD  RESET
spi_comp/ack_txd                                                                    2     3     FB15_18 STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/sr_load_d                                                                     1     1     FB16_2  STD  RESET
spi_comp/txd_valid/spi_comp/txd_valid_RSTF                                          1     2     FB16_3  STD  
spi_comp/start_rx/spi_comp/start_rx_RSTF                                            1     2     FB16_4  STD  
is_vid_out                                                                          1     2     FB16_5  STD  RESET
viccy/in_slot                                                                       2     2     FB16_6  STD  RESET
viccy/charhold<7>                                                                   2     2     FB16_7  STD  RESET
viccy/charhold<6>                                                                   2     2     FB16_8  STD  RESET
viccy/charhold<5>                                                                   2     2     FB16_9  STD  RESET
viccy/charhold<4>                                                                   2     2     FB16_10 STD  RESET
viccy/charhold<3>                                                                   2     2     FB16_11 STD  RESET
viccy/charhold<2>                                                                   2     2     FB16_12 STD  RESET
viccy/charhold<1>                                                                   2     2     FB16_13 STD  RESET
viccy/charhold<0>                                                                   2     2     FB16_14 STD  RESET
spi_comp/run_sr_d                                                                   2     2     FB16_15 STD  RESET
spi_comp/ack_rxtx                                                                   2     5     FB16_16 STD  RESET
wp_romA                                                                             3     4     FB16_17 STD  RESET
wp_rom9                                                                             3     4     FB16_18 STD  RESET

** 28 Inputs **

Signal                                                                              Loc     Pin  Pin     Pin     
Name                                                                                        No.  Type    Use     
rwb                                                                                 FB1_5   20   I/O     I
mlb                                                                                 FB1_6   21   I/O     I
vpb                                                                                 FB1_8   22   I/O     I
mx                                                                                  FB1_12  24   I/O     I
q50m                                                                                FB3_10  30   GCK/I/O GCK
e                                                                                   FB6_14  142  I/O     I
nres                                                                                FB6_15  143  GSR/I/O GSR/I
spi_in3                                                                             FB10_3  118  I/O     I
spi_in1                                                                             FB10_17 129  I/O     I
graphic                                                                             FB11_17 70   I/O     I
vpa                                                                                 FB13_8  74   I/O     I
vda                                                                                 FB13_11 75   I/O     I
A<4>                                                                                FB14_3  100  I/O     I
A<3>                                                                                FB14_5  101  I/O     I
A<2>                                                                                FB14_6  102  I/O     I
A<1>                                                                                FB14_8  103  I/O     I
A<0>                                                                                FB14_10 104  I/O     I
A<15>                                                                               FB15_12 85   I/O     I
A<13>                                                                               FB15_15 87   I/O     I
A<14>                                                                               FB15_17 88   I/O     I
A<12>                                                                               FB16_2  91   I/O     I
A<11>                                                                               FB16_3  92   I/O     I
A<10>                                                                               FB16_5  93   I/O     I
A<9>                                                                                FB16_6  94   I/O     I
A<8>                                                                                FB16_8  95   I/O     I
A<7>                                                                                FB16_10 96   I/O     I
A<6>                                                                                FB16_11 97   I/O     I
A<5>                                                                                FB16_12 98   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               43/11
Number of signals used by logic mapping into function block:  43
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/rline_cnt<0>    2       0     0   3     FB1_1         (b)     (b)
vis_hires_in          3       0     0   2     FB1_2         (b)     (b)
vis_double_in         3       0     0   2     FB1_3         (b)     (b)
vis_80_in             3       0     0   2     FB1_4         (b)     (b)
vidblock<0>           3       0     0   2     FB1_5   20    I/O     I
viccy/rline_cnt<5>    3       0     0   2     FB1_6   21    I/O     I
viccy/is_80           3       0     0   2     FB1_7         (b)     (b)
screenb0              3       0     0   2     FB1_8   22    I/O     I
movesync              3       0     0   2     FB1_9         (b)     (b)
mode<1>               3       0     0   2     FB1_10  23    I/O     (b)
mode<0>               3       0     0   2     FB1_11        (b)     (b)
interlace             3       0     0   2     FB1_12  24    I/O     I
viccy/vid_addr_hold<8>
                      4       0     0   1     FB1_13        (b)     (b)
viccy/vid_addr_hold<7>
                      4       0     0   1     FB1_14  25    I/O     (b)
viccy/vid_addr_hold<6>
                      4       0     0   1     FB1_15  26    I/O     (b)
viccy/vid_addr_hold<5>
                      4       0     0   1     FB1_16        (b)     (b)
viccy/vid_addr_hold<13>
                      5       0     0   0     FB1_17  27    I/O     (b)
viccy/vid_addr_hold<12>
                      5       0     0   0     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: D<6>.PIN                            16: screenb0                                                                          30: viccy/vid_addr<8> 
  2: D<4>.PIN                            17: slotclk                                                                           31: viccy/vid_addr_hold<12> 
  3: D<3>.PIN                            18: viccy/last_line_of_char                                                           32: viccy/vid_addr_hold<13> 
  4: D<2>.PIN                            19: viccy/last_line_of_screen                                                         33: viccy/vid_addr_hold<5> 
  5: D<1>.PIN                            20: viccy/last_slot_of_line                                                           34: viccy/vid_addr_hold<6> 
  6: D<0>.PIN                            21: viccy/last_vis_slot_of_line                                                       35: viccy/vid_addr_hold<7> 
  7: hsync                               22: viccy/rline_cnt<0>                                                                36: viccy/vid_addr_hold<8> 
  8: interlace                           23: viccy/rline_cnt<5>                                                                37: viccy/vpage<4> 
  9: mode<0>                             24: viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2  38: viccy/vpage<5> 
 10: mode<1>                             25: viccy/vid_addr<12>                                                                39: vidblock<0> 
 11: mode_or0000/mode_or0000_D2          26: viccy/vid_addr<13>                                                                40: vidblock_or0000/vidblock_or0000_D2 
 12: movesync                            27: viccy/vid_addr<5>                                                                 41: vis_80_in 
 13: movesync_or0000/movesync_or0000_D2  28: viccy/vid_addr<6>                                                                 42: vis_double_in 
 14: nres                                29: viccy/vid_addr<7>                                                                 43: vis_hires_in 
 15: phi2                               

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/rline_cnt<0>   ......X...........X..X............................ 3
vis_hires_in         .....X......X.X...........................X....... 4
vis_double_in        ..X.........X.X..........................X........ 4
vis_80_in            ....X.......X.X.........................X......... 4
vidblock<0>          .X............X.......................XX.......... 4
viccy/rline_cnt<5>   ......X...........X...XX.......................... 4
viccy/is_80          .............X..X.XX....................X......... 5
screenb0             ...X........X.XX.................................. 4
movesync             X..........XX.X................................... 4
mode<1>              ....X....XX...X................................... 4
mode<0>              .....X..X.X...X................................... 4
interlace            .X.....X....X.X................................... 4
viccy/vid_addr_hold<8> 
                     ................XXX.X........X.....X.............. 6
viccy/vid_addr_hold<7> 
                     ................XXX.X.......X.....X............... 6
viccy/vid_addr_hold<6> 
                     ................XXX.X......X.....X................ 6
viccy/vid_addr_hold<5> 
                     ................XXX.X.....X.....X................. 6
viccy/vid_addr_hold<13> 
                     ................XXX.X....X.....X.....X............ 7
viccy/vid_addr_hold<12> 
                     ................XXX.X...X.....X.....X............. 7
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/pxlhold<4>      8       4<- \/1   0     FB2_1         (b)     (b)
VA<16>                3       1<- \/3   0     FB2_2   9     I/O     O
VA<15>               13       8<-   0   0     FB2_3   10    I/O     O
(unused)              0       0   /\5   0     FB2_4         (b)     (b)
VA<18>                2       0   \/3   0     FB2_5   11    I/O     O
viccy/pxlhold<6>      8       3<-   0   0     FB2_6   12    I/O     (b)
(unused)              0       0   \/3   2     FB2_7         (b)     (b)
viccy/pxlhold<7>      8       3<-   0   0     FB2_8   13    I/O     (b)
viccy/chr_fetch       4       0     0   1     FB2_9         (b)     (b)
viccy/pxl_fetch       4       0     0   1     FB2_10  14    I/O     (b)
viccy/pxlhold<0>      4       0   \/1   0     FB2_11        (b)     (b)
viccy/pxlhold<5>      8       3<-   0   0     FB2_12  15    I/O     (b)
viccy/vpage<6>        3       0   /\2   0     FB2_13        (b)     (b)
viccy/vpage<7>        3       0     0   2     FB2_14  16    I/O     (b)
clocky/clk_cnt_0_0    0       0     0   5     FB2_15  17    I/O     (b)
clocky/cpu_cnt1<0>    1       0     0   4     FB2_16        (b)     (b)
memclk_d              1       0     0   4     FB2_17  19    I/O     (b)
viccy/dot2clk_d       1       0   \/4   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$398     17: is_vid_out        33: viccy/in_slot 
  2: D<7>.PIN          18: lowbank<0>        34: viccy/is_80 
  3: D<6>.PIN          19: lowbank<1>        35: viccy/pxl_fetch 
  4: VD<7>.PIN         20: lowbank<3>        36: viccy/pxlhold<0> 
  5: VD<6>.PIN         21: mappy/bankl<0>    37: viccy/pxlhold<3> 
  6: VD<5>.PIN         22: mappy/bankl<1>    38: viccy/pxlhold<4> 
  7: VD<4>.PIN         23: mappy/bankl<2>    39: viccy/pxlhold<5> 
  8: VD<0>.PIN         24: mappy/bankl<3>    40: viccy/pxlhold<6> 
  9: A<14>             25: mappy/bankl<4>    41: viccy/pxlhold<7> 
 10: A<15>             26: mappy/bankl<5>    42: viccy/rline_cnt<0> 
 11: chr_window        27: mappy/bankl<6>    43: viccy/sr_load_d 
 12: dclk              28: mappy/bankl<7>    44: viccy/vpage<6> 
 13: do_cpu            29: mappy/cfg_mp<2>   45: viccy/vpage<7> 
 14: dot2clk           30: mappy/cfg_mp<3>   46: viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2 
 15: interlace         31: pxl_window        47: vis_enable 
 16: ipl               32: viccy/dot2clk_d   48: vis_hires_in 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/pxlhold<4>     ......X....X...................X.XX.XX....X....... 8
VA<16>               X........X.....XX.X.XXXXXXXX...................... 13
VA<15>               X.......XX.....XXX..XXXXXXXXXX....X.........X..X.. 19
VA<18>               .........X.....XX..XXXXXXXXX...................... 12
viccy/pxlhold<6>     ....X......X...................X.XX...XX..X....... 8
viccy/pxlhold<7>     ...X.......X...................X.XX....XX.X....... 8
viccy/chr_fetch      ..........X...X.................XX.......X....XX.. 7
viccy/pxl_fetch      ..............X...............X.XX.......X....X... 6
viccy/pxlhold<0>     .......X...X...................X.XXX......X....... 7
viccy/pxlhold<5>     .....X.....X...................X.XX..XX...X....... 8
viccy/vpage<6>       ..X.........XX.............................X.X.... 5
viccy/vpage<7>       .X..........XX..............................XX.... 5
clocky/clk_cnt_0_0   .................................................. 0
clocky/cpu_cnt1<0>   .............X.................................... 1
memclk_d             .............X.................................... 1
viccy/dot2clk_d      .............X.................................... 1
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               19/35
Number of signals used by logic mapping into function block:  19
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
sr_load               1       0     0   4     FB3_1         (b)     (b)
pxl_window            1       0     0   4     FB3_2   28    I/O     (b)
clocky/clk_cnt_0_3    1       0     0   4     FB3_3         (b)     (b)
clocky/clk_cnt_0_2    1       0     0   4     FB3_4         (b)     (b)
clocky/clk_cnt_0_1    1       0     0   4     FB3_5         (b)     (b)
clk1m                 1       0     0   4     FB3_6         (b)     (b)
chr_window            1       0     0   4     FB3_7         (b)     (b)
slotclk               2       0     0   3     FB3_8         (b)     (b)
ipl_state_d           2       0     0   3     FB3_9         (b)     (b)
dot4clk               2       0     0   3     FB3_10  30    GCK/I/O GCK
dot2clk               2       0     0   3     FB3_11        (b)     (b)
clocky/cpu_cnt1<1>    2       0     0   3     FB3_12  31    I/O     (b)
clk2m                 2       0     0   3     FB3_13        (b)     (b)
vis_enable            3       0     0   2     FB3_14  32    GCK/I/O (b)
phi2_io_and0000       3       0     0   2     FB3_15  33    I/O     (b)
clocky/cpu_cnt1<3>    3       0     0   2     FB3_16        (b)     (b)
clocky/cpu_cnt1<2>    3       0     0   2     FB3_17        (b)     (b)
clk4m                 4       0     0   1     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: phi2_io.PIN          8: clocky/cpu_cnt1<1>  14: mode<0> 
  2: D<7>.PIN             9: clocky/cpu_cnt1<2>  15: mode<1> 
  3: clocky/clk_cnt_0_0  10: clocky/cpu_cnt1<3>  16: movesync_or0000/movesync_or0000_D2 
  4: clocky/clk_cnt_0_1  11: do_cpu              17: nres 
  5: clocky/clk_cnt_0_2  12: dot2clk             18: phi2 
  6: clocky/clk_cnt_0_3  13: ipl_state           19: vis_enable 
  7: clocky/cpu_cnt1<0> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
sr_load              ..XXXX.................................. 4
pxl_window           ....XX.................................. 2
clocky/clk_cnt_0_3   ..XXX................................... 3
clocky/clk_cnt_0_2   ..XX.................................... 2
clocky/clk_cnt_0_1   ..X..................................... 1
clk1m                ......XXXX.............................. 4
chr_window           ....XX.................................. 2
slotclk              .....X..........X....................... 2
ipl_state_d          ...........XX........................... 2
dot4clk              ....X...........X....................... 2
dot2clk              ...X............X....................... 2
clocky/cpu_cnt1<1>   ......X....X............................ 2
clk2m                ......XXXX.............................. 4
vis_enable           .X.............X.XX..................... 4
phi2_io_and0000      X.........XX.XX......................... 5
clocky/cpu_cnt1<3>   ......XXXX.X............................ 5
clocky/cpu_cnt1<2>   ......XXXX.X............................ 5
clk4m                ......XXXX.............................. 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               50/4
Number of signals used by logic mapping into function block:  50
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/4   1     FB4_1         (b)     (b)
nframsel             13       8<-   0   0     FB4_2   2     GTS/I/O O
(unused)              0       0   /\4   1     FB4_3         (b)     (b)
(unused)              0       0     0   5     FB4_4         (b)     
(unused)              0       0     0   5     FB4_5   3     GTS/I/O 
VA<17>                2       0     0   3     FB4_6   4     I/O     O
(unused)              0       0     0   5     FB4_7         (b)     
wp_romPET_or0000/wp_romPET_or0000_D2
                      2       0     0   3     FB4_8   5     GTS/I/O (b)
vidblock_or0000/vidblock_or0000_D2
                      2       0     0   3     FB4_9         (b)     (b)
viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2
                      2       0     0   3     FB4_10        (b)     (b)
spi_cs/spi_cs_D2      2       0     0   3     FB4_11        (b)     (b)
movesync_or0000/movesync_or0000_D2
                      2       0     0   3     FB4_12  6     GTS/I/O (b)
mode_or0000/mode_or0000_D2
                      2       0     0   3     FB4_13        (b)     (b)
VA<14>                4       0     0   1     FB4_14  7     I/O     O
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2
                      2       0     0   3     FB4_15        (b)     (b)
$OpTx$FX_DC$481       2       0     0   3     FB4_16        (b)     (b)
$OpTx$FX_DC$442       2       0     0   3     FB4_17        (b)     (b)
m_vramsel_out/m_vramsel_out_D2
                      3       0     0   2     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$398     18: A<9>              35: mappy/cfg_mp<7> 
  2: boot              19: dot2clk           36: mappy/screenwin/mappy/screenwin_D2 
  3: A<0>              20: ipl               37: phi2 
  4: A<10>             21: is8296            38: rwb 
  5: A<11>             22: is_vid_out        39: vda 
  6: A<12>             23: lowbank<2>        40: viccy/crtc_reg<0> 
  7: A<13>             24: mappy/bankl<0>    41: viccy/crtc_reg<1> 
  8: A<14>             25: mappy/bankl<1>    42: viccy/pxl_fetch 
  9: A<15>             26: mappy/bankl<2>    43: viccy/vpage<6> 
 10: A<1>              27: mappy/bankl<3>    44: viccy/vpage<7> 
 11: A<2>              28: mappy/bankl<4>    45: vis_hires_in 
 12: A<3>              29: mappy/bankl<5>    46: vpa 
 13: A<4>              30: mappy/bankl<6>    47: wp_rom9 
 14: A<5>              31: mappy/bankl<7>    48: wp_romA 
 15: A<6>              32: mappy/cfg_mp<0>   49: wp_romB 
 16: A<7>              33: mappy/cfg_mp<1>   50: wp_romPET 
 17: A<8>              34: mappy/cfg_mp<6>  

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
nframsel             .X.XXXXXX.......XXX....XXXXXXXXXXXXX.XX......XXXXX.......... 30
VA<17>               ........X..........X.XXXXXXXXXX............................. 12
wp_romPET_or0000/wp_romPET_or0000_D2 
                     X.XXXXXXXXXXXXXXXX.....XXXXXXXX......XX......X.............. 28
vidblock_or0000/vidblock_or0000_D2 
                     X.XXXXXXXXXXXXXXXX.....XXXXXXXX......XX......X.............. 28
viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2 
                     X.XXXXXXX...XXXXXX.....XXXXXXXX......XXXX....X.............. 27
spi_cs/spi_cs_D2     X..XXXXXX.XXXXXXXX.....XXXXXXXX.....X.X......X.............. 26
movesync_or0000/movesync_or0000_D2 
                     X.XXXXXXXXXXXXXXXX.....XXXXXXXX......XX......X.............. 28
mode_or0000/mode_or0000_D2 
                     X.XXXXXXXXXXXXXXXX.....XXXXXXXX......XX......X.............. 28
VA<14>               .......X...........X.X...................XXXX............... 7
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
                     ..XXXXXXXXXXXXXXXX..X..XXXXXXXX......XX......X.............. 28
$OpTx$FX_DC$481      X.XXXXXXX...XXXXXX.....XXXXXXXX......XXXX....X.............. 27
$OpTx$FX_DC$442      X.XXXXXXX...XXXXXX.....XXXXXXXX......XX......X.............. 25
m_vramsel_out/m_vramsel_out_D2 
                     .X........................X........X..X......X.............. 5
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB5  ***********************************
Number of function block inputs used/remaining:               33/21
Number of signals used by logic mapping into function block:  33
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2
                      1       0   /\3   1     FB5_1         (b)     (b)
spi_nsel2             1       0     0   4     FB5_2   34    I/O     O
viccy/last_line_of_screen
                      2       0     0   3     FB5_3         (b)     (b)
viccy/rline_cnt<9>    3       0     0   2     FB5_4         (b)     (b)
viccy/rline_cnt<8>    3       0     0   2     FB5_5   35    I/O     (b)
viccy/rline_cnt<7>    3       0     0   2     FB5_6         (b)     (b)
viccy/rline_cnt<6>    3       0     0   2     FB5_7         (b)     (b)
phi2_io               3       0     0   2     FB5_8   38    GCK/I/O I/O
viccy/rline_cnt<4>    3       0     0   2     FB5_9         (b)     (b)
spi_nsel3             1       0     0   4     FB5_10  39    I/O     O
viccy/rline_cnt<3>    3       0     0   2     FB5_11        (b)     (b)
spi_nsel4             1       0     0   4     FB5_12  40    I/O     O
viccy/rline_cnt<2>    3       0     0   2     FB5_13        (b)     (b)
dena                  3       0   \/1   1     FB5_14  41    I/O     O
pet_vsync             7       2<-   0   0     FB5_15  43    I/O     O
viccy/rline_cnt<1>    3       0   /\1   1     FB5_16        (b)     (b)
viccy/v_enable        6       1<-   0   0     FB5_17  44    I/O     (b)
is_cpu                7       3<- /\1   0     FB5_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clk1m             12: nres                       23: viccy/rline_cnt<3> 
  2: clk2m             13: phi2_io_and0000            24: viccy/rline_cnt<4> 
  3: clk4m             14: spi_sel<0>                 25: viccy/rline_cnt<5> 
  4: dclk              15: spi_sel<1>                 26: viccy/rline_cnt<6> 
  5: do_cpu            16: spi_sel<2>                 27: viccy/rline_cnt<7> 
  6: dot2clk           17: viccy/h_enable             28: viccy/rline_cnt<8> 
  7: hsync             18: viccy/last_line_of_screen  29: viccy/rline_cnt<9> 
  8: is_cpu            19: viccy/pxl_fetch            30: viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2 
  9: mode<0>           20: viccy/rline_cnt<0>         31: viccy/rows_per_char<3> 
 10: mode<1>           21: viccy/rline_cnt<1>         32: viccy/sr_load_d 
 11: movesync          22: viccy/rline_cnt<2>         33: viccy/v_enable 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2 
                     ...................XXXXX................ 5
spi_nsel2            ...........X.XXX........................ 4
viccy/last_line_of_screen 
                     ......X............XXXXXXXXXX........... 11
viccy/rline_cnt<9>   ......X..........X......XXXXXX.......... 8
viccy/rline_cnt<8>   ......X..........X......XXXX.X.......... 7
viccy/rline_cnt<7>   ......X..........X......XXX..X.......... 6
viccy/rline_cnt<6>   ......X..........X......XX...X.......... 5
phi2_io              ....XX..XX..X........................... 5
viccy/rline_cnt<4>   ......X..........X.XXXXX.....X.......... 8
spi_nsel3            ...........X.XXX........................ 4
viccy/rline_cnt<3>   ......X..........X.XXXX................. 6
spi_nsel4            ...........X.XXX........................ 4
viccy/rline_cnt<2>   ......X..........X.XXX.................. 5
dena                 ...X.......X....X.X............XX....... 6
pet_vsync            ......X...XX.......XXXXXXXXXX.X......... 14
viccy/rline_cnt<1>   ......X..........X.XX................... 4
viccy/v_enable       ......X.............XXXXXXXXX.X......... 11
is_cpu               XXX.XX.XXX.............................. 8
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB6  ***********************************
Number of function block inputs used/remaining:               40/14
Number of signals used by logic mapping into function block:  40
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
wait_int_d            2       0     0   3     FB6_1         (b)     (b)
VA<8>                 4       0     0   1     FB6_2   135   I/O     O
VA<7>                 5       0     0   0     FB6_3   136   I/O     O
mappy/bankl<5>        3       0     0   2     FB6_4         (b)     (b)
VA<13>                5       0     0   0     FB6_5   137   I/O     O
VA<12>                5       0     0   0     FB6_6   138   I/O     O
mappy/bankl<4>        3       0     0   2     FB6_7         (b)     (b)
ramrwb                2       0     0   3     FB6_8   139   I/O     O
mappy/bankl<3>        3       0     0   2     FB6_9         (b)     (b)
mappy/bankl<2>        3       0     0   2     FB6_10  140   I/O     (b)
mappy/bankl<1>        3       0     0   2     FB6_11        (b)     (b)
mappy/bankl<0>        3       0     0   2     FB6_12        (b)     (b)
lowbank<3>            3       0     0   2     FB6_13        (b)     (b)
lowbank<1>            3       0     0   2     FB6_14  142   I/O     I
lowbank<0>            3       0     0   2     FB6_15  143   GSR/I/O GSR/I
lockb0                3       0     0   2     FB6_16        (b)     (b)
is8296                3       0     0   2     FB6_17        (b)     (b)
do_cpu                3       0     0   2     FB6_18        (b)     (b)

Signals Used by Logic in Function Block
  1: D<5>.PIN          15: ipl_cnt<11>                         28: viccy/charhold<3> 
  2: D<4>.PIN          16: is8296                              29: viccy/charhold<4> 
  3: D<3>.PIN          17: is_cpu                              30: viccy/chr_fetch 
  4: D<2>.PIN          18: is_vid_out                          31: viccy/vid_addr<12> 
  5: D<1>.PIN          19: lockb0                              32: viccy/vid_addr<13> 
  6: D<0>.PIN          20: lowbank<0>                          33: viccy/vid_addr<7> 
  7: A<12>             21: lowbank<1>                          34: viccy/vid_addr<8> 
  8: A<13>             22: lowbank<3>                          35: viccy/vpage<6> 
  9: A<7>              23: m_vramsel_out/m_vramsel_out_D2      36: vidblock<1> 
 10: A<8>              24: mappy/screenwin/mappy/screenwin_D2  37: vidblock<2> 
 11: dot2clk           25: memclk_d                            38: vidblock_or0000/vidblock_or0000_D2 
 12: e                 26: phi2                                39: vis_hires_in 
 13: graphic           27: rwb                                 40: wp_romPET_or0000/wp_romPET_or0000_D2 
 14: ipl              

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
wait_int_d           ..........X..X..X................................. 3
VA<8>                .........X...X...X..........XX...X....X........... 7
VA<7>                ........X....XX..X.........X.X..X.....X........... 8
mappy/bankl<5>       X..........X......X......X........................ 4
VA<13>               .......X.....X...X.....X.....X.X..X.X.X........... 9
VA<12>               ......X.....XX...X.....X.....XX....X..X........... 9
mappy/bankl<4>       .X.........X......X......X........................ 4
ramrwb               ..........X..X...X....X...X....................... 5
mappy/bankl<3>       ..X........X......X......X........................ 4
mappy/bankl<2>       ...X.......X......X......X........................ 4
mappy/bankl<1>       ....X......X......X......X........................ 4
mappy/bankl<0>       .....X.....X......X......X........................ 4
lowbank<3>           ..X..................X...X...........X............ 4
lowbank<1>           ....X...............X....X...........X............ 4
lowbank<0>           .....X.............X.....X...........X............ 4
lockb0               .....X............X......X.............X.......... 4
is8296               ..X............X.........X.............X.......... 4
do_cpu               .............X..XX....X.X......................... 5
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB7  ***********************************
Number of function block inputs used/remaining:               45/9
Number of signals used by logic mapping into function block:  45
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/slot_cnt<0>     2       0   /\3   0     FB7_1         (b)     (b)
viccy/last_slot_of_line
                      2       0     0   3     FB7_2         (b)     (b)
dclk                  2       0     0   3     FB7_3   45    I/O     O
viccy/slot_cnt<6>     3       0     0   2     FB7_4         (b)     (b)
pxl                   2       0     0   3     FB7_5   46    I/O     O
viccy/slot_cnt<5>     3       0     0   2     FB7_6         (b)     (b)
viccy/slot_cnt<4>     3       0     0   2     FB7_7         (b)     (b)
viccy/slot_cnt<3>     3       0     0   2     FB7_8         (b)     (b)
viccy/slot_cnt<2>     3       0     0   2     FB7_9         (b)     (b)
viccy/slot_cnt<1>     3       0     0   2     FB7_10        (b)     (b)
viccy/last_vis_slot_of_line
                      3       0     0   2     FB7_11        (b)     (b)
hsync                 4       0   \/1   0     FB7_12  48    I/O     O
viccy/h_enable        3       1<- \/3   0     FB7_13        (b)     (b)
viccy/vid_addr<8>     6       3<- \/2   0     FB7_14        (b)     (b)
vsync                 7       2<-   0   0     FB7_15  49    I/O     O
viccy/vid_addr<7>     6       1<-   0   0     FB7_16        (b)     (b)
viccy/vid_addr<6>     6       2<- /\1   0     FB7_17        (b)     (b)
viccy/vid_addr<5>     6       3<- /\2   0     FB7_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/clk_cnt_0_0           16: viccy/rline_cnt<1>      31: viccy/slot_cnt<5> 
  2: dclk                         17: viccy/rline_cnt<2>      32: viccy/slot_cnt<6> 
  3: dena                         18: viccy/rline_cnt<3>      33: viccy/vid_addr<0> 
  4: hsync                        19: viccy/rline_cnt<4>      34: viccy/vid_addr<1> 
  5: movesync                     20: viccy/rline_cnt<5>      35: viccy/vid_addr<2> 
  6: nres                         21: viccy/rline_cnt<6>      36: viccy/vid_addr<3> 
  7: slotclk                      22: viccy/rline_cnt<7>      37: viccy/vid_addr<4> 
  8: viccy/h_enable               23: viccy/rline_cnt<8>      38: viccy/vid_addr<5> 
  9: viccy/in_slot                24: viccy/rline_cnt<9>      39: viccy/vid_addr<6> 
 10: viccy/is_80                  25: viccy/rows_per_char<3>  40: viccy/vid_addr<7> 
 11: viccy/last_line_of_screen    26: viccy/slot_cnt<0>       41: viccy/vid_addr<8> 
 12: viccy/last_slot_of_line      27: viccy/slot_cnt<1>       42: viccy/vid_addr_hold<5> 
 13: viccy/last_vis_slot_of_line  28: viccy/slot_cnt<2>       43: viccy/vid_addr_hold<6> 
 14: viccy/pxlhold<7>             29: viccy/slot_cnt<3>       44: viccy/vid_addr_hold<7> 
 15: viccy/rline_cnt<0>           30: viccy/slot_cnt<4>       45: viccy/vid_addr_hold<8> 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/slot_cnt<0>    ......X....X.............X........................ 3
viccy/last_slot_of_line 
                     ......X..................XXXXXXX.................. 8
dclk                 X....X............................................ 2
viccy/slot_cnt<6>    ......X....X.............XXXXXXX.................. 9
pxl                  .XX..........X.................................... 3
viccy/slot_cnt<5>    ......X....X.............XXXXXX................... 8
viccy/slot_cnt<4>    ......X....X.............XXXXX.................... 7
viccy/slot_cnt<3>    ......X....X.............XXXX..................... 6
viccy/slot_cnt<2>    ......X....X.............XXX...................... 5
viccy/slot_cnt<1>    ......X....X.............XX....................... 4
viccy/last_vis_slot_of_line 
                     ......X.....X............XXXXXXX.................. 9
hsync                ......X..................XXXXXXX.................. 8
viccy/h_enable       ......XX.................XXXXXXX.................. 9
viccy/vid_addr<8>    ......X.XXXX....................XXXXXXXXX...X..... 15
vsync                ...XXX........XXXXXXXXXXX......................... 14
viccy/vid_addr<7>    ......X.XXXX....................XXXXXXXX...X...... 14
viccy/vid_addr<6>    ......X.XXXX....................XXXXXXX...X....... 13
viccy/vid_addr<5>    ......X.XXXX....................XXXXXX...X........ 12
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB8  ***********************************
Number of function block inputs used/remaining:               49/5
Number of signals used by logic mapping into function block:  49
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2
                      1       0   /\3   1     FB8_1         (b)     (b)
VA<4>                 5       0     0   0     FB8_2   130   I/O     O
VA<5>                 5       0     0   0     FB8_3   131   I/O     O
viccy/vid_addr_hold<9>
                      4       0     0   1     FB8_4         (b)     (b)
VA<9>                 4       0     0   1     FB8_5   132   I/O     O
viccy/vid_addr_hold<4>
                      4       0     0   1     FB8_6         (b)     (b)
viccy/vid_addr_hold<3>
                      4       0     0   1     FB8_7         (b)     (b)
VA<6>                 5       0     0   0     FB8_8   133   I/O     O
viccy/vid_addr_hold<2>
                      4       0   \/1   0     FB8_9         (b)     (b)
VA<11>                6       1<-   0   0     FB8_10  134   I/O     O
viccy/vid_addr_hold<1>
                      4       0     0   1     FB8_11        (b)     (b)
viccy/vid_addr_hold<0>
                      4       0     0   1     FB8_12        (b)     (b)
viccy/vid_addr_hold<11>
                      5       0     0   0     FB8_13        (b)     (b)
viccy/vid_addr_hold<10>
                      5       0     0   0     FB8_14        (b)     (b)
viccy/vid_addr<0>     5       0     0   0     FB8_15        (b)     (b)
viccy/vid_addr<9>     6       1<-   0   0     FB8_16        (b)     (b)
viccy/vid_addr<11>    6       2<- /\1   0     FB8_17        (b)     (b)
viccy/vid_addr<10>    6       3<- /\2   0     FB8_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A<11>                                                                               18: viccy/charhold<7>            34: viccy/vid_addr<6> 
  2: A<4>                                                                                19: viccy/chr_fetch              35: viccy/vid_addr<7> 
  3: A<5>                                                                                20: viccy/in_slot                36: viccy/vid_addr<8> 
  4: A<6>                                                                                21: viccy/is_80                  37: viccy/vid_addr<9> 
  5: A<9>                                                                                22: viccy/last_line_of_char      38: viccy/vid_addr_hold<0> 
  6: ipl                                                                                 23: viccy/last_line_of_screen    39: viccy/vid_addr_hold<10> 
  7: ipl_cnt<10>                                                                         24: viccy/last_slot_of_line      40: viccy/vid_addr_hold<11> 
  8: ipl_cnt<8>                                                                          25: viccy/last_vis_slot_of_line  41: viccy/vid_addr_hold<1> 
  9: ipl_cnt<9>                                                                          26: viccy/vid_addr<0>            42: viccy/vid_addr_hold<2> 
 10: is_vid_out                                                                          27: viccy/vid_addr<10>           43: viccy/vid_addr_hold<3> 
 11: mappy/screenwin/mappy/screenwin_D2                                                  28: viccy/vid_addr<11>           44: viccy/vid_addr_hold<4> 
 12: slotclk                                                                             29: viccy/vid_addr<1>            45: viccy/vid_addr_hold<9> 
 13: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  30: viccy/vid_addr<2>            46: viccy/vpage<2> 
 14: viccy/charhold<0>                                                                   31: viccy/vid_addr<3>            47: viccy/vpage<3> 
 15: viccy/charhold<1>                                                                   32: viccy/vid_addr<4>            48: vidblock<0> 
 16: viccy/charhold<2>                                                                   33: viccy/vid_addr<5>            49: vis_hires_in 
 17: viccy/charhold<5>                                                                  

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 
                     .........................X..XXXXXXXX.............. 9
VA<4>                .X...X.X.X...X....X............X................X. 8
VA<5>                ..X..X..XX....X...X.............X...............X. 8
viccy/vid_addr_hold<9> 
                     ...........X.........XX.X...........X.......X..... 6
VA<9>                ....XX...X......X.X.................X...........X. 7
viccy/vid_addr_hold<4> 
                     ...........X.........XX.X......X...........X...... 6
viccy/vid_addr_hold<3> 
                     ...........X.........XX.X.....X...........X....... 6
VA<6>                ...X.XX..X.....X..X..............X..............X. 8
viccy/vid_addr_hold<2> 
                     ...........X.........XX.X....X...........X........ 6
VA<11>               X....X...XX......XX........X...................XX. 9
viccy/vid_addr_hold<1> 
                     ...........X.........XX.X...X...........X......... 6
viccy/vid_addr_hold<0> 
                     ...........X.........XX.XX...........X............ 6
viccy/vid_addr_hold<11> 
                     ...........X.........XX.X..X...........X......X... 7
viccy/vid_addr_hold<10> 
                     ...........X.........XX.X.X...........X......X.... 7
viccy/vid_addr<0>    ...........X.......XX.XX.X...........X............ 7
viccy/vid_addr<9>    ...........XX......XX.XX............X.......X..... 8
viccy/vid_addr<11>   ...........XX......XX.XX..XX........X..X.......... 10
viccy/vid_addr<10>   ...........XX......XX.XX..X.........X.X........... 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB9  ***********************************
Number of function block inputs used/remaining:               38/16
Number of signals used by logic mapping into function block:  38
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB9_1         (b)     (b)
spi_clk              13       8<-   0   0     FB9_2   50    I/O     O
spi_comp/serin_d     14      10<- /\1   0     FB9_3   51    I/O     (b)
(unused)              0       0   /\5   0     FB9_4         (b)     (b)
nflash                2       2<- /\5   0     FB9_5   52    I/O     O
spi_comp/run_sr       5       2<- /\2   0     FB9_6   53    I/O     (b)
spi_outx              5       2<- /\2   0     FB9_7         (b)     (b)
spi_out               2       0   /\2   1     FB9_8   54    I/O     O
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2
                      3       0     0   2     FB9_9         (b)     (b)
spi_comp/stat<0>      3       0     0   2     FB9_10        (b)     (b)
spi_comp/stat<1>      3       0     0   2     FB9_11  56    I/O     (b)
phi2                  2       0     0   3     FB9_12  57    I/O     I/O
spi_comp/stat<2>      3       0     0   2     FB9_13        (b)     (b)
VD<6>                 4       0     0   1     FB9_14  58    I/O     I/O
spi_comp/stat<3>      3       0     0   2     FB9_15        (b)     (b)
spi_comp/txd<6>       3       0     0   2     FB9_16        (b)     (b)
VD<7>                 5       0     0   0     FB9_17  59    I/O     I/O
spi_comp/txd<7>       3       0   \/2   0     FB9_18        (b)     (b)

Signals Used by Logic in Function Block
  1: phi2.PIN          14: ramrwb                                          27: spi_comp/stat<2> 
  2: D<7>.PIN          15: rwb                                             28: spi_comp/stat<3> 
  3: D<6>.PIN          16: spi_comp/N01/spi_comp/N01_D2                    29: spi_comp/txd<7> 
  4: A<0>              17: spi_comp/cpha                                   30: spi_comp/txd_valid 
  5: A<1>              18: spi_comp/cpol                                   31: spi_cs/spi_cs_D2 
  6: do_cpu            19: spi_comp/run_sr                                 32: spi_in1 
  7: dot2clk           20: spi_comp/run_sr_d                               33: spi_in3 
  8: ipl               21: spi_comp/serin_d                                34: spi_outx 
  9: ipl_cnt<0>        22: spi_comp/sr<6>                                  35: spi_outx/spi_outx_CLKF 
 10: ipl_out           23: spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2  36: spi_sel<0> 
 11: ipl_state         24: spi_comp/start_rx                               37: spi_sel<1> 
 12: nres              25: spi_comp/stat<0>                                38: spi_sel<2> 
 13: phi2              26: spi_comp/stat<1>                               

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_clk              .......XX.X.....XXX.....X............... 7
spi_comp/serin_d     ..........XX.......XX..XX....X.XX.XXXX.. 13
nflash               .......X...X.......................XXX.. 5
spi_comp/run_sr      ..........X.......XX...XXXXX.X....X..... 10
spi_outx             ...................X.XX.....XX...XX..... 7
spi_out              .......X.X.......................X...... 3
spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2 
                     ..........XX.......X...XX....X.......... 6
spi_comp/stat<0>     ..........X........X...X.....X....X..... 5
spi_comp/stat<1>     ..........X........X...XX....X....X..... 6
phi2                 X....XX.....X........................... 4
spi_comp/stat<2>     ..........X........X...XXX...X....X..... 7
VD<6>                ..XXX..X..X..XXX.....X.......XX......... 11
spi_comp/stat<3>     ..........X........X...XXXX..X....X..... 8
spi_comp/txd<6>      ..XXX.........X...............X......... 5
VD<7>                .X.XX..X..X..XXX..X..........XX..X...... 12
spi_comp/txd<7>      .X.XX.........X...............X......... 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB10 ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/last_line_of_char
                      7       2<-   0   0     FB10_1        (b)     (b)
viccy/rcline_cnt<0>   4       0   /\1   0     FB10_2  117   I/O     (b)
viccy/rcline_cnt<3>   5       0     0   0     FB10_3  118   I/O     I
viccy/rcline_cnt<2>   5       0     0   0     FB10_4        (b)     (b)
VA<0>                 5       0     0   0     FB10_5  119   I/O     O
VA<1>                 5       0     0   0     FB10_6  120   I/O     O
viccy/rcline_cnt<1>   5       0     0   0     FB10_7        (b)     (b)
VA<2>                 5       0     0   0     FB10_8  121   I/O     O
viccy/vid_addr<4>     6       1<-   0   0     FB10_9        (b)     (b)
VA<10>                4       0   /\1   0     FB10_10 124   I/O     O
VA<3>                 5       0     0   0     FB10_11 125   I/O     O
nvramsel              3       0   \/2   0     FB10_12 126   I/O     O
viccy/vid_addr<3>     6       2<- \/1   0     FB10_13       (b)     (b)
viccy/vid_addr<2>     6       1<-   0   0     FB10_14 128   I/O     (b)
(unused)              0       0   \/4   1     FB10_15       (b)     (b)
viccy/vid_addr<1>     6       4<- \/3   0     FB10_16       (b)     (b)
viccy/vid_addr<13>    6       3<- \/2   0     FB10_17 129   I/O     I
viccy/vid_addr<12>    6       2<- \/1   0     FB10_18       (b)     (b)

Signals Used by Logic in Function Block
  1: A<0>                                                                                17: viccy/charhold<6>          33: viccy/vid_addr<12> 
  2: A<10>                                                                               18: viccy/chr_fetch            34: viccy/vid_addr<13> 
  3: A<1>                                                                                19: viccy/in_slot              35: viccy/vid_addr<1> 
  4: A<2>                                                                                20: viccy/is_80                36: viccy/vid_addr<2> 
  5: A<3>                                                                                21: viccy/last_line_of_char    37: viccy/vid_addr<3> 
  6: dot2clk                                                                             22: viccy/last_line_of_screen  38: viccy/vid_addr<4> 
  7: hsync                                                                               23: viccy/last_slot_of_line    39: viccy/vid_addr<9> 
  8: ipl                                                                                 24: viccy/rcline_cnt<0>        40: viccy/vid_addr_hold<12> 
  9: ipl_cnt<4>                                                                          25: viccy/rcline_cnt<1>        41: viccy/vid_addr_hold<13> 
 10: ipl_cnt<5>                                                                          26: viccy/rcline_cnt<2>        42: viccy/vid_addr_hold<1> 
 11: ipl_cnt<6>                                                                          27: viccy/rcline_cnt<3>        43: viccy/vid_addr_hold<2> 
 12: ipl_cnt<7>                                                                          28: viccy/rline_cnt<0>         44: viccy/vid_addr_hold<3> 
 13: is_vid_out                                                                          29: viccy/rows_per_char<3>     45: viccy/vid_addr_hold<4> 
 14: m_vramsel_out/m_vramsel_out_D2                                                      30: viccy/vid_addr<0>          46: vis_double_in 
 15: slotclk                                                                             31: viccy/vid_addr<10>         47: vis_hires_in 
 16: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  32: viccy/vid_addr<11>         48: wait_int_d 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/last_line_of_char 
                     ......X................XXXXXX................XX... 9
viccy/rcline_cnt<0>  ......X.............XX.X...X.................X.... 6
viccy/rcline_cnt<3>  ......X.............XX.XXXXX.................X.... 9
viccy/rcline_cnt<2>  ......X.............XX.XXX.X.................X.... 8
VA<0>                X......XX...X....X.....X.....X................X... 8
VA<1>                ..X....X.X..X....X......X.........X...........X... 8
viccy/rcline_cnt<1>  ......X.............XX.XX..X.................X.... 7
VA<2>                ...X...X..X.X....X.......X.........X..........X... 8
viccy/vid_addr<4>    ..............X...XX.XX......X....XXXX......X..... 11
VA<10>               .X.....X....X...XX............X...............X... 7
VA<3>                ....X..X...XX....X........X.........X.........X... 8
nvramsel             .....X.X....XX.................................X.. 5
viccy/vid_addr<3>    ..............X...XX.XX......X....XXX......X...... 10
viccy/vid_addr<2>    ..............X...XX.XX......X....XX......X....... 9
viccy/vid_addr<1>    ..............X...XX.XX......X....X......X........ 8
viccy/vid_addr<13>   ..............XX..XX.XX.......XXXX....X.X......... 12
viccy/vid_addr<12>   ..............XX..XX.XX.......XXX.....XX.......... 11
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB11 ***********************************
Number of function block inputs used/remaining:               46/8
Number of signals used by logic mapping into function block:  46
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2
                      1       0     0   4     FB11_1        (b)     (b)
spi_outx/spi_outx_CLKF
                      3       0     0   2     FB11_2        (b)     (b)
spi_nsel5             1       0     0   4     FB11_3  60    I/O     O
ipl_cnt<9>            3       0     0   2     FB11_4        (b)     (b)
ipl_cnt<8>            3       0     0   2     FB11_5  61    I/O     (b)
ipl_cnt<6>            3       0     0   2     FB11_6        (b)     (b)
ipl_cnt<5>            3       0     0   2     FB11_7        (b)     (b)
ipl_cnt<4>            3       0     0   2     FB11_8        (b)     (b)
ipl_cnt<3>            3       0     0   2     FB11_9        (b)     (b)
ipl_cnt<2>            3       0     0   2     FB11_10 64    I/O     (b)
nsel4                 2       0     0   3     FB11_11 66    I/O     O
nsel2                 2       0     0   3     FB11_12 68    I/O     O
ipl_cnt<1>            3       0     0   2     FB11_13       (b)     (b)
nsel1                 2       0     0   3     FB11_14 69    I/O     O
ipl_cnt<11>           3       0     0   2     FB11_15       (b)     (b)
ipl_cnt<10>           3       0     0   2     FB11_16       (b)     (b)
ipl_next              4       0     0   1     FB11_17 70    I/O     I
ipl_out               5       0     0   0     FB11_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$398     17: ipl_cnt<0>                                                        32: ipl_state_d 
  2: A<10>             18: ipl_cnt<10>                                                       33: mappy/bankl<0> 
  3: A<11>             19: ipl_cnt<11>                                                       34: mappy/bankl<1> 
  4: A<12>             20: ipl_cnt<1>                                                        35: mappy/bankl<2> 
  5: A<13>             21: ipl_cnt<2>                                                        36: mappy/bankl<3> 
  6: A<14>             22: ipl_cnt<3>                                                        37: mappy/bankl<4> 
  7: A<15>             23: ipl_cnt<4>                                                        38: mappy/bankl<5> 
  8: A<4>              24: ipl_cnt<5>                                                        39: mappy/bankl<6> 
  9: A<5>              25: ipl_cnt<6>                                                        40: mappy/bankl<7> 
 10: A<6>              26: ipl_cnt<7>                                                        41: nres 
 11: A<7>              27: ipl_cnt<8>                                                        42: spi_sel<0> 
 12: A<8>              28: ipl_cnt<9>                                                        43: spi_sel<1> 
 13: A<9>              29: ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2  44: spi_sel<2> 
 14: dot2clk           30: ipl_next                                                          45: vda 
 15: dot4clk           31: ipl_state                                                         46: vpa 
 16: ipl              

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2 
                     ................X..XXXXXX......................... 7
spi_outx/spi_outx_CLKF 
                     .............XX..........................X.X...... 4
spi_nsel5            ........................................XXXX...... 4
ipl_cnt<9>           .............X.X.........XXXXX.X.................. 8
ipl_cnt<8>           .............X.X.........XX.XX.X.................. 7
ipl_cnt<6>           .............X.XX..XXXXXX....X.X.................. 11
ipl_cnt<5>           .............X.XX..XXXXX.....X.X.................. 10
ipl_cnt<4>           .............X.XX..XXXX......X.X.................. 9
ipl_cnt<3>           .............X.XX..XXX.......X.X.................. 8
ipl_cnt<2>           .............X.XX..XX........X.X.................. 7
nsel4                XXXXXXXXXXXXX...................XXXXXXXX....XX.... 23
nsel2                XXXXXXXXXXXXX...................XXXXXXXX....XX.... 23
ipl_cnt<1>           .............X.XX..X.........X.X.................. 6
nsel1                XXXXXXXXXXXXX...................XXXXXXXX....XX.... 23
ipl_cnt<11>          .............X.X.XX......XXXXX.X.................. 10
ipl_cnt<10>          .............X.X.X.......XXXXX.X.................. 9
ipl_next             .............X..XXXXXXXXXXXX..X.........X......... 15
ipl_out              .............X.XXXXXXXXXXXXX...X.................. 15
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB12 ***********************************
Number of function block inputs used/remaining:               42/12
Number of signals used by logic mapping into function block:  42
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
ipl                   2       0     0   3     FB12_1        (b)     (b)
VD<3>                 3       0     0   2     FB12_2  110   I/O     I/O
VD<2>                 4       0     0   1     FB12_3  111   I/O     I/O
viccy/vpage<5>        3       0     0   2     FB12_4        (b)     (b)
VD<4>                 4       0     0   1     FB12_5  112   I/O     I/O
viccy/vpage<4>        3       0     0   2     FB12_6        (b)     (b)
viccy/vpage<3>        3       0     0   2     FB12_7        (b)     (b)
VD<1>                 4       0     0   1     FB12_8  113   I/O     I/O
viccy/vpage<2>        3       0     0   2     FB12_9        (b)     (b)
VD<5>                 4       0     0   1     FB12_10 115   I/O     I/O
viccy/rows_per_char<3>
                      3       0     0   2     FB12_11       (b)     (b)
VD<0>                 4       0     0   1     FB12_12 116   I/O     I/O
viccy/crtc_reg<1>     3       0     0   2     FB12_13       (b)     (b)
viccy/crtc_reg<0>     3       0     0   2     FB12_14       (b)     (b)
spi_comp/txd<3>       3       0     0   2     FB12_15       (b)     (b)
ipl_state             3       0     0   2     FB12_16       (b)     (b)
ipl_cnt<7>            3       0     0   2     FB12_17       (b)     (b)
ipl_cnt<0>            3       0     0   2     FB12_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$442   15: ipl_cnt<7>                                                        29: spi_comp/sr<4> 
  2: $OpTx$FX_DC$481   16: ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2  30: spi_comp/sr<5> 
  3: D<5>.PIN          17: ipl_next                                                          31: spi_cs/spi_cs_D2 
  4: D<4>.PIN          18: ipl_state                                                         32: spi_sel<0> 
  5: D<3>.PIN          19: ipl_state_d                                                       33: spi_sel<1> 
  6: D<2>.PIN          20: ramrwb                                                            34: spi_sel<2> 
  7: D<1>.PIN          21: rwb                                                               35: viccy/crtc_reg<0> 
  8: D<0>.PIN          22: spi_comp/N01/spi_comp/N01_D2                                      36: viccy/crtc_reg<1> 
  9: A<0>              23: spi_comp/cpha                                                     37: viccy/rows_per_char<3> 
 10: A<1>              24: spi_comp/cpol                                                     38: viccy/vpage<2> 
 11: do_cpu            25: spi_comp/sr<0>                                                    39: viccy/vpage<3> 
 12: dot2clk           26: spi_comp/sr<1>                                                    40: viccy/vpage<4> 
 13: ipl               27: spi_comp/sr<2>                                                    41: viccy/vpage<5> 
 14: ipl_cnt<0>        28: spi_comp/sr<3>                                                    42: viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
ipl                  ...........XX...X.X............................... 4
VD<3>                ....X.......X......X.X.....X...................... 5
VD<2>                .....X..XX..X....X.XXX....X...X..X................ 11
viccy/vpage<5>       ..X.......XX............................XX........ 5
VD<4>                ...X....XX..X....X.XXXX.....X.X................... 11
viccy/vpage<4>       ...X......XX...........................X.X........ 5
viccy/vpage<3>       ....X.....XX..........................X..X........ 5
VD<1>                ......X.XX..X....X.XXX...X....X.X................. 11
viccy/vpage<2>       .....X....XX.........................X...X........ 5
VD<5>                ..X.....XX..X....X.XXX.X.....XX................... 11
viccy/rows_per_char<3> 
                     .X..X.....XX........................X............. 5
VD<0>                .......XXX..X....X.XXX..X.....XX.................. 11
viccy/crtc_reg<1>    X...XXXX...X.......................X.............. 7
viccy/crtc_reg<0>    X...XXXX...X......................X............... 7
spi_comp/txd<3>      ....X...XX..........X.........X................... 5
ipl_state            ...........XX...X.X............................... 4
ipl_cnt<7>           ...........XX.XXX.X............................... 6
ipl_cnt<0>           ...........XXX..X.X............................... 5
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB13 ***********************************
Number of function block inputs used/remaining:               45/9
Number of signals used by logic mapping into function block:  45
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mappy/screenwin/mappy/screenwin_D2
                      2       1<- \/4   0     FB13_1        (b)     (b)
FA<15>               11       6<-   0   0     FB13_2  71    I/O     O
spi_sel<2>            3       0   /\2   0     FB13_3        (b)     (b)
spi_sel<1>            3       0     0   2     FB13_4        (b)     (b)
spi_sel<0>            3       0     0   2     FB13_5        (b)     (b)
spi_comp/txd_valid    3       0     0   2     FB13_6        (b)     (b)
spi_comp/txd<5>       3       0     0   2     FB13_7        (b)     (b)
spi_comp/txd<4>       3       0     0   2     FB13_8  74    I/O     I
spi_comp/txd<2>       3       0     0   2     FB13_9        (b)     (b)
spi_comp/txd<1>       3       0     0   2     FB13_10       (b)     (b)
spi_comp/txd<0>       3       0     0   2     FB13_11 75    I/O     I
spi_comp/start_rx     3       0     0   2     FB13_12       (b)     (b)
spi_comp/cpol         3       0     0   2     FB13_13       (b)     (b)
spi_comp/cpha         3       0     0   2     FB13_14 76    I/O     (b)
D<7>                  5       0     0   0     FB13_15 77    I/O     I/O
spi_comp/N01/spi_comp/N01_D2
                      3       0     0   2     FB13_16       (b)     (b)
D<6>                  4       0     0   1     FB13_17 78    I/O     I/O
$OpTx$INV$398         3       0   \/1   1     FB13_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$398         16: A<15>                           31: mappy/cfg_mp<2> 
  2: D_or0000/D_or0000_D2  17: A<1>                            32: mappy/cfg_mp<3> 
  3: D<5>.PIN              18: A<8>                            33: mappy/cfg_mp<5> 
  4: D<4>.PIN              19: A<9>                            34: mappy/cfg_mp<6> 
  5: D<2>.PIN              20: ipl_state                       35: mappy/cfg_mp<7> 
  6: D<1>.PIN              21: lowbank<0>                      36: rwb 
  7: D<0>.PIN              22: m_vramsel_out/m_vramsel_out_D2  37: screenb0 
  8: VD<7>.PIN             23: mappy/bankl<0>                  38: spi_comp/N01/spi_comp/N01_D2 
  9: VD<6>.PIN             24: mappy/bankl<1>                  39: spi_comp/run_sr 
 10: A<0>                  25: mappy/bankl<2>                  40: spi_comp/sr<6> 
 11: A<10>                 26: mappy/bankl<3>                  41: spi_comp/start_rx/spi_comp/start_rx_RSTF 
 12: A<11>                 27: mappy/bankl<4>                  42: spi_comp/txd_valid 
 13: A<12>                 28: mappy/bankl<5>                  43: spi_comp/txd_valid/spi_comp/txd_valid_RSTF 
 14: A<13>                 29: mappy/bankl<6>                  44: spi_cs/spi_cs_D2 
 15: A<14>                 30: mappy/bankl<7>                  45: spi_outx 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
mappy/screenwin/mappy/screenwin_D2 
                     ............XXXX......XXXXXXXX..X.X.X............. 15
FA<15>               X.............XX....X.XXXXXXXXXX.................. 14
spi_sel<2>           ....X....X......X..................X.......X...... 5
spi_sel<1>           .....X...X......X..................X.......X...... 5
spi_sel<0>           ......X..X......X..................X.......X...... 5
spi_comp/txd_valid   .........X......X..................X......XX...... 5
spi_comp/txd<5>      ..X......X......X..................X.......X...... 5
spi_comp/txd<4>      ...X.....X......X..................X.......X...... 5
spi_comp/txd<2>      ....X....X......X..................X.......X...... 5
spi_comp/txd<1>      .....X...X......X..................X.......X...... 5
spi_comp/txd<0>      ......X..X......X..................X.......X...... 5
spi_comp/start_rx    .........X......X..................X....X..X...... 5
spi_comp/cpol        ..X......X......X..................X.......X...... 5
spi_comp/cpha        ...X.....X......X..................X.......X...... 5
D<7>                 .X.....X.X......X..X.X.............X.XX..X.XX..... 12
spi_comp/N01/spi_comp/N01_D2 
                     .........X......X..X...............X.......X...... 5
D<6>                 .X......XX......X..X.X.............X.X.X.X.X...... 11
$OpTx$INV$398        ..........XXXXXX.XX.............XXX............... 11
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB14 ***********************************
Number of function block inputs used/remaining:               39/15
Number of signals used by logic mapping into function block:  39
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
wp_romPET             3       0     0   2     FB14_1        (b)     (b)
wp_romB               3       0     0   2     FB14_2        (b)     (b)
vidblock<2>           3       0     0   2     FB14_3  100   I/O     I
vidblock<1>           3       0     0   2     FB14_4        (b)     (b)
mappy/cfg_mp<7>       3       0     0   2     FB14_5  101   I/O     I
mappy/cfg_mp<6>       3       0     0   2     FB14_6  102   I/O     I
mappy/cfg_mp<5>       3       0     0   2     FB14_7        (b)     (b)
mappy/cfg_mp<3>       3       0     0   2     FB14_8  103   I/O     I
mappy/cfg_mp<2>       3       0     0   2     FB14_9        (b)     (b)
mappy/cfg_mp<1>       3       0     0   2     FB14_10 104   I/O     I
FA<16>                3       0     0   2     FB14_11 105   I/O     O
mappy/cfg_mp<0>       3       0     0   2     FB14_12       (b)     (b)
mappy/bankl<7>        3       0     0   2     FB14_13       (b)     (b)
FA<17>                2       0     0   3     FB14_14 106   I/O     O
FA<18>                2       0     0   3     FB14_15 107   I/O     O
mappy/bankl<6>        3       0     0   2     FB14_16       (b)     (b)
lowbank<2>            3       0     0   2     FB14_17       (b)     (b)
boot                  3       0     0   2     FB14_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$398     14: lowbank<2>        27: mappy/cfg_mp<3> 
  2: D<7>.PIN          15: lowbank<3>        28: mappy/cfg_mp<5> 
  3: D<6>.PIN          16: mappy/bankl<0>    29: mappy/cfg_mp<6> 
  4: D<5>.PIN          17: mappy/bankl<1>    30: mappy/cfg_mp<7> 
  5: D<3>.PIN          18: mappy/bankl<2>    31: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
  6: D<2>.PIN          19: mappy/bankl<3>    32: nres 
  7: D<1>.PIN          20: mappy/bankl<4>    33: phi2 
  8: D<0>.PIN          21: mappy/bankl<5>    34: vidblock<1> 
  9: boot              22: mappy/bankl<6>    35: vidblock<2> 
 10: A<15>             23: mappy/bankl<7>    36: vidblock_or0000/vidblock_or0000_D2 
 11: e                 24: mappy/cfg_mp<0>   37: wp_romB 
 12: lockb0            25: mappy/cfg_mp<1>   38: wp_romPET 
 13: lowbank<1>        26: mappy/cfg_mp<2>   39: wp_romPET_or0000/wp_romPET_or0000_D2 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
wp_romPET            .X..............................X....XX. 4
wp_romB              ..X............................XX...X.X. 5
vidblock<2>          ..X.............................X.XX.... 4
vidblock<1>          ...X............................XX.X.... 4
mappy/cfg_mp<7>      .X...........................XX.X....... 4
mappy/cfg_mp<6>      ..X.........................X.X.X....... 4
mappy/cfg_mp<5>      ...X.......................X..X.X....... 4
mappy/cfg_mp<3>      ....X.....................X...X.X....... 4
mappy/cfg_mp<2>      .....X...................X....X.X....... 4
mappy/cfg_mp<1>      ......X.................X.....X.X....... 4
FA<16>               X........X..X..XXXXXXXX................. 11
mappy/cfg_mp<0>      .......X...............X......X.X....... 4
mappy/bankl<7>       .X........XX....................X....... 4
FA<17>               .........X...X.XXXXXXXX................. 10
FA<18>               .........X....XXXXXXXXX................. 10
mappy/bankl<6>       ..X.......XX....................X....... 4
lowbank<2>           .....X.......X..................X..X.... 4
boot                 ......X.X.......................X.....X. 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB15 ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/pxlhold<1>      8       3<-   0   0     FB15_1        (b)     (b)
D<5>                  4       2<- /\3   0     FB15_2  79    I/O     I/O
D<4>                  4       1<- /\2   0     FB15_3  80    I/O     I/O
D_or0000/D_or0000_D2
                      2       0   /\1   2     FB15_4        (b)     (b)
spi_comp/sr<6>        5       0     0   0     FB15_5        (b)     (b)
spi_comp/sr<5>        5       0     0   0     FB15_6        (b)     (b)
spi_comp/sr<4>        5       0     0   0     FB15_7        (b)     (b)
D<3>                  3       0     0   2     FB15_8  81    I/O     I/O
spi_comp/sr<3>        5       0     0   0     FB15_9        (b)     (b)
D<2>                  4       0   \/1   0     FB15_10 82    I/O     I/O
D<1>                  4       1<- \/2   0     FB15_11 83    I/O     I/O
spi_comp/sr<2>        5       2<- \/2   0     FB15_12 85    I/O     I
spi_comp/sr<1>        5       2<- \/2   0     FB15_13       (b)     (b)
D<0>                  4       2<- \/3   0     FB15_14 86    I/O     I/O
spi_comp/sr<0>        5       3<- \/3   0     FB15_15 87    I/O     I
viccy/pxlhold<3>      8       3<-   0   0     FB15_16       (b)     (b)
viccy/pxlhold<2>      8       3<-   0   0     FB15_17 88    I/O     I
spi_comp/ack_txd      2       0   /\3   0     FB15_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D_or0000/D_or0000_D2            17: spi_comp/cpol                                   33: spi_comp/txd<5> 
  2: VD<5>.PIN                       18: spi_comp/run_sr_d                               34: spi_comp/txd<6> 
  3: VD<4>.PIN                       19: spi_comp/serin_d                                35: spi_comp/txd_valid 
  4: VD<3>.PIN                       20: spi_comp/sr<0>                                  36: spi_cs/spi_cs_D2 
  5: VD<2>.PIN                       21: spi_comp/sr<1>                                  37: spi_outx/spi_outx_CLKF 
  6: VD<1>.PIN                       22: spi_comp/sr<2>                                  38: spi_sel<0> 
  7: VD<0>.PIN                       23: spi_comp/sr<3>                                  39: spi_sel<1> 
  8: A<0>                            24: spi_comp/sr<4>                                  40: spi_sel<2> 
  9: A<1>                            25: spi_comp/sr<5>                                  41: viccy/dot2clk_d 
 10: dclk                            26: spi_comp/sr<6>                                  42: viccy/is_80 
 11: ipl_state                       27: spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2  43: viccy/pxl_fetch 
 12: m_vramsel_out/m_vramsel_out_D2  28: spi_comp/txd<0>                                 44: viccy/pxlhold<0> 
 13: phi2                            29: spi_comp/txd<1>                                 45: viccy/pxlhold<1> 
 14: rwb                             30: spi_comp/txd<2>                                 46: viccy/pxlhold<2> 
 15: spi_comp/N01/spi_comp/N01_D2    31: spi_comp/txd<3>                                 47: viccy/pxlhold<3> 
 16: spi_comp/cpha                   32: spi_comp/txd<4>                                 48: viccy/sr_load_d 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/pxlhold<1>     .....X...X..............................XXXXX..X.. 8
D<5>                 XX.....XX.XX.XX.X.......X..........X.............. 11
D<4>                 X.X....XX.XX.XXX.......X...........X.............. 11
D_or0000/D_or0000_D2 
                     ...........XXX.....................X.............. 4
spi_comp/sr<6>       .................X......XXX......XX.X............. 7
spi_comp/sr<5>       .................X.....XX.X.....X.X.X............. 7
spi_comp/sr<4>       .................X....XX..X....X..X.X............. 7
D<3>                 X..X.......X..X.......X........................... 5
spi_comp/sr<3>       .................X...XX...X...X...X.X............. 7
D<2>                 X...X..XX.XX.XX......X.............X...X.......... 11
D<1>                 X....X.XX.XX.XX.....X..............X..X........... 11
spi_comp/sr<2>       .................X..XX....X..X....X.X............. 7
spi_comp/sr<1>       .................X.XX.....X.X.....X.X............. 7
D<0>                 X.....XXX.XX.XX....X...............X.X............ 11
spi_comp/sr<0>       .................XXX......XX......X.X............. 7
viccy/pxlhold<3>     ...X.....X..............................XXX..XXX.. 8
viccy/pxlhold<2>     ....X....X..............................XXX.XX.X.. 8
spi_comp/ack_txd     .................X................X.X............. 3
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB16 ***********************************
Number of function block inputs used/remaining:               28/26
Number of signals used by logic mapping into function block:  28
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB16_1        (b)     
viccy/sr_load_d       1       0     0   4     FB16_2  91    I/O     I
spi_comp/txd_valid/spi_comp/txd_valid_RSTF
                      1       0     0   4     FB16_3  92    I/O     I
spi_comp/start_rx/spi_comp/start_rx_RSTF
                      1       0     0   4     FB16_4        (b)     (b)
is_vid_out            1       0     0   4     FB16_5  93    I/O     I
viccy/in_slot         2       0     0   3     FB16_6  94    I/O     I
viccy/charhold<7>     2       0     0   3     FB16_7        (b)     (b)
viccy/charhold<6>     2       0     0   3     FB16_8  95    I/O     I
viccy/charhold<5>     2       0     0   3     FB16_9        (b)     (b)
viccy/charhold<4>     2       0     0   3     FB16_10 96    I/O     I
viccy/charhold<3>     2       0     0   3     FB16_11 97    I/O     I
viccy/charhold<2>     2       0     0   3     FB16_12 98    I/O     I
viccy/charhold<1>     2       0     0   3     FB16_13       (b)     (b)
viccy/charhold<0>     2       0     0   3     FB16_14       (b)     (b)
spi_comp/run_sr_d     2       0     0   3     FB16_15       (b)     (b)
spi_comp/ack_rxtx     2       0     0   3     FB16_16       (b)     (b)
wp_romA               3       0     0   2     FB16_17       (b)     (b)
wp_rom9               3       0     0   2     FB16_18       (b)     (b)

Signals Used by Logic in Function Block
  1: D<5>.PIN          11: nres               20: spi_comp/stat<3> 
  2: D<4>.PIN          12: phi2               21: spi_outx/spi_outx_CLKF 
  3: VD<7>.PIN         13: slotclk            22: sr_load 
  4: VD<6>.PIN         14: spi_comp/ack_rxtx  23: viccy/chr_fetch 
  5: VD<5>.PIN         15: spi_comp/ack_txd   24: viccy/pxl_fetch 
  6: VD<4>.PIN         16: spi_comp/run_sr    25: viccy/slot_cnt<0> 
  7: VD<3>.PIN         17: spi_comp/stat<0>   26: wp_rom9 
  8: VD<2>.PIN         18: spi_comp/stat<1>   27: wp_romA 
  9: VD<1>.PIN         19: spi_comp/stat<2>   28: wp_romPET_or0000/wp_romPET_or0000_D2 
 10: VD<0>.PIN        

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/sr_load_d      .....................X.................. 1
spi_comp/txd_valid/spi_comp/txd_valid_RSTF 
                     ..........X...X......................... 2
spi_comp/start_rx/spi_comp/start_rx_RSTF 
                     ..........X..X.......................... 2
is_vid_out           ......................XX................ 2
viccy/in_slot        ............X...........X............... 2
viccy/charhold<7>    ..X...................X................. 2
viccy/charhold<6>    ...X..................X................. 2
viccy/charhold<5>    ....X.................X................. 2
viccy/charhold<4>    .....X................X................. 2
viccy/charhold<3>    ......X...............X................. 2
viccy/charhold<2>    .......X..............X................. 2
viccy/charhold<1>    ........X.............X................. 2
viccy/charhold<0>    .........X............X................. 2
spi_comp/run_sr_d    ...............X....X................... 2
spi_comp/ack_rxtx    ................XXXXX................... 5
wp_romA              X..........X..............XX............ 4
wp_rom9              .X.........X.............X.X............ 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$442 <= ((NOT rwb AND NOT A(0) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND 
	NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	A(11) AND NOT A(5) AND A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND 
	NOT A(10) AND vpa AND $OpTx$INV$398)
	OR (NOT rwb AND NOT A(0) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND 
	NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	A(11) AND NOT A(5) AND A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND 
	NOT A(10) AND vda AND $OpTx$INV$398));


$OpTx$FX_DC$481 <= ((NOT rwb AND A(0) AND viccy/crtc_reg(0) AND 
	NOT viccy/crtc_reg(1) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND A(0) AND viccy/crtc_reg(0) AND 
	NOT viccy/crtc_reg(1) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vda AND 
	$OpTx$INV$398));


$OpTx$INV$398 <= ((NOT mappy/cfg_mp(7))
	OR (mappy/cfg_mp(5) AND A(15) AND NOT A(14) AND NOT A(13) AND 
	NOT A(12))
	OR (mappy/cfg_mp(6) AND A(15) AND A(14) AND A(13) AND 
	NOT A(12) AND A(11) AND NOT A(9) AND NOT A(8) AND NOT A(10)));


D_I(0) <= ((spi_comp/sr(0) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(0) AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2)
	OR (VD(0).PIN AND NOT m_vramsel_out/m_vramsel_out_D2));
D(0) <= D_I(0) when D_OE(0) = '1' else 'Z';
D_OE(0) <= D_or0000/D_or0000_D2;


D_I(1) <= ((NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_sel(1) AND 
	spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2)
	OR (VD(1).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(1) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(1) <= D_I(1) when D_OE(1) = '1' else 'Z';
D_OE(1) <= D_or0000/D_or0000_D2;


D_I(2) <= ((VD(2).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(2) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(2) AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2));
D(2) <= D_I(2) when D_OE(2) = '1' else 'Z';
D_OE(2) <= D_or0000/D_or0000_D2;


D_I(3) <= ((VD(3).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(3) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(3) <= D_I(3) when D_OE(3) = '1' else 'Z';
D_OE(3) <= D_or0000/D_or0000_D2;


D_I(4) <= ((NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_comp/cpha AND 
	spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2)
	OR (VD(4).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(4) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(4) <= D_I(4) when D_OE(4) = '1' else 'Z';
D_OE(4) <= D_or0000/D_or0000_D2;


D_I(5) <= ((spi_comp/sr(5) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_comp/cpol AND 
	spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2)
	OR (VD(5).PIN AND NOT m_vramsel_out/m_vramsel_out_D2));
D(5) <= D_I(5) when D_OE(5) = '1' else 'Z';
D_OE(5) <= D_or0000/D_or0000_D2;


D_I(6) <= ((VD(6).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_comp/sr(6) AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_comp/txd_valid AND spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2));
D(6) <= D_I(6) when D_OE(6) = '1' else 'Z';
D_OE(6) <= D_or0000/D_or0000_D2;


D_I(7) <= ((VD(7).PIN AND NOT m_vramsel_out/m_vramsel_out_D2)
	OR (spi_outx AND m_vramsel_out/m_vramsel_out_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_comp/run_sr AND spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_comp/txd_valid AND spi_cs/spi_cs_D2 AND m_vramsel_out/m_vramsel_out_D2));
D(7) <= D_I(7) when D_OE(7) = '1' else 'Z';
D_OE(7) <= D_or0000/D_or0000_D2;


D_or0000/D_or0000_D2 <= ((rwb AND phi2 AND spi_cs/spi_cs_D2)
	OR (rwb AND phi2 AND NOT m_vramsel_out/m_vramsel_out_D2));
















FA(15) <= NOT (((mappy/bankl(2) AND NOT A(15))
	OR (mappy/bankl(3) AND NOT A(15))
	OR (NOT A(15) AND NOT lowbank(0))
	OR (NOT A(15) AND mappy/bankl(4))
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	NOT $OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND NOT A(14) AND NOT mappy/cfg_mp(2) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	NOT $OpTx$INV$398)
	OR (mappy/bankl(0) AND NOT A(15))
	OR (mappy/bankl(1) AND NOT A(15))
	OR (NOT A(15) AND mappy/bankl(5))
	OR (NOT A(15) AND mappy/bankl(6))
	OR (NOT A(15) AND mappy/bankl(7))));


FA(16) <= ((mappy/bankl(0))
	OR (NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	A(15) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7) AND NOT $OpTx$INV$398)
	OR (NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(1) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7)));


FA(17) <= ((mappy/bankl(1))
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(2) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7)));


FA(18) <= ((mappy/bankl(2))
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(3) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7)));


VA(0) <= ((ipl_cnt(4) AND ipl)
	OR (A(0) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(0) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(0) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(0) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(1) <= ((ipl_cnt(5) AND ipl)
	OR (A(1) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(1) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(1) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(1) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(2) <= ((ipl_cnt(6) AND ipl)
	OR (NOT ipl AND A(2) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(2) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(2) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(2) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(3) <= ((ipl_cnt(7) AND ipl)
	OR (NOT ipl AND NOT is_vid_out AND A(3))
	OR (vis_hires_in AND viccy/vid_addr(3) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(3) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND viccy/rcline_cnt(3) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(4) <= ((ipl_cnt(8) AND ipl)
	OR (A(4) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(4) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(4) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(0) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(5) <= ((ipl_cnt(9) AND ipl)
	OR (A(5) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(5) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(5) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(1) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(6) <= ((ipl_cnt(10) AND ipl)
	OR (A(6) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(6) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(6) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(2) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(7) <= ((ipl_cnt(11) AND ipl)
	OR (A(7) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vid_addr(7) AND NOT ipl AND 
	is_vid_out)
	OR (viccy/vid_addr(7) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND viccy/charhold(3) AND 
	is_vid_out AND NOT viccy/chr_fetch));


VA(8) <= NOT (((NOT ipl AND NOT A(8) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(8) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(8) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(4) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(9) <= NOT (((NOT ipl AND NOT A(9) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(9) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(9) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(5) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(10) <= NOT (((NOT ipl AND NOT A(10) AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(10) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(10) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(6) AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(11) <= NOT (((NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(7) AND 
	is_vid_out AND NOT viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(11) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(11) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT vidblock(0) AND NOT A(11) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(11) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/screenwin/mappy/screenwin_D2)
	OR (vidblock(0) AND A(11) AND NOT ipl AND NOT is_vid_out AND 
	mappy/screenwin/mappy/screenwin_D2)));


VA(12) <= NOT (((vis_hires_in AND NOT viccy/vid_addr(12) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(12) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT A(12) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/screenwin/mappy/screenwin_D2)
	OR (NOT vidblock(1) AND NOT ipl AND NOT is_vid_out AND 
	mappy/screenwin/mappy/screenwin_D2)
	OR (NOT vis_hires_in AND NOT ipl AND is_vid_out AND 
	NOT viccy/chr_fetch AND NOT graphic)));


VA(13) <= NOT (((vis_hires_in AND NOT viccy/vid_addr(13) AND NOT ipl AND 
	is_vid_out)
	OR (NOT viccy/vid_addr(13) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT A(13) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/screenwin/mappy/screenwin_D2)
	OR (NOT vidblock(2) AND NOT ipl AND NOT is_vid_out AND 
	mappy/screenwin/mappy/screenwin_D2)
	OR (NOT vis_hires_in AND NOT viccy/vpage(6) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch)));


VA(14) <= ((ipl)
	OR (A(14) AND NOT is_vid_out)
	OR (vis_hires_in AND viccy/vpage(6) AND is_vid_out)
	OR (NOT vis_hires_in AND viccy/vpage(7) AND is_vid_out AND 
	viccy/pxl_fetch));


VA(15) <= NOT (((mappy/bankl(2) AND NOT A(15) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(3) AND NOT A(15) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND mappy/bankl(4) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vpage(7) AND NOT ipl AND 
	is_vid_out)
	OR (NOT vis_hires_in AND NOT ipl AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (NOT A(15) AND NOT lowbank(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	NOT ipl AND NOT is_vid_out AND NOT $OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND NOT A(14) AND NOT mappy/cfg_mp(2) AND 
	NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	NOT ipl AND NOT is_vid_out AND NOT $OpTx$INV$398)
	OR (mappy/bankl(0) AND NOT A(15) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(1) AND NOT A(15) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND mappy/bankl(5) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND mappy/bankl(6) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND mappy/bankl(7) AND NOT ipl AND NOT is_vid_out)));


VA(16) <= ((mappy/bankl(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	A(15) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7) AND NOT ipl AND NOT is_vid_out AND NOT $OpTx$INV$398)
	OR (NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(1) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND NOT ipl AND NOT is_vid_out));


VA(17) <= ((mappy/bankl(1) AND NOT ipl AND NOT is_vid_out)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(2) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND NOT ipl AND NOT is_vid_out));


VA(18) <= ((mappy/bankl(2) AND NOT ipl AND NOT is_vid_out)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(3) AND 
	NOT A(15) AND lowbank(3) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND NOT ipl AND NOT is_vid_out));


VD_I(0) <= ((D(0).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(0) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(0) AND rwb AND NOT A(1) AND NOT A(0) AND 
	ipl AND spi_cs/spi_cs_D2));
VD(0) <= VD_I(0) when VD_OE(0) = '1' else 'Z';
VD_OE(0) <= NOT ramrwb;


VD_I(1) <= ((D(1).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(1) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_sel(1) AND 
	ipl AND spi_cs/spi_cs_D2));
VD(1) <= VD_I(1) when VD_OE(1) = '1' else 'Z';
VD_OE(1) <= NOT ramrwb;


VD_I(2) <= ((D(2).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(2) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND spi_sel(2) AND rwb AND NOT A(1) AND NOT A(0) AND 
	ipl AND spi_cs/spi_cs_D2));
VD(2) <= VD_I(2) when VD_OE(2) = '1' else 'Z';
VD_OE(2) <= NOT ramrwb;


VD_I(3) <= ((D(3).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(3) AND 
	spi_comp/N01/spi_comp/N01_D2));
VD(3) <= VD_I(3) when VD_OE(3) = '1' else 'Z';
VD_OE(3) <= NOT ramrwb;


VD_I(4) <= ((D(4).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(4) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_comp/cpha AND 
	ipl AND spi_cs/spi_cs_D2));
VD(4) <= VD_I(4) when VD_OE(4) = '1' else 'Z';
VD_OE(4) <= NOT ramrwb;


VD_I(5) <= ((D(5).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(5) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND spi_comp/cpol AND 
	ipl AND spi_cs/spi_cs_D2));
VD(5) <= VD_I(5) when VD_OE(5) = '1' else 'Z';
VD_OE(5) <= NOT ramrwb;


VD_I(6) <= ((D(6).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(6) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND ipl AND 
	spi_comp/txd_valid AND spi_cs/spi_cs_D2));
VD(6) <= VD_I(6) when VD_OE(6) = '1' else 'Z';
VD_OE(6) <= NOT ramrwb;


VD_I(7) <= ((D(7).PIN AND NOT ipl)
	OR (ipl AND spi_outx AND spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND 
	spi_comp/run_sr AND ipl AND spi_cs/spi_cs_D2)
	OR (NOT ipl_state AND rwb AND NOT A(1) AND NOT A(0) AND ipl AND 
	spi_comp/txd_valid AND spi_cs/spi_cs_D2));
VD(7) <= VD_I(7) when VD_OE(7) = '1' else 'Z';
VD_OE(7) <= NOT ramrwb;

FDCPE_boot: FDCPE port map (boot,boot_D,NOT phi2,'0',NOT nres);
boot_D <= ((D(1).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (boot AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_chr_window: FDCPE port map (chr_window,chr_window_D,NOT q50m,NOT nres,'0');
chr_window_D <= (clocky/clk_cnt_0_2 AND NOT clocky/clk_cnt_0_3);

FDCPE_clk1m: FDCPE port map (clk1m,clk1m_D,q50m,NOT nres,'0');
clk1m_D <= (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3));

FDCPE_clk2m: FDCPE port map (clk2m,clk2m_D,q50m,NOT nres,'0');
clk2m_D <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3)));

FDCPE_clk4m: FDCPE port map (clk4m,clk4m_D,q50m,NOT nres,'0');
clk4m_D <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3))
	OR (clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0) AND clocky/cpu_cnt1(3))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(3)));

FTCPE_clocky/clk_cnt_0_0: FTCPE port map (clocky/clk_cnt_0_0,'1',q50m,NOT nres,'0');

FTCPE_clocky/clk_cnt_0_1: FTCPE port map (clocky/clk_cnt_0_1,clocky/clk_cnt_0_0,q50m,NOT nres,'0');

FTCPE_clocky/clk_cnt_0_2: FTCPE port map (clocky/clk_cnt_0_2,clocky/clk_cnt_0_2_T,q50m,NOT nres,'0');
clocky/clk_cnt_0_2_T <= (clocky/clk_cnt_0_0 AND clocky/clk_cnt_0_1);

FTCPE_clocky/clk_cnt_0_3: FTCPE port map (clocky/clk_cnt_0_3,clocky/clk_cnt_0_3_T,q50m,NOT nres,'0');
clocky/clk_cnt_0_3_T <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_0 AND 
	clocky/clk_cnt_0_1);

FTCPE_clocky/cpu_cnt10: FTCPE port map (clocky/cpu_cnt1(0),'1',dot2clk,NOT nres,'0');

FTCPE_clocky/cpu_cnt11: FTCPE port map (clocky/cpu_cnt1(1),clocky/cpu_cnt1(0),dot2clk,NOT nres,'0');

FTCPE_clocky/cpu_cnt12: FTCPE port map (clocky/cpu_cnt1(2),clocky/cpu_cnt1_T(2),dot2clk,NOT nres,'0');
clocky/cpu_cnt1_T(2) <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0))
	OR (clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(0) AND 
	NOT clocky/cpu_cnt1(3)));

FTCPE_clocky/cpu_cnt13: FTCPE port map (clocky/cpu_cnt1(3),clocky/cpu_cnt1_T(3),dot2clk,NOT nres,'0');
clocky/cpu_cnt1_T(3) <= ((clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(0))
	OR (clocky/cpu_cnt1(1) AND clocky/cpu_cnt1(0) AND 
	clocky/cpu_cnt1(3)));

FDCPE_dclk: FDCPE port map (dclk,clocky/clk_cnt_0_0,NOT q50m,'0','0',nres);

FDCPE_dena: FDCPE port map (dena,dena_D,NOT dclk,'0','0',dena_CE);
dena_D <= (viccy/h_enable AND viccy/v_enable);
dena_CE <= (nres AND viccy/pxl_fetch AND viccy/sr_load_d);

FDCPE_do_cpu: FDCPE port map (do_cpu,do_cpu_D,memclk_d,NOT nres,'0');
do_cpu_D <= ((is_cpu AND NOT ipl AND NOT is_vid_out)
	OR (is_cpu AND NOT ipl AND m_vramsel_out/m_vramsel_out_D2));

FDCPE_dot2clk: FDCPE port map (dot2clk,clocky/clk_cnt_0_1,NOT q50m,'0','0',nres);

FDCPE_dot4clk: FDCPE port map (dot4clk,clocky/clk_cnt_0_2,NOT q50m,'0','0',nres);

FDCPE_hsync: FDCPE port map (hsync,hsync_D,NOT slotclk,'0','0');
hsync_D <= ((viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	viccy/slot_cnt(2) AND NOT viccy/slot_cnt(5))
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	viccy/slot_cnt(3) AND NOT viccy/slot_cnt(5))
	OR (NOT viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1)));

FDCPE_interlace: FDCPE port map (interlace,interlace_D,NOT phi2,NOT nres,'0');
interlace_D <= ((D(4).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (interlace AND NOT movesync_or0000/movesync_or0000_D2));

FDCPE_ipl: FDCPE port map (ipl,'0',NOT dot2clk,'0',NOT nres,ipl_CE);
ipl_CE <= (ipl AND ipl_next AND ipl_state_d);

FTCPE_ipl_cnt0: FTCPE port map (ipl_cnt(0),ipl_cnt_T(0),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(0) <= ((ipl AND NOT ipl_next)
	OR (ipl_cnt(0) AND ipl AND NOT ipl_state_d));

FTCPE_ipl_cnt1: FTCPE port map (ipl_cnt(1),ipl_cnt_T(1),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(1) <= ((ipl_cnt(0) AND ipl AND NOT ipl_next)
	OR (ipl_cnt(1) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt2: FTCPE port map (ipl_cnt(2),ipl_cnt_T(2),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(2) <= ((ipl_cnt(2) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(0) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt3: FTCPE port map (ipl_cnt(3),ipl_cnt_T(3),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(3) <= ((ipl_cnt(3) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(1) AND ipl AND 
	NOT ipl_next));

FTCPE_ipl_cnt4: FTCPE port map (ipl_cnt(4),ipl_cnt_T(4),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(4) <= ((ipl_cnt(4) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt5: FTCPE port map (ipl_cnt(5),ipl_cnt_T(5),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(5) <= ((ipl_cnt(5) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt6: FTCPE port map (ipl_cnt(6),ipl_cnt_T(6),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(6) <= ((ipl_cnt(6) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(5) AND ipl_cnt(1) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt7: FTCPE port map (ipl_cnt(7),ipl_cnt_T(7),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(7) <= ((ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2)
	OR (ipl_cnt(7) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt8: FTCPE port map (ipl_cnt(8),ipl_cnt_T(8),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(8) <= ((ipl_cnt(7) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2)
	OR (ipl_cnt(8) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt9: FTCPE port map (ipl_cnt(9),ipl_cnt_T(9),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(9) <= ((ipl_cnt(9) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(8) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));

FTCPE_ipl_cnt10: FTCPE port map (ipl_cnt(10),ipl_cnt_T(10),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(10) <= ((ipl_cnt(10) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(8) AND ipl_cnt(9) AND ipl AND 
	NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));

FTCPE_ipl_cnt11: FTCPE port map (ipl_cnt(11),ipl_cnt_T(11),NOT dot2clk,NOT nres,'0');
ipl_cnt_T(11) <= ((ipl_cnt(11) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(10) AND ipl_cnt(7) AND ipl_cnt(8) AND 
	ipl_cnt(9) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2));


ipl_cnt_Madd__add0000__and0005/ipl_cnt_Madd__add0000__and0005_D2 <= (ipl_cnt(2) AND ipl_cnt(0) AND ipl_cnt(3) AND 
	ipl_cnt(4) AND ipl_cnt(5) AND ipl_cnt(6) AND ipl_cnt(1));

FDCPE_ipl_next: FDCPE port map (ipl_next,ipl_next_D,dot2clk,'0','0',nres);
ipl_next_D <= ((ipl_state AND ipl_cnt(2) AND ipl_cnt(0) AND 
	ipl_cnt(10) AND ipl_cnt(3) AND ipl_cnt(4) AND ipl_cnt(5) AND 
	ipl_cnt(6) AND ipl_cnt(7) AND ipl_cnt(8) AND ipl_cnt(9) AND 
	ipl_cnt(11) AND ipl_cnt(1))
	OR (NOT ipl_state AND NOT ipl_cnt(2) AND NOT ipl_cnt(0) AND 
	NOT ipl_cnt(10) AND NOT ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND 
	ipl_cnt(6) AND NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND 
	NOT ipl_cnt(11) AND NOT ipl_cnt(1)));

FDCPE_ipl_out: FDCPE port map (ipl_out,ipl_out_D,NOT dot2clk,NOT nres,'0',ipl);
ipl_out_D <= ((ipl_cnt(2) AND NOT ipl_cnt(0) AND NOT ipl_cnt(10) AND 
	ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND 
	NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND 
	NOT ipl_state_d)
	OR (ipl_cnt(2) AND NOT ipl_cnt(10) AND ipl_cnt(3) AND 
	NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND NOT ipl_cnt(7) AND 
	NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND NOT ipl_cnt(1) AND 
	NOT ipl_state_d)
	OR (NOT ipl_cnt(2) AND ipl_cnt(0) AND NOT ipl_cnt(10) AND 
	ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND 
	NOT ipl_cnt(7) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND NOT ipl_cnt(11) AND 
	ipl_cnt(1) AND NOT ipl_state_d));

FDCPE_ipl_state: FDCPE port map (ipl_state,NOT ipl_state_d,NOT dot2clk,NOT nres,'0',ipl_state_CE);
ipl_state_CE <= (ipl AND ipl_next);

FDCPE_ipl_state_d: FDCPE port map (ipl_state_d,ipl_state,dot2clk,NOT nres,'0');

FDCPE_is8296: FDCPE port map (is8296,is8296_D,NOT phi2,NOT nres,'0');
is8296_D <= ((D(3).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (is8296 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_is_cpu: FDCPE port map (is_cpu,is_cpu_D,NOT dot2clk,NOT nres,is_cpu_PRE);
is_cpu_D <= ((mode(1) AND clk4m)
	OR (is_cpu AND NOT do_cpu)
	OR (NOT mode(1) AND NOT mode(0) AND clk1m)
	OR (mode(1) AND mode(0))
	OR (mode(0) AND clk2m));
is_cpu_PRE <= (mode(1) AND mode(0));

FDCPE_is_vid_out: FDCPE port map (is_vid_out,is_vid_out_D,q50m,'0','0');
is_vid_out_D <= (NOT viccy/chr_fetch AND NOT viccy/pxl_fetch);

FDCPE_lockb0: FDCPE port map (lockb0,lockb0_D,NOT phi2,NOT nres,'0');
lockb0_D <= ((D(0).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (lockb0 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_lowbank0: FDCPE port map (lowbank(0),lowbank_D(0),NOT phi2,NOT nres,'0');
lowbank_D(0) <= ((D(0).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (lowbank(0) AND NOT vidblock_or0000/vidblock_or0000_D2));

FDCPE_lowbank1: FDCPE port map (lowbank(1),lowbank_D(1),NOT phi2,NOT nres,'0');
lowbank_D(1) <= ((D(1).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (lowbank(1) AND NOT vidblock_or0000/vidblock_or0000_D2));

FDCPE_lowbank2: FDCPE port map (lowbank(2),lowbank_D(2),NOT phi2,NOT nres,'0');
lowbank_D(2) <= ((D(2).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (lowbank(2) AND NOT vidblock_or0000/vidblock_or0000_D2));

FDCPE_lowbank3: FDCPE port map (lowbank(3),lowbank_D(3),NOT phi2,NOT nres,'0');
lowbank_D(3) <= ((D(3).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (lowbank(3) AND NOT vidblock_or0000/vidblock_or0000_D2));


m_vramsel_out/m_vramsel_out_D2 <= ((NOT vpa AND NOT vda)
	OR (mappy/bankl(3) AND boot AND 
	NOT mappy/screenwin/mappy/screenwin_D2)
	OR (NOT mappy/bankl(3) AND NOT boot AND 
	NOT mappy/screenwin/mappy/screenwin_D2));

FDCPE_mappy/bankl0: FDCPE port map (mappy/bankl(0),mappy/bankl_D(0),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(0) <= ((D(0).PIN AND NOT lockb0)
	OR (D(0).PIN AND NOT e));

FDCPE_mappy/bankl1: FDCPE port map (mappy/bankl(1),mappy/bankl_D(1),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(1) <= ((D(1).PIN AND NOT lockb0)
	OR (D(1).PIN AND NOT e));

FDCPE_mappy/bankl2: FDCPE port map (mappy/bankl(2),mappy/bankl_D(2),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(2) <= ((D(2).PIN AND NOT lockb0)
	OR (D(2).PIN AND NOT e));

FDCPE_mappy/bankl3: FDCPE port map (mappy/bankl(3),mappy/bankl_D(3),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(3) <= ((D(3).PIN AND NOT lockb0)
	OR (D(3).PIN AND NOT e));

FDCPE_mappy/bankl4: FDCPE port map (mappy/bankl(4),mappy/bankl_D(4),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(4) <= ((D(4).PIN AND NOT lockb0)
	OR (D(4).PIN AND NOT e));

FDCPE_mappy/bankl5: FDCPE port map (mappy/bankl(5),mappy/bankl_D(5),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(5) <= ((D(5).PIN AND NOT lockb0)
	OR (D(5).PIN AND NOT e));

FDCPE_mappy/bankl6: FDCPE port map (mappy/bankl(6),mappy/bankl_D(6),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(6) <= ((D(6).PIN AND NOT lockb0)
	OR (D(6).PIN AND NOT e));

FDCPE_mappy/bankl7: FDCPE port map (mappy/bankl(7),mappy/bankl_D(7),q50m,NOT nres,'0',NOT phi2);
mappy/bankl_D(7) <= ((D(7).PIN AND NOT lockb0)
	OR (D(7).PIN AND NOT e));

FDCPE_mappy/cfg_mp0: FDCPE port map (mappy/cfg_mp(0),mappy/cfg_mp_D(0),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(0) <= ((D(0).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(0) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp1: FDCPE port map (mappy/cfg_mp(1),mappy/cfg_mp_D(1),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(1) <= ((D(1).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(1) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp2: FDCPE port map (mappy/cfg_mp(2),mappy/cfg_mp_D(2),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(2) <= ((D(2).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(2) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp3: FDCPE port map (mappy/cfg_mp(3),mappy/cfg_mp_D(3),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(3) <= ((D(3).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(3) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp5: FDCPE port map (mappy/cfg_mp(5),mappy/cfg_mp_D(5),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(5) <= ((D(5).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(5) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp6: FDCPE port map (mappy/cfg_mp(6),mappy/cfg_mp_D(6),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(6) <= ((D(6).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(6) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp7: FDCPE port map (mappy/cfg_mp(7),mappy/cfg_mp_D(7),NOT phi2,NOT nres,'0');
mappy/cfg_mp_D(7) <= ((D(7).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(7) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));


mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 <= ((NOT rwb AND NOT A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND A(12) AND is8296 AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND A(5) AND 
	A(7) AND A(6) AND A(4) AND NOT A(2) AND A(9) AND A(8) AND A(10) AND 
	NOT A(3) AND vpa)
	OR (NOT rwb AND NOT A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND A(12) AND is8296 AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND A(5) AND 
	A(7) AND A(6) AND A(4) AND NOT A(2) AND A(9) AND A(8) AND A(10) AND 
	NOT A(3) AND vda));


mappy/screenwin/mappy/screenwin_D2 <= ((mappy/cfg_mp(5) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND NOT A(14) AND 
	NOT A(13) AND NOT A(12) AND screenb0 AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7))
	OR (NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND NOT A(14) AND 
	NOT A(13) AND NOT A(12) AND screenb0 AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7)));

FDCPE_memclk_d: FDCPE port map (memclk_d,dot2clk,NOT q50m,NOT nres,'0');

FDCPE_mode0: FDCPE port map (mode(0),mode_D(0),NOT phi2,NOT nres,'0');
mode_D(0) <= ((D(0).PIN AND mode_or0000/mode_or0000_D2)
	OR (mode(0) AND NOT mode_or0000/mode_or0000_D2));

FDCPE_mode1: FDCPE port map (mode(1),mode_D(1),NOT phi2,NOT nres,'0');
mode_D(1) <= ((D(1).PIN AND mode_or0000/mode_or0000_D2)
	OR (mode(1) AND NOT mode_or0000/mode_or0000_D2));


mode_or0000/mode_or0000_D2 <= ((NOT rwb AND A(1) AND A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND A(1) AND A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vda AND 
	$OpTx$INV$398));

FDCPE_movesync: FDCPE port map (movesync,movesync_D,NOT phi2,NOT nres,'0');
movesync_D <= ((D(6).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (movesync AND NOT movesync_or0000/movesync_or0000_D2));


movesync_or0000/movesync_or0000_D2 <= ((NOT rwb AND NOT A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND NOT A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vda AND 
	$OpTx$INV$398));


nflash <= NOT (((nres AND ipl)
	OR (nres AND spi_sel(0) AND NOT spi_sel(2) AND NOT spi_sel(1))));


nframsel <= ((NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	A(15) AND NOT boot AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND 
	mappy/screenwin/mappy/screenwin_D2)
	OR (NOT rwb AND mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND NOT A(14) AND NOT boot AND 
	mappy/cfg_mp(0) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7))
	OR (NOT rwb AND NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND A(14) AND NOT boot AND 
	wp_romPET AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7))
	OR (NOT rwb AND NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND NOT A(14) AND A(13) AND NOT A(12) AND 
	NOT boot AND wp_romA AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7))
	OR (NOT dot2clk)
	OR (mappy/bankl(3) AND NOT boot)
	OR (NOT mappy/bankl(3) AND boot)
	OR (NOT vpa AND NOT vda)
	OR (NOT rwb AND mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND A(14) AND NOT boot AND 
	mappy/cfg_mp(1) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7))
	OR (NOT rwb AND NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND NOT A(14) AND A(13) AND A(12) AND 
	NOT boot AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7) AND wp_romB)
	OR (NOT rwb AND NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND NOT A(14) AND NOT A(13) AND A(12) AND 
	NOT boot AND wp_rom9 AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7))
	OR (NOT mappy/cfg_mp(7) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND 
	NOT boot AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7) AND A(11) AND NOT A(9) AND NOT A(8) AND NOT A(10))
	OR (mappy/cfg_mp(6) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND 
	NOT boot AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7) AND A(11) AND NOT A(9) AND NOT A(8) AND NOT A(10)));


nsel1 <= NOT (((NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND NOT A(6) AND A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND NOT A(6) AND A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vda AND 
	$OpTx$INV$398)));


nsel2 <= NOT (((NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND A(5) AND 
	NOT A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND A(5) AND 
	NOT A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vda AND 
	$OpTx$INV$398)));


nsel4 <= NOT (((NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vda AND 
	$OpTx$INV$398)));


nvramsel <= NOT (((ipl AND dot2clk)
	OR (dot2clk AND is_vid_out)
	OR (dot2clk AND NOT wait_int_d AND 
	NOT m_vramsel_out/m_vramsel_out_D2)));

FDCPE_pet_vsync: FDCPE port map (pet_vsync,pet_vsync_D,NOT hsync,'0','0',nres);
pet_vsync_D <= ((viccy/rows_per_char(3) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rows_per_char(3) AND NOT movesync AND 
	viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));


phi2_I <= NOT ((NOT dot2clk AND do_cpu));
phi2 <= phi2_I when phi2_OE = '1' else 'Z';
phi2_OE <= NOT ((phi2 AND phi2.PIN));


phi2_io_I <= NOT (((NOT dot2clk AND do_cpu)
	OR (mode(1) AND mode(0) AND NOT dot2clk)));
phi2_io <= phi2_io_I when phi2_io_OE = '1' else 'Z';
phi2_io_OE <= NOT phi2_io_and0000;


phi2_io_and0000 <= ((dot2clk AND phi2_io.PIN)
	OR (NOT mode(1) AND NOT do_cpu AND phi2_io.PIN)
	OR (NOT mode(0) AND NOT do_cpu AND phi2_io.PIN));

FDCPE_pxl: FDCPE port map (pxl,pxl_D,NOT dclk,NOT nres,'0');
pxl_D <= (viccy/pxlhold(7) AND dena);

FDCPE_pxl_window: FDCPE port map (pxl_window,pxl_window_D,NOT q50m,NOT nres,'0');
pxl_window_D <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_3);


ramrwb <= NOT (((ipl)
	OR (NOT rwb AND dot2clk AND NOT is_vid_out AND 
	NOT m_vramsel_out/m_vramsel_out_D2)));

FDCPE_screenb0: FDCPE port map (screenb0,screenb0_D,NOT phi2,'0',NOT nres);
screenb0_D <= ((NOT D(2).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (screenb0 AND NOT movesync_or0000/movesync_or0000_D2));

FDCPE_slotclk: FDCPE port map (slotclk,clocky/clk_cnt_0_3,NOT q50m,'0','0',nres);


spi_clk <= ((spi_comp/txd(7).EXP)
	OR (spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	NOT spi_comp/cpol AND NOT ipl)
	OR (spi_comp/stat(0) AND NOT spi_comp/cpha AND NOT spi_comp/cpol AND 
	NOT ipl)
	OR (NOT spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	spi_comp/cpol AND NOT ipl)
	OR (NOT spi_comp/stat(0) AND NOT spi_comp/cpha AND spi_comp/cpol AND 
	NOT ipl)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/run_sr AND 
	spi_comp/cpha AND spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND spi_comp/run_sr AND 
	spi_comp/cpha AND NOT spi_comp/cpol)
	OR (NOT ipl_state AND ipl_cnt(0) AND ipl)
	OR (ipl_state AND spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	NOT spi_comp/cpol)
	OR (ipl_state AND spi_comp/stat(0) AND NOT spi_comp/cpha AND 
	NOT spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND NOT spi_comp/run_sr AND 
	spi_comp/cpol)
	OR (ipl_state AND NOT spi_comp/stat(0) AND NOT spi_comp/cpha AND 
	spi_comp/cpol));


spi_comp/N01/spi_comp/N01_D2 <= ((ipl_state)
	OR (rwb AND A(1) AND NOT A(0) AND spi_cs/spi_cs_D2)
	OR (rwb AND NOT A(1) AND A(0) AND spi_cs/spi_cs_D2));

FDCPE_spi_comp/ack_rxtx: FDCPE port map (spi_comp/ack_rxtx,spi_comp/ack_rxtx_D,NOT spi_outx/spi_outx_CLKF,'0','0');
spi_comp/ack_rxtx_D <= (spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3));

FDCPE_spi_comp/ack_txd: FDCPE port map (spi_comp/ack_txd,spi_comp/ack_txd_D,spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/ack_txd_D <= (spi_comp/txd_valid AND NOT spi_comp/run_sr_d);

FDCPE_spi_comp/cpha: FDCPE port map (spi_comp/cpha,D(4).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/cpha_CE);
spi_comp/cpha_CE <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_comp/cpol: FDCPE port map (spi_comp/cpol,D(5).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/cpol_CE);
spi_comp/cpol_CE <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_comp/run_sr: FDCPE port map (spi_comp/run_sr,spi_comp/run_sr_D,spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/run_sr_D <= ((NOT spi_comp/run_sr AND spi_comp/run_sr_d)
	OR (spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3) AND spi_comp/run_sr_d)
	OR (NOT spi_comp/run_sr AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/stat(3) AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx));

FDCPE_spi_comp/run_sr_d: FDCPE port map (spi_comp/run_sr_d,spi_comp/run_sr,NOT spi_outx/spi_outx_CLKF,'0','0');

FDCPE_spi_comp/serin_d: FDCPE port map (spi_comp/serin_d,spi_comp/serin_d_D,spi_outx/spi_outx_CLKF,'0','0');
spi_comp/serin_d_D <= ((nflash_OBUF.EXP)
	OR (NOT ipl_state AND spi_comp/serin_d AND NOT spi_comp/run_sr_d)
	OR (spi_comp/txd_valid AND spi_comp/serin_d AND 
	NOT spi_comp/run_sr_d)
	OR (nres AND NOT spi_comp/stat(0) AND NOT spi_sel(0) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (nres AND NOT spi_comp/stat(0) AND spi_sel(2) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (nres AND NOT spi_comp/stat(0) AND NOT spi_sel(1) AND 
	spi_comp/run_sr_d AND spi_in1)
	OR (NOT nres AND spi_comp/serin_d)
	OR (spi_comp/stat(0) AND spi_comp/serin_d)
	OR (spi_comp/start_rx AND spi_comp/serin_d AND 
	NOT spi_comp/run_sr_d));

FDCPE_spi_comp/sr0: FDCPE port map (spi_comp/sr(0),spi_comp/sr_D(0),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(0) <= ((NOT spi_comp/txd_valid AND spi_comp/serin_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/serin_d AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(0) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(0) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr1: FDCPE port map (spi_comp/sr(1),spi_comp/sr_D(1),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(1) <= ((spi_comp/sr(0) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(1) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(1) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(0) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr2: FDCPE port map (spi_comp/sr(2),spi_comp/sr_D(2),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(2) <= ((spi_comp/sr(1) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(2) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(2) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(1) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr3: FDCPE port map (spi_comp/sr(3),spi_comp/sr_D(3),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(3) <= ((spi_comp/sr(3) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(2) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(2) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(3) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr4: FDCPE port map (spi_comp/sr(4),spi_comp/sr_D(4),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(4) <= ((spi_comp/sr(4) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(3) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(3) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(4) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr5: FDCPE port map (spi_comp/sr(5),spi_comp/sr_D(5),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(5) <= ((spi_comp/sr(5) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(4) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(4) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(5) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));

FDCPE_spi_comp/sr6: FDCPE port map (spi_comp/sr(6),spi_comp/sr_D(6),spi_outx/spi_outx_CLKF,'0','0');
spi_comp/sr_D(6) <= ((spi_comp/sr(6) AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(5) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/sr(5) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(6) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));


spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2 <= ((nres AND spi_comp/stat(0) AND spi_comp/run_sr_d)
	OR (nres AND spi_comp/txd_valid AND NOT spi_comp/run_sr_d)
	OR (nres AND ipl_state AND spi_comp/stat(0) AND 
	NOT spi_comp/start_rx));

FDCPE_spi_comp/start_rx: FDCPE port map (spi_comp/start_rx,'1',NOT spi_cs/spi_cs_D2,NOT spi_comp/start_rx/spi_comp/start_rx_RSTF,'0',spi_comp/start_rx_CE);
spi_comp/start_rx_CE <= (rwb AND NOT A(1) AND A(0));


spi_comp/start_rx/spi_comp/start_rx_RSTF <= (nres AND NOT spi_comp/ack_rxtx);

FTCPE_spi_comp/stat0: FTCPE port map (spi_comp/stat(0),spi_comp/stat_T(0),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(0) <= ((spi_comp/run_sr_d)
	OR (ipl_state AND NOT spi_comp/txd_valid AND 
	NOT spi_comp/start_rx));

FTCPE_spi_comp/stat1: FTCPE port map (spi_comp/stat(1),spi_comp/stat_T(1),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(1) <= ((spi_comp/stat(0) AND spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND 
	NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FTCPE_spi_comp/stat2: FTCPE port map (spi_comp/stat(2),spi_comp/stat_T(2),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(2) <= ((spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FTCPE_spi_comp/stat3: FTCPE port map (spi_comp/stat(3),spi_comp/stat_T(3),spi_outx/spi_outx_CLKF,NOT nres,'0');
spi_comp/stat_T(3) <= ((spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/run_sr_d)
	OR (ipl_state AND spi_comp/stat(0) AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND NOT spi_comp/txd_valid AND NOT spi_comp/start_rx));

FDCPE_spi_comp/txd0: FDCPE port map (spi_comp/txd(0),D(0).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(0));
spi_comp/txd_CE(0) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd1: FDCPE port map (spi_comp/txd(1),D(1).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(1));
spi_comp/txd_CE(1) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd2: FDCPE port map (spi_comp/txd(2),D(2).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(2));
spi_comp/txd_CE(2) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd3: FDCPE port map (spi_comp/txd(3),D(3).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(3));
spi_comp/txd_CE(3) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd4: FDCPE port map (spi_comp/txd(4),D(4).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(4));
spi_comp/txd_CE(4) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd5: FDCPE port map (spi_comp/txd(5),D(5).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(5));
spi_comp/txd_CE(5) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd6: FDCPE port map (spi_comp/txd(6),D(6).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(6));
spi_comp/txd_CE(6) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd7: FDCPE port map (spi_comp/txd(7),D(7).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_comp/txd_CE(7));
spi_comp/txd_CE(7) <= (NOT rwb AND NOT A(1) AND A(0));

FDCPE_spi_comp/txd_valid: FDCPE port map (spi_comp/txd_valid,'1',NOT spi_cs/spi_cs_D2,NOT spi_comp/txd_valid/spi_comp/txd_valid_RSTF,'0',spi_comp/txd_valid_CE);
spi_comp/txd_valid_CE <= (NOT rwb AND NOT A(1) AND A(0));


spi_comp/txd_valid/spi_comp/txd_valid_RSTF <= (nres AND NOT spi_comp/ack_txd);


spi_cs/spi_cs_D2 <= ((NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND NOT A(6) AND NOT A(4) AND phi2 AND NOT A(2) AND NOT A(9) AND NOT A(8) AND 
	NOT A(10) AND A(3) AND vpa AND $OpTx$INV$398)
	OR (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	NOT A(7) AND NOT A(6) AND NOT A(4) AND phi2 AND NOT A(2) AND NOT A(9) AND NOT A(8) AND 
	NOT A(10) AND A(3) AND vda AND $OpTx$INV$398));


spi_nsel2 <= NOT ((nres AND NOT spi_sel(0) AND NOT spi_sel(2) AND spi_sel(1)));


spi_nsel3 <= NOT ((nres AND spi_sel(0) AND NOT spi_sel(2) AND spi_sel(1)));


spi_nsel4 <= NOT ((nres AND NOT spi_sel(0) AND spi_sel(2) AND NOT spi_sel(1)));


spi_nsel5 <= NOT ((nres AND spi_sel(0) AND spi_sel(2) AND NOT spi_sel(1)));


spi_out <= ((ipl_out AND ipl)
	OR (NOT ipl AND spi_outx));

FDCPE_spi_outx: FDCPE port map (spi_outx,spi_outx_D,spi_outx/spi_outx_CLKF,'0','0');
spi_outx_D <= ((spi_comp/sr(6) AND spi_comp/run_sr_d AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_comp/txd(7) AND spi_comp/txd_valid AND 
	NOT spi_comp/run_sr_d AND spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (spi_outx AND 
	NOT spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2)
	OR (NOT spi_comp/txd_valid AND spi_comp/sr(6) AND 
	spi_comp/sr_0_and0000/spi_comp/sr_0_and0000_D2));


spi_outx/spi_outx_CLKF <= ((NOT spi_sel(0) AND dot2clk)
	OR (NOT spi_sel(2) AND dot2clk)
	OR (spi_sel(0) AND spi_sel(2) AND dot4clk));

FDCPE_spi_sel0: FDCPE port map (spi_sel(0),D(0).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(0));
spi_sel_CE(0) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_sel1: FDCPE port map (spi_sel(1),D(1).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(1));
spi_sel_CE(1) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_spi_sel2: FDCPE port map (spi_sel(2),D(2).PIN,NOT spi_cs/spi_cs_D2,NOT nres,'0',spi_sel_CE(2));
spi_sel_CE(2) <= (NOT rwb AND NOT A(1) AND NOT A(0));

FDCPE_sr_load: FDCPE port map (sr_load,sr_load_D,NOT q50m,NOT nres,'0');
sr_load_D <= (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_0 AND 
	clocky/clk_cnt_0_3 AND clocky/clk_cnt_0_1);


viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 <= (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/vid_addr(8));

FDCPE_viccy/charhold0: FDCPE port map (viccy/charhold(0),VD(0).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold1: FDCPE port map (viccy/charhold(1),VD(1).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold2: FDCPE port map (viccy/charhold(2),VD(2).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold3: FDCPE port map (viccy/charhold(3),VD(3).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold4: FDCPE port map (viccy/charhold(4),VD(4).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold5: FDCPE port map (viccy/charhold(5),VD(5).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold6: FDCPE port map (viccy/charhold(6),VD(6).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/charhold7: FDCPE port map (viccy/charhold(7),VD(7).PIN,NOT viccy/chr_fetch,NOT nres,'0');

FDCPE_viccy/chr_fetch: FDCPE port map (viccy/chr_fetch,viccy/chr_fetch_D,q50m,'0','0');
viccy/chr_fetch_D <= ((NOT vis_hires_in AND vis_enable AND interlace AND 
	viccy/is_80 AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND interlace AND 
	NOT viccy/in_slot AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND NOT viccy/rline_cnt(0) AND 
	viccy/is_80 AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/in_slot AND chr_window));

FDCPE_viccy/crtc_reg0: FDCPE port map (viccy/crtc_reg(0),viccy/crtc_reg_D(0),NOT dot2clk,NOT nres,'0');
viccy/crtc_reg_D(0) <= ((viccy/crtc_reg(0) AND NOT $OpTx$FX_DC$442)
	OR (D(0).PIN AND NOT D(2).PIN AND NOT D(1).PIN AND D(3).PIN AND 
	$OpTx$FX_DC$442));

FDCPE_viccy/crtc_reg1: FDCPE port map (viccy/crtc_reg(1),viccy/crtc_reg_D(1),NOT dot2clk,NOT nres,'0');
viccy/crtc_reg_D(1) <= ((viccy/crtc_reg(1) AND NOT $OpTx$FX_DC$442)
	OR (NOT D(0).PIN AND D(2).PIN AND NOT D(1).PIN AND D(3).PIN AND 
	$OpTx$FX_DC$442));

FDCPE_viccy/dot2clk_d: FDCPE port map (viccy/dot2clk_d,dot2clk,q50m,'0','0');

FTCPE_viccy/h_enable: FTCPE port map (viccy/h_enable,viccy/h_enable_T,NOT slotclk,'0','0');
viccy/h_enable_T <= ((NOT viccy/slot_cnt(4) AND NOT viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND NOT viccy/h_enable)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND viccy/h_enable));

FDCPE_viccy/in_slot: FDCPE port map (viccy/in_slot,viccy/slot_cnt(0),NOT slotclk,NOT nres,'0');

FDCPE_viccy/is_80: FDCPE port map (viccy/is_80,vis_80_in,NOT slotclk,'0','0',viccy/is_80_CE);
viccy/is_80_CE <= (nres AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line);

FDCPE_viccy/last_line_of_char: FDCPE port map (viccy/last_line_of_char,viccy/last_line_of_char_D,hsync,'0','0');
viccy/last_line_of_char_D <= ((NOT viccy/rcline_cnt(0) AND viccy/rows_per_char(3) AND 
	NOT viccy/rcline_cnt(1) AND NOT viccy/rcline_cnt(2) AND viccy/rcline_cnt(3) AND 
	vis_double_in)
	OR (viccy/rcline_cnt(0) AND NOT viccy/rows_per_char(3) AND 
	viccy/rcline_cnt(1) AND viccy/rcline_cnt(2) AND NOT viccy/rcline_cnt(3) AND 
	vis_double_in)
	OR (vis_hires_in AND vis_double_in)
	OR (vis_hires_in AND viccy/rline_cnt(0))
	OR (viccy/rcline_cnt(0) AND NOT viccy/rows_per_char(3) AND 
	viccy/rcline_cnt(1) AND viccy/rcline_cnt(2) AND NOT viccy/rcline_cnt(3) AND 
	viccy/rline_cnt(0))
	OR (NOT viccy/rcline_cnt(0) AND viccy/rows_per_char(3) AND 
	NOT viccy/rcline_cnt(1) AND NOT viccy/rcline_cnt(2) AND viccy/rcline_cnt(3) AND 
	viccy/rline_cnt(0)));

FDCPE_viccy/last_line_of_screen: FDCPE port map (viccy/last_line_of_screen,viccy/last_line_of_screen_D,hsync,'0','0');
viccy/last_line_of_screen_D <= (viccy/rline_cnt(0) AND NOT viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND NOT viccy/rline_cnt(6) AND NOT viccy/rline_cnt(7) AND 
	NOT viccy/rline_cnt(8) AND viccy/rline_cnt(9));

FDCPE_viccy/last_slot_of_line: FDCPE port map (viccy/last_slot_of_line,viccy/last_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_slot_of_line_D <= (NOT viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(1));

FDCPE_viccy/last_vis_slot_of_line: FDCPE port map (viccy/last_vis_slot_of_line,viccy/last_vis_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_vis_slot_of_line_D <= ((viccy/slot_cnt(4) AND viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1))
	OR (NOT viccy/slot_cnt(4) AND NOT viccy/slot_cnt(6) AND 
	NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(2) AND NOT viccy/slot_cnt(3) AND 
	NOT viccy/slot_cnt(5) AND NOT viccy/slot_cnt(1) AND viccy/last_vis_slot_of_line));

FDCPE_viccy/pxl_fetch: FDCPE port map (viccy/pxl_fetch,viccy/pxl_fetch_D,q50m,'0','0');
viccy/pxl_fetch_D <= ((vis_enable AND interlace AND viccy/is_80 AND 
	pxl_window)
	OR (vis_enable AND interlace AND NOT viccy/in_slot AND 
	pxl_window)
	OR (vis_enable AND NOT viccy/rline_cnt(0) AND viccy/is_80 AND 
	pxl_window)
	OR (vis_enable AND NOT viccy/rline_cnt(0) AND NOT viccy/in_slot AND 
	pxl_window));

FDCPE_viccy/pxlhold0: FDCPE port map (viccy/pxlhold(0),viccy/pxlhold_D(0),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(0) <= ((VD(0).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold1: FDCPE port map (viccy/pxlhold(1),viccy/pxlhold_D(1),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(1) <= ((VD(1).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(0) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold2: FDCPE port map (viccy/pxlhold(2),viccy/pxlhold_D(2),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(2) <= ((VD(2).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(1) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold3: FDCPE port map (viccy/pxlhold(3),viccy/pxlhold_D(3),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(3) <= ((VD(3).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(2) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold4: FDCPE port map (viccy/pxlhold(4),viccy/pxlhold_D(4),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(4) <= ((viccy/pxlhold(3) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(4).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold5: FDCPE port map (viccy/pxlhold(5),viccy/pxlhold_D(5),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(5) <= ((VD(5).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(4) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold6: FDCPE port map (viccy/pxlhold(6),viccy/pxlhold_D(6),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(6) <= ((VD(6).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(5) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold7: FDCPE port map (viccy/pxlhold(7),viccy/pxlhold_D(7),NOT dclk,NOT nres,'0');
viccy/pxlhold_D(7) <= ((VD(7).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d)
	OR (viccy/pxlhold(6) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/rcline_cnt0: FDCPE port map (viccy/rcline_cnt(0),viccy/rcline_cnt_D(0),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_D(0) <= ((NOT viccy/rcline_cnt(0) AND vis_double_in AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (NOT viccy/rcline_cnt(0) AND viccy/rline_cnt(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT vis_double_in AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FDCPE_viccy/rcline_cnt1: FDCPE port map (viccy/rcline_cnt(1),viccy/rcline_cnt_D(1),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_D(1) <= ((NOT viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT viccy/rcline_cnt(1) AND 
	vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND NOT viccy/rcline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(1) AND NOT vis_double_in AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FTCPE_viccy/rcline_cnt2: FTCPE port map (viccy/rcline_cnt(2),viccy/rcline_cnt_T(2),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_T(2) <= ((viccy/rcline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/rcline_cnt(2) AND viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FTCPE_viccy/rcline_cnt3: FTCPE port map (viccy/rcline_cnt(3),viccy/rcline_cnt_T(3),NOT hsync,NOT nres,'0');
viccy/rcline_cnt_T(3) <= ((viccy/rcline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/rcline_cnt(3) AND viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rcline_cnt(2) AND vis_double_in AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/rcline_cnt(0) AND viccy/rcline_cnt(1) AND 
	viccy/rcline_cnt(2) AND viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char));

FDCPE_viccy/rline_cnt0: FDCPE port map (viccy/rline_cnt(0),viccy/rline_cnt_D(0),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(0) <= (NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen);

FDCPE_viccy/rline_cnt1: FDCPE port map (viccy/rline_cnt(1),viccy/rline_cnt_D(1),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(1) <= ((viccy/rline_cnt(0) AND NOT viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen)
	OR (NOT viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt2: FTCPE port map (viccy/rline_cnt(2),viccy/rline_cnt_T(2),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(2) <= ((viccy/rline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt3: FTCPE port map (viccy/rline_cnt(3),viccy/rline_cnt_T(3),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(3) <= ((viccy/rline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/last_line_of_screen));

FDCPE_viccy/rline_cnt4: FDCPE port map (viccy/rline_cnt(4),viccy/rline_cnt_D(4),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(4) <= ((viccy/rline_cnt(4) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));

FDCPE_viccy/rline_cnt5: FDCPE port map (viccy/rline_cnt(5),viccy/rline_cnt_D(5),NOT hsync,NOT nres,'0');
viccy/rline_cnt_D(5) <= ((viccy/rline_cnt(5) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2)
	OR (NOT viccy/rline_cnt(5) AND NOT viccy/last_line_of_screen AND 
	viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));

FTCPE_viccy/rline_cnt6: FTCPE port map (viccy/rline_cnt(6),viccy/rline_cnt_T(6),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(6) <= ((viccy/rline_cnt(6) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(5) AND NOT viccy/last_line_of_screen AND 
	viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));

FTCPE_viccy/rline_cnt7: FTCPE port map (viccy/rline_cnt(7),viccy/rline_cnt_T(7),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(7) <= ((viccy/rline_cnt(7) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND 
	NOT viccy/last_line_of_screen AND 
	viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));

FTCPE_viccy/rline_cnt8: FTCPE port map (viccy/rline_cnt(8),viccy/rline_cnt_T(8),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(8) <= ((viccy/rline_cnt(8) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND NOT viccy/last_line_of_screen AND 
	viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));

FTCPE_viccy/rline_cnt9: FTCPE port map (viccy/rline_cnt(9),viccy/rline_cnt_T(9),NOT hsync,NOT nres,'0');
viccy/rline_cnt_T(9) <= ((viccy/rline_cnt(9) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(5) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/last_line_of_screen AND 
	viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2));


viccy/rline_cnt_Madd__add0000__and0003/viccy/rline_cnt_Madd__add0000__and0003_D2 <= (viccy/rline_cnt(0) AND viccy/rline_cnt(4) AND 
	viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND viccy/rline_cnt(3));

FDCPE_viccy/rows_per_char3: FDCPE port map (viccy/rows_per_char(3),viccy/rows_per_char_D(3),viccy/rows_per_char_C(3),NOT nres,'0');
viccy/rows_per_char_D(3) <= ((D(3).PIN AND $OpTx$FX_DC$481)
	OR (viccy/rows_per_char(3) AND NOT $OpTx$FX_DC$481));
viccy/rows_per_char_C(3) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/slot_cnt0: FDCPE port map (viccy/slot_cnt(0),viccy/slot_cnt_D(0),slotclk,NOT nres,'0');
viccy/slot_cnt_D(0) <= (NOT viccy/slot_cnt(0) AND NOT viccy/last_slot_of_line);

FDCPE_viccy/slot_cnt1: FDCPE port map (viccy/slot_cnt(1),viccy/slot_cnt_D(1),slotclk,NOT nres,'0');
viccy/slot_cnt_D(1) <= ((viccy/slot_cnt(0) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt2: FTCPE port map (viccy/slot_cnt(2),viccy/slot_cnt_T(2),slotclk,NOT nres,'0');
viccy/slot_cnt_T(2) <= ((viccy/slot_cnt(2) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt3: FTCPE port map (viccy/slot_cnt(3),viccy/slot_cnt_T(3),slotclk,NOT nres,'0');
viccy/slot_cnt_T(3) <= ((viccy/slot_cnt(3) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt4: FTCPE port map (viccy/slot_cnt(4),viccy/slot_cnt_T(4),slotclk,NOT nres,'0');
viccy/slot_cnt_T(4) <= ((viccy/slot_cnt(4) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(3) AND viccy/slot_cnt(1) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt5: FTCPE port map (viccy/slot_cnt(5),viccy/slot_cnt_T(5),slotclk,NOT nres,'0');
viccy/slot_cnt_T(5) <= ((viccy/slot_cnt(5) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(0) AND 
	viccy/slot_cnt(2) AND viccy/slot_cnt(3) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt6: FTCPE port map (viccy/slot_cnt(6),viccy/slot_cnt_T(6),slotclk,NOT nres,'0');
viccy/slot_cnt_T(6) <= ((viccy/slot_cnt(6) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(4) AND viccy/slot_cnt(0) AND 
	viccy/slot_cnt(2) AND viccy/slot_cnt(3) AND viccy/slot_cnt(5) AND 
	viccy/slot_cnt(1) AND NOT viccy/last_slot_of_line));

FDCPE_viccy/sr_load_d: FDCPE port map (viccy/sr_load_d,sr_load,q50m,'0','0');

FDCPE_viccy/v_enable: FDCPE port map (viccy/v_enable,viccy/v_enable_D,hsync,'0','0');
viccy/v_enable_D <= ((viccy/rows_per_char(3) AND NOT viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND 
	NOT viccy/rline_cnt(3) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(7) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND NOT viccy/rline_cnt(6) AND 
	NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND 
	NOT viccy/rline_cnt(6) AND NOT viccy/rline_cnt(9)));

FDCPE_viccy/vid_addr0: FDCPE port map (viccy/vid_addr(0),viccy/vid_addr_D(0),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(0) <= ((NOT viccy/vid_addr(0) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr1: FDCPE port map (viccy/vid_addr(1),viccy/vid_addr_D(1),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(1) <= ((viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(1) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr2: FTCPE port map (viccy/vid_addr(2),viccy/vid_addr_T(2),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(2) <= ((viccy/vid_addr(2) AND NOT viccy/vid_addr_hold(2) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(2) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(2) AND viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line));

FTCPE_viccy/vid_addr3: FTCPE port map (viccy/vid_addr(3),viccy/vid_addr_T(3),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(3) <= ((viccy/vid_addr(3) AND NOT viccy/vid_addr_hold(3) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(3) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(3) AND viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr4: FTCPE port map (viccy/vid_addr(4),viccy/vid_addr_T(4),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(4) <= ((viccy/vid_addr(4) AND NOT viccy/vid_addr_hold(4) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(4) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(4) AND viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr5: FTCPE port map (viccy/vid_addr(5),viccy/vid_addr_T(5),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(5) <= ((viccy/vid_addr(5) AND NOT viccy/vid_addr_hold(5) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(5) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(5) AND viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr6: FTCPE port map (viccy/vid_addr(6),viccy/vid_addr_T(6),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(6) <= ((viccy/vid_addr(6) AND NOT viccy/vid_addr_hold(6) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(6) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(6) AND viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr7: FTCPE port map (viccy/vid_addr(7),viccy/vid_addr_T(7),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(7) <= ((viccy/vid_addr(7) AND NOT viccy/vid_addr_hold(7) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(7) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(7) AND viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr8: FTCPE port map (viccy/vid_addr(8),viccy/vid_addr_T(8),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(8) <= ((viccy/vid_addr(8) AND NOT viccy/vid_addr_hold(8) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(8) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(8) AND viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr9: FDCPE port map (viccy/vid_addr(9),viccy/vid_addr_D(9),NOT slotclk,NOT nres,'0');
viccy/vid_addr_D(9) <= ((viccy/vid_addr(9) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND NOT viccy/last_slot_of_line AND 
	NOT viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (NOT viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr10: FTCPE port map (viccy/vid_addr(10),viccy/vid_addr_T(10),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(10) <= ((viccy/vid_addr(10) AND NOT viccy/vid_addr_hold(10) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(10) AND viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr11: FTCPE port map (viccy/vid_addr(11),viccy/vid_addr_T(11),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(11) <= ((viccy/vid_addr(11) AND NOT viccy/vid_addr_hold(11) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(11) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(11) AND viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr12: FTCPE port map (viccy/vid_addr(12),viccy/vid_addr_T(12),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(12) <= ((viccy/vid_addr(12) AND NOT viccy/vid_addr_hold(12) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(12) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(12) AND viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr13: FTCPE port map (viccy/vid_addr(13),viccy/vid_addr_T(13),NOT slotclk,NOT nres,'0');
viccy/vid_addr_T(13) <= ((viccy/vid_addr(13) AND NOT viccy/vid_addr_hold(13) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(13) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(13) AND viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FDCPE_viccy/vid_addr_hold0: FDCPE port map (viccy/vid_addr_hold(0),viccy/vid_addr_hold_D(0),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(0) <= ((viccy/vid_addr_hold(0) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(0) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold1: FDCPE port map (viccy/vid_addr_hold(1),viccy/vid_addr_hold_D(1),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(1) <= ((viccy/vid_addr_hold(1) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(1) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold2: FDCPE port map (viccy/vid_addr_hold(2),viccy/vid_addr_hold_D(2),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(2) <= ((viccy/vid_addr_hold(2) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(2) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold3: FDCPE port map (viccy/vid_addr_hold(3),viccy/vid_addr_hold_D(3),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(3) <= ((viccy/vid_addr_hold(3) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(3) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold4: FDCPE port map (viccy/vid_addr_hold(4),viccy/vid_addr_hold_D(4),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(4) <= ((viccy/vid_addr_hold(4) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(4) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold5: FDCPE port map (viccy/vid_addr_hold(5),viccy/vid_addr_hold_D(5),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(5) <= ((viccy/vid_addr_hold(5) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(5) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold6: FDCPE port map (viccy/vid_addr_hold(6),viccy/vid_addr_hold_D(6),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(6) <= ((viccy/vid_addr_hold(6) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(6) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold7: FDCPE port map (viccy/vid_addr_hold(7),viccy/vid_addr_hold_D(7),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(7) <= ((viccy/vid_addr_hold(7) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(7) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold8: FDCPE port map (viccy/vid_addr_hold(8),viccy/vid_addr_hold_D(8),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(8) <= ((viccy/vid_addr_hold(8) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(8) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold9: FDCPE port map (viccy/vid_addr_hold(9),viccy/vid_addr_hold_D(9),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(9) <= ((viccy/vid_addr_hold(9) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(9) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold10: FDCPE port map (viccy/vid_addr_hold(10),viccy/vid_addr_hold_D(10),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(10) <= ((viccy/vid_addr_hold(10) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(2) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(10) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold11: FDCPE port map (viccy/vid_addr_hold(11),viccy/vid_addr_hold_D(11),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(11) <= ((viccy/vid_addr_hold(11) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(3) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(11) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold12: FDCPE port map (viccy/vid_addr_hold(12),viccy/vid_addr_hold_D(12),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(12) <= ((viccy/vid_addr_hold(12) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(4) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(12) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold13: FDCPE port map (viccy/vid_addr_hold(13),viccy/vid_addr_hold_D(13),slotclk,NOT nres,'0');
viccy/vid_addr_hold_D(13) <= ((viccy/vid_addr_hold(13) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vpage(5) AND viccy/last_vis_slot_of_line AND 
	viccy/last_line_of_screen)
	OR (viccy/vid_addr(13) AND viccy/last_vis_slot_of_line AND 
	NOT viccy/last_line_of_screen AND viccy/last_line_of_char));

FDCPE_viccy/vpage2: FDCPE port map (viccy/vpage(2),viccy/vpage_D(2),viccy/vpage_C(2),NOT nres,'0');
viccy/vpage_D(2) <= ((D(2).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(2) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(2) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage3: FDCPE port map (viccy/vpage(3),viccy/vpage_D(3),viccy/vpage_C(3),NOT nres,'0');
viccy/vpage_D(3) <= ((D(3).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(3) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(3) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage4: FDCPE port map (viccy/vpage(4),viccy/vpage_D(4),viccy/vpage_C(4),'0',NOT nres);
viccy/vpage_D(4) <= ((D(4).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(4) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(4) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage5: FDCPE port map (viccy/vpage(5),viccy/vpage_D(5),viccy/vpage_C(5),NOT nres,'0');
viccy/vpage_D(5) <= ((D(5).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(5) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(5) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage6: FDCPE port map (viccy/vpage(6),viccy/vpage_D(6),viccy/vpage_C(6),NOT nres,'0');
viccy/vpage_D(6) <= ((D(6).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(6) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(6) <= (NOT dot2clk AND do_cpu);

FDCPE_viccy/vpage7: FDCPE port map (viccy/vpage(7),viccy/vpage_D(7),viccy/vpage_C(7),NOT nres,'0');
viccy/vpage_D(7) <= ((D(7).PIN AND 
	viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2)
	OR (viccy/vpage(7) AND 
	NOT viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2));
viccy/vpage_C(7) <= (NOT dot2clk AND do_cpu);


viccy/vpage_2_or0000/viccy/vpage_2_or0000_D2 <= ((NOT rwb AND A(0) AND NOT viccy/crtc_reg(0) AND 
	viccy/crtc_reg(1) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND A(0) AND NOT viccy/crtc_reg(0) AND 
	viccy/crtc_reg(1) AND NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND A(15) AND A(14) AND A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND 
	NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND 
	A(7) AND NOT A(6) AND NOT A(4) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND vda AND 
	$OpTx$INV$398));

FDCPE_vidblock0: FDCPE port map (vidblock(0),vidblock_D(0),NOT phi2,NOT nres,'0');
vidblock_D(0) <= ((D(4).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (vidblock(0) AND NOT vidblock_or0000/vidblock_or0000_D2));

FDCPE_vidblock1: FDCPE port map (vidblock(1),vidblock_D(1),NOT phi2,NOT nres,'0');
vidblock_D(1) <= ((D(5).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (vidblock(1) AND NOT vidblock_or0000/vidblock_or0000_D2));

FDCPE_vidblock2: FDCPE port map (vidblock(2),vidblock_D(2),NOT phi2,NOT nres,'0');
vidblock_D(2) <= ((D(6).PIN AND vidblock_or0000/vidblock_or0000_D2)
	OR (vidblock(2) AND NOT vidblock_or0000/vidblock_or0000_D2));


vidblock_or0000/vidblock_or0000_D2 <= ((NOT rwb AND A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND A(1) AND NOT A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vda AND 
	$OpTx$INV$398));

FDCPE_vis_80_in: FDCPE port map (vis_80_in,vis_80_in_D,NOT phi2,NOT nres,'0');
vis_80_in_D <= ((D(1).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (vis_80_in AND NOT movesync_or0000/movesync_or0000_D2));

FDCPE_vis_double_in: FDCPE port map (vis_double_in,vis_double_in_D,NOT phi2,NOT nres,'0');
vis_double_in_D <= ((D(3).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (vis_double_in AND 
	NOT movesync_or0000/movesync_or0000_D2));

FDCPE_vis_enable: FDCPE port map (vis_enable,vis_enable_D,NOT phi2,'0',NOT nres);
vis_enable_D <= ((NOT D(7).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (vis_enable AND NOT movesync_or0000/movesync_or0000_D2));

FDCPE_vis_hires_in: FDCPE port map (vis_hires_in,vis_hires_in_D,NOT phi2,NOT nres,'0');
vis_hires_in_D <= ((D(0).PIN AND movesync_or0000/movesync_or0000_D2)
	OR (vis_hires_in AND NOT movesync_or0000/movesync_or0000_D2));

FDCPE_vsync: FDCPE port map (vsync,vsync_D,NOT hsync,'0','0',nres);
vsync_D <= ((viccy/rows_per_char(3) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rows_per_char(3) AND NOT movesync AND 
	viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/rows_per_char(3) AND viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (movesync AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(4) AND viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));

FDCPE_wait_int_d: FDCPE port map (wait_int_d,wait_int_d_D,dot2clk,'0',NOT nres);
wait_int_d_D <= (is_cpu AND NOT ipl);

FDCPE_wp_rom9: FDCPE port map (wp_rom9,wp_rom9_D,NOT phi2,NOT nres,'0');
wp_rom9_D <= ((D(4).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_rom9 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romA: FDCPE port map (wp_romA,wp_romA_D,NOT phi2,NOT nres,'0');
wp_romA_D <= ((D(5).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romA AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FTCPE_wp_romB: FTCPE port map (wp_romB,wp_romB_T,NOT phi2,'0','0');
wp_romB_T <= ((nres AND D(6).PIN AND NOT wp_romB AND 
	wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (nres AND NOT D(6).PIN AND wp_romB AND 
	wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romPET: FDCPE port map (wp_romPET,wp_romPET_D,NOT phi2,NOT nres,'0');
wp_romPET_D <= ((D(7).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romPET AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));


wp_romPET_or0000/wp_romPET_or0000_D2 <= ((NOT rwb AND NOT A(1) AND A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vpa AND 
	$OpTx$INV$398)
	OR (NOT rwb AND NOT A(1) AND A(0) AND NOT mappy/bankl(0) AND 
	NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND NOT mappy/bankl(3) AND A(15) AND A(14) AND 
	A(13) AND NOT A(12) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND 
	NOT mappy/bankl(6) AND NOT mappy/bankl(7) AND A(11) AND NOT A(5) AND NOT A(7) AND NOT A(6) AND 
	NOT A(4) AND NOT A(2) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND NOT A(3) AND vda AND 
	$OpTx$INV$398));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC95288XL-6-TQ144


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 VCC                              73 VCC                           
  2 nframsel                         74 vpa                           
  3 PGND                             75 vda                           
  4 VA<17>                           76 PGND                          
  5 PGND                             77 D<7>                          
  6 PGND                             78 D<6>                          
  7 VA<14>                           79 D<5>                          
  8 VCC                              80 D<4>                          
  9 VA<16>                           81 D<3>                          
 10 VA<15>                           82 D<2>                          
 11 VA<18>                           83 D<1>                          
 12 PGND                             84 VCC                           
 13 PGND                             85 A<15>                         
 14 PGND                             86 D<0>                          
 15 PGND                             87 A<13>                         
 16 PGND                             88 A<14>                         
 17 PGND                             89 GND                           
 18 GND                              90 GND                           
 19 PGND                             91 A<12>                         
 20 rwb                              92 A<11>                         
 21 mlb                              93 A<10>                         
 22 vpb                              94 A<9>                          
 23 PGND                             95 A<8>                          
 24 mx                               96 A<7>                          
 25 PGND                             97 A<6>                          
 26 PGND                             98 A<5>                          
 27 PGND                             99 GND                           
 28 PGND                            100 A<4>                          
 29 GND                             101 A<3>                          
 30 q50m                            102 A<2>                          
 31 PGND                            103 A<1>                          
 32 PGND                            104 A<0>                          
 33 PGND                            105 FA<16>                        
 34 spi_nsel2                       106 FA<17>                        
 35 PGND                            107 FA<18>                        
 36 GND                             108 GND                           
 37 VCC                             109 VCC                           
 38 phi2_io                         110 VD<3>                         
 39 spi_nsel3                       111 VD<2>                         
 40 spi_nsel4                       112 VD<4>                         
 41 dena                            113 VD<1>                         
 42 VCC                             114 GND                           
 43 pet_vsync                       115 VD<5>                         
 44 PGND                            116 VD<0>                         
 45 dclk                            117 PGND                          
 46 pxl                             118 spi_in3                       
 47 GND                             119 VA<0>                         
 48 hsync                           120 VA<1>                         
 49 vsync                           121 VA<2>                         
 50 spi_clk                         122 TDO                           
 51 PGND                            123 GND                           
 52 nflash                          124 VA<10>                        
 53 PGND                            125 VA<3>                         
 54 spi_out                         126 nvramsel                      
 55 VCC                             127 VCC                           
 56 PGND                            128 PGND                          
 57 phi2                            129 spi_in1                       
 58 VD<6>                           130 VA<4>                         
 59 VD<7>                           131 VA<5>                         
 60 spi_nsel5                       132 VA<9>                         
 61 PGND                            133 VA<6>                         
 62 GND                             134 VA<11>                        
 63 TDI                             135 VA<8>                         
 64 PGND                            136 VA<7>                         
 65 TMS                             137 VA<13>                        
 66 nsel4                           138 VA<12>                        
 67 TCK                             139 ramrwb                        
 68 nsel2                           140 PGND                          
 69 nsel1                           141 VCC                           
 70 graphic                         142 e                             
 71 FA<15>                          143 nres                          
 72 GND                             144 GND                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc95288xl-6-TQ144
Optimization Method                         : DENSITY
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : ON
Keep Unused Inputs                          : ON
Slew Rate                                   : SLOW
Power Mode                                  : AUTO
Ground on Unused IOs                        : ON
Set I/O Pin Termination                     : FLOAT
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 90
